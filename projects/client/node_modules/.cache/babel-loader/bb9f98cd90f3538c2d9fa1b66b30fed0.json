{"ast":null,"code":"'use client';\n\nimport { findToast, getToastPosition } from \"./chunk-LDADOVIM.mjs\";\nimport { getToastPlacement } from \"./chunk-LHPMGMGT.mjs\"; // src/toast.tsx\n\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@chakra-ui/alert\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\"; // src/toast.store.ts\n\nvar initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": []\n};\nvar toastStore = createStore(initialState);\n\nfunction createStore(initialState2) {\n  let state = initialState2;\n  const listeners = /* @__PURE__ */new Set();\n\n  const setState = setStateFn => {\n    state = setStateFn(state);\n    listeners.forEach(l => l());\n  };\n\n  return {\n    getState: () => state,\n    subscribe: listener => {\n      listeners.add(listener);\n      return () => {\n        setState(() => initialState2);\n        listeners.delete(listener);\n      };\n    },\n\n    /**\n     * Delete a toast record at its position\n     */\n    removeToast: (id, position) => {\n      setState(prevState => ({ ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter(toast => toast.id != id)\n      }));\n    },\n    notify: (message, options) => {\n      const toast = createToast(message, options);\n      const {\n        position,\n        id\n      } = toast;\n      setState(prevToasts => {\n        var _a, _b;\n\n        const isTop = position.includes(\"top\");\n        const toasts = isTop ? [toast, ...((_a = prevToasts[position]) != null ? _a : [])] : [...((_b = prevToasts[position]) != null ? _b : []), toast];\n        return { ...prevToasts,\n          [position]: toasts\n        };\n      });\n      return id;\n    },\n    update: (id, options) => {\n      if (!id) return;\n      setState(prevState => {\n        const nextState = { ...prevState\n        };\n        const {\n          position,\n          index\n        } = findToast(nextState, id);\n\n        if (position && index !== -1) {\n          nextState[position][index] = { ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options)\n          };\n        }\n\n        return nextState;\n      });\n    },\n    closeAll: function () {\n      let {\n        positions\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      setState(prev => {\n        const allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        const positionsToClose = positions != null ? positions : allPositions;\n        return positionsToClose.reduce((acc, position) => {\n          acc[position] = prev[position].map(toast => ({ ...toast,\n            requestClose: true\n          }));\n          return acc;\n        }, { ...prev\n        });\n      });\n    },\n    close: id => {\n      setState(prevState => {\n        const position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return { ...prevState,\n          [position]: prevState[position].map(toast => {\n            if (toast.id == id) {\n              return { ...toast,\n                requestClose: true\n              };\n            }\n\n            return toast;\n          })\n        };\n      });\n    },\n    isActive: id => Boolean(findToast(toastStore.getState(), id).position)\n  };\n}\n\nvar counter = 0;\n\nfunction createToast(message) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _a, _b;\n\n  counter += 1;\n  const id = (_a = options.id) != null ? _a : counter;\n  const position = (_b = options.position) != null ? _b : \"bottom\";\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle\n  };\n} // src/toast.tsx\n\n\nimport { jsx, jsxs } from \"react/jsx-runtime\";\n\nvar Toast = props => {\n  const {\n    status,\n    variant = \"solid\",\n    id,\n    title,\n    isClosable,\n    onClose,\n    description,\n    colorScheme,\n    icon\n  } = props;\n  const ids = id ? {\n    root: `toast-${id}`,\n    title: `toast-${id}-title`,\n    description: `toast-${id}-description`\n  } : void 0;\n  return /* @__PURE__ */jsxs(Alert, {\n    addRole: false,\n    status,\n    variant,\n    id: ids == null ? void 0 : ids.root,\n    alignItems: \"start\",\n    borderRadius: \"md\",\n    boxShadow: \"lg\",\n    paddingEnd: 8,\n    textAlign: \"start\",\n    width: \"auto\",\n    colorScheme,\n    children: [/* @__PURE__ */jsx(AlertIcon, {\n      children: icon\n    }), /* @__PURE__ */jsxs(chakra.div, {\n      flex: \"1\",\n      maxWidth: \"100%\",\n      children: [title && /* @__PURE__ */jsx(AlertTitle, {\n        id: ids == null ? void 0 : ids.title,\n        children: title\n      }), description && /* @__PURE__ */jsx(AlertDescription, {\n        id: ids == null ? void 0 : ids.description,\n        display: \"block\",\n        children: description\n      })]\n    }), isClosable && /* @__PURE__ */jsx(CloseButton, {\n      size: \"sm\",\n      onClick: onClose,\n      position: \"absolute\",\n      insetEnd: 1,\n      top: 1\n    })]\n  });\n};\n\nfunction createRenderToast() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    render,\n    toastComponent: ToastComponent = Toast\n  } = options;\n\n  const renderToast = props => {\n    if (typeof render === \"function\") {\n      return render({ ...props,\n        ...options\n      });\n    }\n\n    return /* @__PURE__ */jsx(ToastComponent, { ...props,\n      ...options\n    });\n  };\n\n  return renderToast;\n}\n\nfunction createToastFn(dir, defaultOptions) {\n  const normalizeToastOptions = options => {\n    var _a;\n\n    return { ...defaultOptions,\n      ...options,\n      position: getToastPlacement((_a = options == null ? void 0 : options.position) != null ? _a : defaultOptions == null ? void 0 : defaultOptions.position, dir)\n    };\n  };\n\n  const toast = options => {\n    const normalizedToastOptions = normalizeToastOptions(options);\n    const Message = createRenderToast(normalizedToastOptions);\n    return toastStore.notify(Message, normalizedToastOptions);\n  };\n\n  toast.update = (id, options) => {\n    toastStore.update(id, normalizeToastOptions(options));\n  };\n\n  toast.promise = (promise, options) => {\n    const id = toast({ ...options.loading,\n      status: \"loading\",\n      duration: null\n    });\n    promise.then(data => toast.update(id, {\n      status: \"success\",\n      duration: 5e3,\n      ...runIfFn(options.success, data)\n    })).catch(error => toast.update(id, {\n      status: \"error\",\n      duration: 5e3,\n      ...runIfFn(options.error, error)\n    }));\n  };\n\n  toast.closeAll = toastStore.closeAll;\n  toast.close = toastStore.close;\n  toast.isActive = toastStore.isActive;\n  return toast;\n}\n\nexport { Toast, createRenderToast, createToastFn, toastStore };","map":{"version":3,"mappings":"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","names":["Alert","AlertDescription","AlertIcon","AlertTitle","chakra","CloseButton","runIfFn","initialState","top","bottom","toastStore","createStore","state","listeners","Set","setState","setStateFn","forEach","l","getState","subscribe","listener","add","delete","removeToast","id","position","prevState","filter","toast","notify","message","options","createToast","prevToasts","isTop","includes","toasts","_a","_b","update","nextState","index","findToast","createRenderToast","closeAll","positions","prev","allPositions","positionsToClose","reduce","acc","map","requestClose","close","getToastPosition","isActive","Boolean","counter","duration","onCloseComplete","onRequestRemove","String","status","containerStyle","jsxs","Toast","props","variant","title","isClosable","onClose","description","colorScheme","icon","ids","root","addRole","alignItems","borderRadius","boxShadow","paddingEnd","textAlign","width","children","div","flex","maxWidth","display","size","onClick","insetEnd","render","toastComponent","ToastComponent","renderToast","createToastFn","dir","defaultOptions","normalizeToastOptions","getToastPlacement","normalizedToastOptions","Message","promise","loading","then","data","success","catch","error"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\toast\\src\\toast.tsx","C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\toast\\src\\toast.store.ts"],"sourcesContent":["import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertProps,\n  AlertTitle,\n} from \"@chakra-ui/alert\"\nimport { chakra } from \"@chakra-ui/system\"\nimport { CloseButton } from \"@chakra-ui/close-button\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport type { UseToastOptions } from \"./use-toast\"\nimport type { RenderProps, ToastId } from \"./toast.types\"\nimport { getToastPlacement } from \"./toast.placement\"\nimport { toastStore } from \"./toast.store\"\n\nexport interface ToastProps\n  extends UseToastOptions,\n    Omit<AlertProps, keyof UseToastOptions> {\n  onClose?: () => void\n}\n\n/**\n * The `Toast` component is used to give feedback to users after an action has taken place.\n *\n * @see Docs https://chakra-ui.com/docs/components/toast\n */\nexport const Toast: React.FC<ToastProps> = (props) => {\n  const {\n    status,\n    variant = \"solid\",\n    id,\n    title,\n    isClosable,\n    onClose,\n    description,\n    colorScheme,\n    icon,\n  } = props\n\n  const ids = id\n    ? {\n        root: `toast-${id}`,\n        title: `toast-${id}-title`,\n        description: `toast-${id}-description`,\n      }\n    : undefined\n\n  return (\n    <Alert\n      addRole={false}\n      status={status}\n      variant={variant}\n      id={ids?.root}\n      alignItems=\"start\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      paddingEnd={8}\n      textAlign=\"start\"\n      width=\"auto\"\n      colorScheme={colorScheme}\n    >\n      <AlertIcon>{icon}</AlertIcon>\n      <chakra.div flex=\"1\" maxWidth=\"100%\">\n        {title && <AlertTitle id={ids?.title}>{title}</AlertTitle>}\n        {description && (\n          <AlertDescription id={ids?.description} display=\"block\">\n            {description}\n          </AlertDescription>\n        )}\n      </chakra.div>\n      {isClosable && (\n        <CloseButton\n          size=\"sm\"\n          onClick={onClose}\n          position=\"absolute\"\n          insetEnd={1}\n          top={1}\n        />\n      )}\n    </Alert>\n  )\n}\n\nexport function createRenderToast(\n  options: UseToastOptions & {\n    toastComponent?: React.FC<ToastProps>\n  } = {},\n) {\n  const { render, toastComponent: ToastComponent = Toast } = options\n  const renderToast: React.FC<RenderProps> = (props) => {\n    if (typeof render === \"function\") {\n      return render({ ...props, ...options }) as JSX.Element\n    }\n    return <ToastComponent {...props} {...options} />\n  }\n  return renderToast\n}\n\ntype UseToastPromiseOption = Omit<UseToastOptions, \"status\">\n\nexport function createToastFn(\n  dir: \"ltr\" | \"rtl\",\n  defaultOptions?: UseToastOptions,\n) {\n  const normalizeToastOptions = (options?: UseToastOptions) => ({\n    ...defaultOptions,\n    ...options,\n    position: getToastPlacement(\n      options?.position ?? defaultOptions?.position,\n      dir,\n    ),\n  })\n\n  const toast = (options?: UseToastOptions) => {\n    const normalizedToastOptions = normalizeToastOptions(options)\n    const Message = createRenderToast(normalizedToastOptions)\n    return toastStore.notify(Message, normalizedToastOptions)\n  }\n\n  toast.update = (id: ToastId, options: Omit<UseToastOptions, \"id\">) => {\n    toastStore.update(id, normalizeToastOptions(options))\n  }\n\n  toast.promise = <Result extends any, Err extends Error = Error>(\n    promise: Promise<Result>,\n    options: {\n      success: MaybeFunction<UseToastPromiseOption, [Result]>\n      error: MaybeFunction<UseToastPromiseOption, [Err]>\n      loading: UseToastPromiseOption\n    },\n  ) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null,\n    })\n\n    promise\n      .then((data) =>\n        toast.update(id, {\n          status: \"success\",\n          duration: 5_000,\n          ...runIfFn(options.success, data),\n        }),\n      )\n      .catch((error) =>\n        toast.update(id, {\n          status: \"error\",\n          duration: 5_000,\n          ...runIfFn(options.error, error),\n        }),\n      )\n  }\n\n  toast.closeAll = toastStore.closeAll\n  toast.close = toastStore.close\n  toast.isActive = toastStore.isActive\n\n  return toast\n}\n\nexport type CreateToastFnReturn = ReturnType<typeof createToastFn>\n\ntype MaybeFunction<T, Args extends unknown[] = []> = T | ((...args: Args) => T)\n","import { createRenderToast } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { CreateToastOptions, ToastMethods } from \"./toast.provider\"\nimport type { ToastId, ToastMessage, ToastState } from \"./toast.types\"\nimport { findToast, getToastPosition } from \"./toast.utils\"\n\ntype ToastStore = ToastMethods & {\n  getState: () => ToastState\n  subscribe: (onStoreChange: () => void) => () => void\n  removeToast: (id: ToastId, position: ToastPosition) => void\n}\n\nconst initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": [],\n}\n\n/**\n * Store to track all the toast across all positions\n */\nexport const toastStore = createStore(initialState)\n\nfunction createStore(initialState: ToastState): ToastStore {\n  let state = initialState\n  const listeners = new Set<() => void>()\n\n  const setState = (setStateFn: (values: ToastState) => ToastState) => {\n    state = setStateFn(state)\n    listeners.forEach((l) => l())\n  }\n\n  return {\n    getState: () => state,\n\n    subscribe: (listener) => {\n      listeners.add(listener)\n      return () => {\n        // Delete all toasts on unmount\n        setState(() => initialState)\n        listeners.delete(listener)\n      }\n    },\n\n    /**\n     * Delete a toast record at its position\n     */\n    removeToast: (id, position) => {\n      setState((prevState) => ({\n        ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter((toast) => toast.id != id),\n      }))\n    },\n\n    notify: (message, options) => {\n      const toast = createToast(message, options)\n      const { position, id } = toast\n\n      setState((prevToasts) => {\n        const isTop = position.includes(\"top\")\n\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n        const toasts = isTop\n          ? [toast, ...(prevToasts[position] ?? [])]\n          : [...(prevToasts[position] ?? []), toast]\n\n        return {\n          ...prevToasts,\n          [position]: toasts,\n        }\n      })\n\n      return id\n    },\n\n    update: (id, options) => {\n      if (!id) return\n\n      setState((prevState) => {\n        const nextState = { ...prevState }\n        const { position, index } = findToast(nextState, id)\n\n        if (position && index !== -1) {\n          nextState[position][index] = {\n            ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options),\n          }\n        }\n\n        return nextState\n      })\n    },\n\n    closeAll: ({ positions } = {}) => {\n      // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n      setState((prev) => {\n        const allPositions: ToastPosition[] = [\n          \"bottom\",\n          \"bottom-right\",\n          \"bottom-left\",\n          \"top\",\n          \"top-left\",\n          \"top-right\",\n        ]\n\n        const positionsToClose = positions ?? allPositions\n\n        return positionsToClose.reduce(\n          (acc, position) => {\n            acc[position] = prev[position].map((toast) => ({\n              ...toast,\n              requestClose: true,\n            }))\n\n            return acc\n          },\n          { ...prev } as ToastState,\n        )\n      })\n    },\n\n    close: (id) => {\n      setState((prevState) => {\n        const position = getToastPosition(prevState, id)\n\n        if (!position) return prevState\n\n        return {\n          ...prevState,\n          [position]: prevState[position].map((toast) => {\n            // id may be string or number\n            // eslint-disable-next-line eqeqeq\n            if (toast.id == id) {\n              return {\n                ...toast,\n                requestClose: true,\n              }\n            }\n\n            return toast\n          }),\n        }\n      })\n    },\n\n    isActive: (id) => Boolean(findToast(toastStore.getState(), id).position),\n  }\n}\n\n/**\n * Static id counter to create unique ids\n * for each toast\n */\nlet counter = 0\n\n/**\n * Create properties for a new toast\n */\nfunction createToast(message: ToastMessage, options: CreateToastOptions = {}) {\n  counter += 1\n  const id = options.id ?? counter\n\n  const position = options.position ?? \"bottom\"\n\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client';\n\nimport { useModalContext, useModalStyles } from \"./chunk-YEXLRKHC.mjs\"; // src/modal-header.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useEffect } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalHeader = forwardRef((props, ref) => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const {\n    headerId,\n    setHeaderMounted\n  } = useModalContext();\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => setHeaderMounted(false);\n  }, [setHeaderMounted]);\n\n  const _className = cx(\"chakra-modal__header\", className);\n\n  const styles = useModalStyles();\n  const headerStyles = {\n    flex: 0,\n    ...styles.header\n  };\n  return /* @__PURE__ */jsx(chakra.header, {\n    ref,\n    className: _className,\n    id: headerId,\n    ...rest,\n    __css: headerStyles\n  });\n});\nModalHeader.displayName = \"ModalHeader\";\nexport { ModalHeader };","map":{"version":3,"mappings":";;;;AAAA,SAASA,EAAT,QAAmB,yBAAnB;AACA,SAGEC,MAHF,EAIEC,UAJF,QAKO,mBALP;AAMA,SAASC,SAAT,QAA0B,OAA1B;AAqCM;AAxBC,IAAMC,cAAcF,WACzB,CAACG,KAAD,EAAQC,GAAR,KAAgB;EACd,MAAM;IAAEC,SAAF;IAAa,GAAGC;EAAhB,IAAyBH,KAA/B;EAEA,MAAM;IAAEI,QAAF;IAAYC;EAAZ,IAAiCC,iBAAvC;EAMAR,UAAU,MAAM;IACdO,iBAAiB,IAAjB;IACA,OAAO,MAAMA,iBAAiB,KAAjB,CAAb;EACF,CAHA,EAGG,CAACA,gBAAD,CAHH;;EAKA,MAAME,aAAaZ,GAAG,sBAAH,EAA2BO,SAA3B,CAAnB;;EAEA,MAAMM,SAASC,gBAAf;EACA,MAAMC,eAAkC;IACtCC,MAAM,CADgC;IAEtC,GAAGH,OAAOI;EAF4B,CAAxC;EAKA,OACE,mBAAChB,OAAOgB,MAAR,EAAC;IACCX,GADD;IAECC,WAAWK,UAFZ;IAGCM,IAAIT,QAHL;IAIE,GAAGD,IAJL;IAKCW,OAAOJ;EALR,CAAD,CADF;AASF,CAhCyB,CAApB;AAmCPX,YAAYgB,WAAZ,GAA0B,aAA1B","names":["cx","chakra","forwardRef","useEffect","ModalHeader","props","ref","className","rest","headerId","setHeaderMounted","useModalContext","_className","styles","useModalStyles","headerStyles","flex","header","id","__css","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\modal\\src\\modal-header.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useEffect } from \"react\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport interface ModalHeaderProps extends HTMLChakraProps<\"header\"> {}\n\n/**\n * ModalHeader\n *\n * React component that houses the title of the modal.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalHeader = forwardRef<ModalHeaderProps, \"header\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n\n    const { headerId, setHeaderMounted } = useModalContext()\n\n    /**\n     * Notify us if this component was rendered or used,\n     * so we can append `aria-labelledby` automatically\n     */\n    useEffect(() => {\n      setHeaderMounted(true)\n      return () => setHeaderMounted(false)\n    }, [setHeaderMounted])\n\n    const _className = cx(\"chakra-modal__header\", className)\n\n    const styles = useModalStyles()\n    const headerStyles: SystemStyleObject = {\n      flex: 0,\n      ...styles.header,\n    }\n\n    return (\n      <chakra.header\n        ref={ref}\n        className={_className}\n        id={headerId}\n        {...rest}\n        __css={headerStyles}\n      />\n    )\n  },\n)\n\nModalHeader.displayName = \"ModalHeader\"\n"]},"metadata":{},"sourceType":"module"}
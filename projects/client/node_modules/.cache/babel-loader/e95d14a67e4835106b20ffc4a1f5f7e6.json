{"ast":null,"code":"'use client';\n\nimport { TRANSITION_EASINGS, getSlideTransition, withDelay } from \"./chunk-6NHXDBFO.mjs\"; // src/slide.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: _ref => {\n    let {\n      direction,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n\n    var _a;\n\n    const {\n      exit: exitStyles\n    } = getSlideTransition({\n      direction\n    });\n    return { ...exitStyles,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: _ref2 => {\n    let {\n      direction,\n      transitionEnd,\n      transition,\n      delay\n    } = _ref2;\n\n    var _a;\n\n    const {\n      enter: enterStyles\n    } = getSlideTransition({\n      direction\n    });\n    return { ...enterStyles,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nvar Slide = forwardRef(function Slide2(props, ref) {\n  const {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    motionProps,\n    ...rest\n  } = props;\n  const transitionStyles = getSlideTransition({\n    direction\n  });\n  const computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    transitionEnd,\n    transition,\n    direction,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, { ...rest,\n      ref,\n      initial: \"exit\",\n      className: cx(\"chakra-slide\", className),\n      animate,\n      exit: \"exit\",\n      custom,\n      variants,\n      style: computedStyle,\n      ...motionProps\n    })\n  });\n});\nSlide.displayName = \"Slide\";\nexport { Slide };","map":{"version":3,"mappings":";;;;AAAA,SAASA,EAAT,QAAmB,yBAAnB;AACA,SACEC,eADF,EAGEC,MAHF,QAMO,eANP;AAOA,SAASC,UAAT,QAA2B,OAA3B;AA2FQ;AA/ER,IAAMC,oBAAoB;EACxBC,MAAM;IACJC,UAAU,IADN;IAEJC,MAAMC,mBAAmBC;EAFrB,CADkB;EAKxBC,OAAO;IACLC,MAAM,QADD;IAELC,SAAS,EAFJ;IAGLC,WAAW;EAHN;AALiB,CAA1B;AAYA,IAAMC,WAAmC;EACvCT,MAAM,QAAqD;IAAA,IAApD;MAAEU,SAAF;MAAaC,UAAb;MAAyBC,aAAzB;MAAwCC;IAAxC,CAAoD;;IAjC7D;;IAkCI,MAAM;MAAEb,MAAMc;IAAR,IAAuBC,mBAAmB;MAAEL;IAAF,CAAnB,CAA7B;IACA,OAAO,EACL,GAAGI,UADE;MAELH,aACEK,8CAAYhB,IADd,KACE,IADF,GACEgB,EADF,GACsBC,UAAUjB,IAAV,CAAeD,kBAAkBC,IAAjC,EAAuCa,KAAvC,CAHjB;MAILD,eAAeA,+CAAeZ;IAJzB,CAAP;EAMF,CATuC;EAUvCK,OAAO,SAAqD;IAAA,IAApD;MAAEK,SAAF;MAAaE,aAAb;MAA4BD,UAA5B;MAAwCE;IAAxC,CAAoD;;IA1C9D;;IA2CI,MAAM;MAAER,OAAOa;IAAT,IAAyBH,mBAAmB;MAAEL;IAAF,CAAnB,CAA/B;IACA,OAAO,EACL,GAAGQ,WADE;MAELP,aACEK,8CAAYX,KADd,KACE,IADF,GACEW,EADF,GACuBC,UAAUZ,KAAV,CAAgBN,kBAAkBM,KAAlC,EAAyCQ,KAAzC,CAHlB;MAILD,eAAeA,+CAAeP;IAJzB,CAAP;EAMF;AAlBuC,CAAzC;AAmCO,IAAMc,QAAQrB,WAAuC,SAASqB,MAAT,CAC1DC,KAD0D,EAE1DC,GAF0D,EAG1D;EACA,MAAM;IACJX,YAAY,OADR;IAEJY,KAFI;IAGJC,aAHI;IAIJC,IAAIC,MAJA;IAKJC,SALI;IAMJf,UANI;IAOJC,aAPI;IAQJC,KARI;IASJc,WATI;IAUJ,GAAGC;EAVC,IAWFR,KAXJ;EAaA,MAAMS,mBAAmBd,mBAAmB;IAAEL;EAAF,CAAnB,CAAzB;EACA,MAAMoB,gBAA6BC,OAAOC,MAAP,CACjC;IAAEC,UAAU;EAAZ,CADiC,EAEjCJ,iBAAiBI,QAFgB,EAGjCX,KAHiC,CAAnC;EAMA,MAAMY,OAAOX,gBAAgBE,UAAUF,aAA1B,GAA0C,IAAvD;EACA,MAAMY,UAAUV,UAAUF,aAAV,GAA0B,OAA1B,GAAoC,MAApD;EAEA,MAAMa,SAAS;IAAExB,aAAF;IAAiBD,UAAjB;IAA6BD,SAA7B;IAAwCG;EAAxC,CAAf;EAEA,OACE,mBAACjB,eAAD,EAAC;IAAgBwC,MAAhB;IACEC,kBACC,mBAACxC,OAAOyC,GAAR,EAAC,EACE,GAAGV,IADL;MAECP,GAFD;MAGCkB,SAAQ,MAHT;MAICb,WAAW/B,GAAG,cAAH,EAAmB+B,SAAnB,CAJZ;MAKCS,OALD;MAMCnC,MAAK,MANN;MAOCoC,MAPD;MAQC3B,QARD;MASCa,OAAOQ,aATR;MAUE,GAAGH;IAVL,CAAD;EAFH,CAAD,CADF;AAkBD,CA/CoB,CAAd;AAiDPR,MAAMqB,WAAN,GAAoB,OAApB","names":["cx","AnimatePresence","motion","forwardRef","defaultTransition","exit","duration","ease","TRANSITION_EASINGS","easeInOut","enter","type","damping","stiffness","variants","direction","transition","transitionEnd","delay","exitStyles","getSlideTransition","_a","withDelay","enterStyles","Slide","props","ref","style","unmountOnExit","in","isOpen","className","motionProps","rest","transitionStyles","computedStyle","Object","assign","position","show","animate","custom","children","div","initial","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\transition\\src\\slide.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as TVariants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  SlideDirection,\n  getSlideTransition,\n  TRANSITION_EASINGS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = getSlideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = getSlideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nexport const Slide = forwardRef<HTMLDivElement, SlideProps>(function Slide(\n  props,\n  ref,\n) {\n  const {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    motionProps,\n    ...rest\n  } = props\n\n  const transitionStyles = getSlideTransition({ direction })\n  const computedStyle: MotionStyle = Object.assign(\n    { position: \"fixed\" },\n    transitionStyles.position,\n    style,\n  )\n\n  const show = unmountOnExit ? isOpen && unmountOnExit : true\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n  const custom = { transitionEnd, transition, direction, delay }\n\n  return (\n    <AnimatePresence custom={custom}>\n      {show && (\n        <motion.div\n          {...rest}\n          ref={ref}\n          initial=\"exit\"\n          className={cx(\"chakra-slide\", className)}\n          animate={animate}\n          exit=\"exit\"\n          custom={custom}\n          variants={variants as TVariants}\n          style={computedStyle}\n          {...motionProps}\n        />\n      )}\n    </AnimatePresence>\n  )\n})\n\nSlide.displayName = \"Slide\"\n"]},"metadata":{},"sourceType":"module"}
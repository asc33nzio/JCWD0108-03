{"ast":null,"code":"'use client';\n\nimport { CheckboxGroupProvider } from \"./chunk-LYGBQ47X.mjs\";\nimport { useCheckboxGroup } from \"./chunk-TOQK4WO2.mjs\"; // src/checkbox-group.tsx\n\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\n\nfunction CheckboxGroup(props) {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    isDisabled\n  } = props;\n  const {\n    value,\n    onChange\n  } = useCheckboxGroup(props);\n  const group = useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */jsx(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\n\nCheckboxGroup.displayName = \"CheckboxGroup\";\nexport { CheckboxGroup };","map":{"version":3,"mappings":";;;;;AACA,SAASA,OAAT,QAAwB,OAAxB;AAiCS;;AAhBF,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;EACvD,MAAM;IAAEC,WAAF;IAAeC,IAAf;IAAqBC,OAArB;IAA8BC,QAA9B;IAAwCC;EAAxC,IAAuDL,KAA7D;EACA,MAAM;IAAEM,KAAF;IAASC;EAAT,IAAsBC,iBAAiBR,KAAjB,CAA5B;EAEA,MAAMS,QAAQX,QACZ,OAAO;IACLI,IADK;IAELK,QAFK;IAGLN,WAHK;IAILK,KAJK;IAKLH,OALK;IAMLE;EANK,CAAP,CADY,EASZ,CAACH,IAAD,EAAOK,QAAP,EAAiBN,WAAjB,EAA8BK,KAA9B,EAAqCH,OAArC,EAA8CE,UAA9C,CATY,CAAd;EAYA,OAAO,mBAACK,qBAAD,EAAC;IAAsBJ,OAAOG,KAA7B;IAAoCL;EAApC,CAAD,CAAP;AACF;;AAEAL,cAAcY,WAAd,GAA4B,eAA5B","names":["useMemo","CheckboxGroup","props","colorScheme","size","variant","children","isDisabled","value","onChange","useCheckboxGroup","group","CheckboxGroupProvider","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\checkbox\\src\\checkbox-group.tsx"],"sourcesContent":["import { ThemingProps } from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\nimport { CheckboxGroupProvider } from \"./checkbox-context\"\nimport { UseCheckboxGroupProps } from \"./checkbox-types\"\nimport { useCheckboxGroup } from \"./use-checkbox-group\"\n\nexport interface CheckboxGroupProps\n  extends UseCheckboxGroupProps,\n    Omit<ThemingProps<\"Checkbox\">, \"orientation\"> {\n  children?: React.ReactNode\n}\n\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nexport function CheckboxGroup(props: CheckboxGroupProps) {\n  const { colorScheme, size, variant, children, isDisabled } = props\n  const { value, onChange } = useCheckboxGroup(props)\n\n  const group = useMemo(\n    () => ({\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n    }),\n    [size, onChange, colorScheme, value, variant, isDisabled],\n  )\n\n  return <CheckboxGroupProvider value={group} children={children} />\n}\n\nCheckboxGroup.displayName = \"CheckboxGroup\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client';\n\nimport { ToastProvider } from \"./chunk-NMI5PSXW.mjs\";\nimport { createToastFn } from \"./chunk-WGVGSZK2.mjs\"; // src/create-standalone-toast.tsx\n\nimport { ColorModeContext, ThemeProvider } from \"@chakra-ui/system\";\nimport defaultTheme from \"@chakra-ui/theme\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaults = {\n  duration: 5e3,\n  variant: \"solid\"\n};\nvar defaultStandaloneParam = {\n  theme: defaultTheme,\n  colorMode: \"light\",\n  toggleColorMode: () => {},\n  setColorMode: () => {},\n  defaultOptions: defaults,\n  forced: false\n};\n\nfunction createStandaloneToast() {\n  let {\n    theme = defaultStandaloneParam.theme,\n    colorMode = defaultStandaloneParam.colorMode,\n    toggleColorMode = defaultStandaloneParam.toggleColorMode,\n    setColorMode = defaultStandaloneParam.setColorMode,\n    defaultOptions = defaultStandaloneParam.defaultOptions,\n    motionVariants,\n    toastSpacing,\n    component,\n    forced\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStandaloneParam;\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced\n  };\n\n  const ToastContainer = () => /* @__PURE__ */jsx(ThemeProvider, {\n    theme,\n    children: /* @__PURE__ */jsx(ColorModeContext.Provider, {\n      value: colorModeContextValue,\n      children: /* @__PURE__ */jsx(ToastProvider, {\n        defaultOptions,\n        motionVariants,\n        toastSpacing,\n        component\n      })\n    })\n  });\n\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions)\n  };\n}\n\nexport { defaultStandaloneParam, createStandaloneToast };","map":{"version":3,"mappings":";;;;;AAAA,SAEEA,gBAFF,EAGEC,aAHF,QAKO,mBALP;AAMA,OAAOC,YAAP,MAAyB,kBAAzB;AAyDQ;AApDR,IAAMC,WAA4B;EAChCC,UAAU,GADsB;EAEhCC,SAAS;AAFuB,CAAlC;AAcO,IAAMC,yBAC4D;EACvEC,OAAOL,YADgE;EAEvEM,WAAW,OAF4D;EAGvEC,iBAAiB,MAAM,CAAC,CAH+C;EAIvEC,cAAc,MAAM,CAAC,CAJkD;EAKvEC,gBAAgBR,QALuD;EAMvES,QAAQ;AAN+D,CADlE;;AAkBA,SAASC,qBAAT,GAU8E;EAAA,IAV/C;IACpCN,QAAQD,uBAAuBC,KADK;IAEpCC,YAAYF,uBAAuBE,SAFC;IAGpCC,kBAAkBH,uBAAuBG,eAHL;IAIpCC,eAAeJ,uBAAuBI,YAJF;IAKpCC,iBAAiBL,uBAAuBK,cALJ;IAMpCG,cANoC;IAOpCC,YAPoC;IAQpCC,SARoC;IASpCJ;EAToC,CAU+C,uEAArDN,sBAAqD;EACnF,MAAMW,wBAAwB;IAC5BT,SAD4B;IAE5BE,YAF4B;IAG5BD,eAH4B;IAI5BG;EAJ4B,CAA9B;;EAMA,MAAMM,iBAAiB,MACrB,mBAACjB,aAAD,EAAC;IAAcM,KAAd;IACCY,6BAACnB,iBAAiBoB,QAAlB,EAAC;MAA0BC,OAAOJ,qBAAjC;MACCE,6BAACG,aAAD,EAAC;QACCX,cADD;QAECG,cAFD;QAGCC,YAHD;QAICC;MAJD,CAAD;IADD,CAAD;EADD,CAAD,CADF;;EAaA,OAAO;IACLE,cADK;IAELK,OAAOC,cAAcjB,MAAMkB,SAApB,EAA+Bd,cAA/B;EAFF,CAAP;AAIF","names":["ColorModeContext","ThemeProvider","defaultTheme","defaults","duration","variant","defaultStandaloneParam","theme","colorMode","toggleColorMode","setColorMode","defaultOptions","forced","createStandaloneToast","motionVariants","toastSpacing","component","colorModeContextValue","ToastContainer","children","Provider","value","ToastProvider","toast","createToastFn","direction"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\toast\\src\\create-standalone-toast.tsx"],"sourcesContent":["import {\n  ColorMode,\n  ColorModeContext,\n  ThemeProvider,\n  useChakra,\n} from \"@chakra-ui/system\"\nimport defaultTheme from \"@chakra-ui/theme\"\nimport { ToastProvider, ToastProviderProps } from \"./toast.provider\"\nimport { UseToastOptions } from \"./use-toast\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\n\nconst defaults: UseToastOptions = {\n  duration: 5000,\n  variant: \"solid\",\n}\n\nexport interface CreateStandAloneToastParam\n  extends Partial<\n      ReturnType<typeof useChakra> & {\n        setColorMode: (value: ColorMode) => void\n        defaultOptions: UseToastOptions\n      }\n    >,\n    Omit<ToastProviderProps, \"children\"> {}\n\nexport const defaultStandaloneParam: CreateStandAloneToastParam &\n  Required<Omit<CreateStandAloneToastParam, keyof ToastProviderProps>> = {\n  theme: defaultTheme,\n  colorMode: \"light\",\n  toggleColorMode: () => {},\n  setColorMode: () => {},\n  defaultOptions: defaults,\n  forced: false,\n}\n\nexport type CreateStandaloneToastReturn = {\n  ToastContainer: () => JSX.Element\n  toast: CreateToastFnReturn\n}\n\n/**\n * Create a toast\n */\nexport function createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n  motionVariants,\n  toastSpacing,\n  component,\n  forced,\n}: CreateStandAloneToastParam = defaultStandaloneParam): CreateStandaloneToastReturn {\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced,\n  }\n  const ToastContainer = () => (\n    <ThemeProvider theme={theme}>\n      <ColorModeContext.Provider value={colorModeContextValue}>\n        <ToastProvider\n          defaultOptions={defaultOptions}\n          motionVariants={motionVariants}\n          toastSpacing={toastSpacing}\n          component={component}\n        />\n      </ColorModeContext.Provider>\n    </ThemeProvider>\n  )\n\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
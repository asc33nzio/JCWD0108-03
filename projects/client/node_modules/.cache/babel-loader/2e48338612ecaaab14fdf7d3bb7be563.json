{"ast":null,"code":"'use client';\n\nimport { useModalContext, useModalStyles } from \"./chunk-YEXLRKHC.mjs\"; // src/modal-overlay.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { fadeConfig } from \"@chakra-ui/transition\";\nimport { motion } from \"framer-motion\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MotionDiv = chakra(motion.div);\nvar ModalOverlay = forwardRef((props, ref) => {\n  const {\n    className,\n    transition,\n    motionProps: _motionProps,\n    ...rest\n  } = props;\n\n  const _className = cx(\"chakra-modal__overlay\", className);\n\n  const styles = useModalStyles();\n  const overlayStyle = {\n    pos: \"fixed\",\n    left: \"0\",\n    top: \"0\",\n    w: \"100vw\",\n    h: \"100vh\",\n    ...styles.overlay\n  };\n  const {\n    motionPreset\n  } = useModalContext();\n  const defaultMotionProps = motionPreset === \"none\" ? {} : fadeConfig;\n  const motionProps = _motionProps || defaultMotionProps;\n  return /* @__PURE__ */jsx(MotionDiv, { ...motionProps,\n    __css: overlayStyle,\n    ref,\n    className: _className,\n    ...rest\n  });\n});\nModalOverlay.displayName = \"ModalOverlay\";\nexport { ModalOverlay };","map":{"version":3,"mappings":";;;;AAAA,SAASA,EAAT,QAAmB,yBAAnB;AACA,SACEC,MADF,EAIEC,UAJF,QAKO,mBALP;AAMA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,MAAT,QAAwC,eAAxC;AAyCM;AArCN,IAAMC,YAAYJ,OAAOG,OAAOE,GAAd,CAAlB;AAeO,IAAMC,eAAeL,WAC1B,CAACM,KAAD,EAAQC,GAAR,KAAgB;EACd,MAAM;IAAEC,SAAF;IAAaC,UAAb;IAAyBC,aAAaC,YAAtC;IAAoD,GAAGC;EAAvD,IAAgEN,KAAtE;;EACA,MAAMO,aAAaf,GAAG,uBAAH,EAA4BU,SAA5B,CAAnB;;EAEA,MAAMM,SAASC,gBAAf;EACA,MAAMC,eAAkC;IACtCC,KAAK,OADiC;IAEtCC,MAAM,GAFgC;IAGtCC,KAAK,GAHiC;IAItCC,GAAG,OAJmC;IAKtCC,GAAG,OALmC;IAMtC,GAAGP,OAAOQ;EAN4B,CAAxC;EASA,MAAM;IAAEC;EAAF,IAAmBC,iBAAzB;EACA,MAAMC,qBACJF,iBAAiB,MAAjB,GAA0B,EAA1B,GAA+BtB,UADjC;EAGA,MAAMS,cAAmBC,gBAAgBc,kBAAzC;EAEA,OACE,mBAACtB,SAAD,EAAC,EACE,GAAGO,WADL;IAECgB,OAAOV,YAFR;IAGCT,GAHD;IAICC,WAAWK,UAJZ;IAKE,GAAGD;EALL,CAAD,CADF;AASF,CA9B0B,CAArB;AAiCPP,aAAasB,WAAb,GAA2B,cAA3B","names":["cx","chakra","forwardRef","fadeConfig","motion","MotionDiv","div","ModalOverlay","props","ref","className","transition","motionProps","_motionProps","rest","_className","styles","useModalStyles","overlayStyle","pos","left","top","w","h","overlay","motionPreset","useModalContext","defaultMotionProps","__css","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\modal\\src\\modal-overlay.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  ChakraProps,\n  SystemStyleObject,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { fadeConfig } from \"@chakra-ui/transition\"\nimport { motion, HTMLMotionProps } from \"framer-motion\"\n\nimport { useModalStyles, useModalContext } from \"./modal\"\n\nconst MotionDiv = chakra(motion.div)\n\nexport interface ModalOverlayProps\n  extends Omit<HTMLMotionProps<\"div\">, \"color\" | \"transition\">,\n    ChakraProps {\n  children?: React.ReactNode\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\n/**\n * ModalOverlay renders a backdrop behind the modal. It is\n * also used as a wrapper for the modal content for better positioning.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalOverlay = forwardRef<ModalOverlayProps, \"div\">(\n  (props, ref) => {\n    const { className, transition, motionProps: _motionProps, ...rest } = props\n    const _className = cx(\"chakra-modal__overlay\", className)\n\n    const styles = useModalStyles()\n    const overlayStyle: SystemStyleObject = {\n      pos: \"fixed\",\n      left: \"0\",\n      top: \"0\",\n      w: \"100vw\",\n      h: \"100vh\",\n      ...styles.overlay,\n    }\n\n    const { motionPreset } = useModalContext()\n    const defaultMotionProps: HTMLMotionProps<\"div\"> =\n      motionPreset === \"none\" ? {} : fadeConfig\n\n    const motionProps: any = _motionProps || defaultMotionProps\n\n    return (\n      <MotionDiv\n        {...motionProps}\n        __css={overlayStyle}\n        ref={ref}\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\nModalOverlay.displayName = \"ModalOverlay\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client';\n\nimport { cssVars, getBoxShadow, toTransformOrigin } from \"./chunk-6WT2JRWX.mjs\"; // src/modifiers.ts\n\nvar matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: _ref => {\n    let {\n      state\n    } = _ref;\n    state.styles.popper.width = `${state.rects.reference.width}px`;\n  },\n  effect: _ref2 => {\n    let {\n      state\n    } = _ref2;\n    return () => {\n      const reference = state.elements.reference;\n      state.elements.popper.style.width = `${reference.offsetWidth}px`;\n    };\n  }\n};\nvar transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: _ref3 => {\n    let {\n      state\n    } = _ref3;\n    setTransformOrigin(state);\n  },\n  effect: _ref4 => {\n    let {\n      state\n    } = _ref4;\n    return () => {\n      setTransformOrigin(state);\n    };\n  }\n};\n\nvar setTransformOrigin = state => {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\n\nvar positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: _ref5 => {\n    let {\n      state\n    } = _ref5;\n    setArrowStyles(state);\n  }\n};\n\nvar setArrowStyles = state => {\n  var _a;\n\n  if (!state.placement) return;\n  const overrides = getArrowStyle(state.placement);\n\n  if (((_a = state.elements) == null ? void 0 : _a.arrow) && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1\n    });\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`\n    };\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\n\nvar getArrowStyle = placement => {\n  if (placement.startsWith(\"top\")) {\n    return {\n      property: \"bottom\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"bottom\")) {\n    return {\n      property: \"top\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"left\")) {\n    return {\n      property: \"right\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"right\")) {\n    return {\n      property: \"left\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n};\n\nvar innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: _ref6 => {\n    let {\n      state\n    } = _ref6;\n    setInnerArrowStyles(state);\n  },\n  effect: _ref7 => {\n    let {\n      state\n    } = _ref7;\n    return () => {\n      setInnerArrowStyles(state);\n    };\n  }\n};\n\nvar setInnerArrowStyles = state => {\n  if (!state.elements.arrow) return;\n  const inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner) return;\n  const boxShadow = getBoxShadow(state.placement);\n\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow);\n  }\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`\n  });\n};\n\nexport { matchWidth, transformOrigin, positionArrow, innerArrow };","map":{"version":3,"mappings":"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","names":["matchWidth","name","enabled","phase","requires","fn","state","styles","popper","width","rects","reference","effect","elements","style","offsetWidth","transformOrigin","setTransformOrigin","setProperty","cssVars","var","toTransformOrigin","placement","positionArrow","setArrowStyles","overrides","getArrowStyle","_a","arrow","Object","assign","property","value","arrowSize","varRef","height","zIndex","vars","arrowSizeHalf","arrowOffset","startsWith","innerArrow","setInnerArrowStyles","inner","querySelector","boxShadow","getBoxShadow","transform","background","arrowBg","top","left","position"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\popper\\src\\modifiers.ts"],"sourcesContent":["import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It is useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      const reference = state.elements.reference as HTMLElement\n      state.elements.popper.style.width = `${reference.offsetWidth}px`\n    },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setTransformOrigin(state)\n    },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf\n        .var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setInnerArrowStyles(state)\n    },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n  const boxShadow = getBoxShadow(state.placement)\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow)\n  }\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}
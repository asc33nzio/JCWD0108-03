{"ast":null,"code":"'use client';\n\nimport { StyledMenuItem } from \"./chunk-ZPR2BOOS.mjs\";\nimport { MenuIcon } from \"./chunk-PP6MIROW.mjs\";\nimport { useMenuOption } from \"./chunk-2D5GRB32.mjs\"; // src/menu-item-option.tsx\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\n\nvar CheckIcon = props => /* @__PURE__ */jsx(\"svg\", {\n  viewBox: \"0 0 14 14\",\n  width: \"1em\",\n  height: \"1em\",\n  ...props,\n  children: /* @__PURE__ */jsx(\"polygon\", {\n    fill: \"currentColor\",\n    points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n  })\n});\n\nvar MenuItemOption = forwardRef((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    ...rest\n  } = props;\n  const optionProps = useMenuOption(rest, ref);\n  return /* @__PURE__ */jsxs(StyledMenuItem, { ...optionProps,\n    className: cx(\"chakra-menu__menuitem-option\", rest.className),\n    children: [icon !== null && /* @__PURE__ */jsx(MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      opacity: props.isChecked ? 1 : 0,\n      children: icon || /* @__PURE__ */jsx(CheckIcon, {})\n    }), /* @__PURE__ */jsx(\"span\", {\n      style: {\n        flex: 1\n      },\n      children: optionProps.children\n    })]\n  });\n});\nMenuItemOption.id = \"MenuItemOption\";\nMenuItemOption.displayName = \"MenuItemOption\";\nexport { MenuItemOption };","map":{"version":3,"mappings":";;;;;;AACA,SAASA,UAAT,QAAiD,mBAAjD;AAMA,SAASC,EAAT,QAAmB,yBAAnB;AAII,cA4BEC,IA5BF;;AAFJ,IAAMC,YAAuCC,KAAD,IAC1C,mBAAC,KAAD,EAAC;EAAIC,SAAQ,WAAZ;EAAwBC,OAAM,KAA9B;EAAoCC,QAAO,KAA3C;EAAkD,GAAGH,KAArD;EACCI,6BAAC,SAAD,EAAC;IACCC,MAAK,cADN;IAECC,QAAO;EAFR,CAAD;AADD,CAAD,CADF;;AAsBO,IAAMC,iBAAiBX,WAC5B,CAACI,KAAD,EAAQQ,GAAR,KAAgB;EAEd,MAAM;IAAEC,IAAF;IAAQC,cAAc,SAAtB;IAAiC,GAAGC;EAApC,IAA6CX,KAAnD;EAEA,MAAMY,cAAcC,cAAcF,IAAd,EAAoBH,GAApB,CAApB;EAEA,OACE,oBAACM,cAAD,EAAC,EACE,GAAGF,WADL;IAECG,WAAWlB,GAAG,8BAAH,EAAmCc,KAAKI,SAAxC,CAFZ;IAIEX,oBAAS,IAAT,IACC,mBAACY,QAAD,EAAC;MACCC,UAAS,OADV;MAECC,WAAWR,WAFZ;MAGCS,SAASnB,MAAMoB,SAAN,GAAkB,CAAlB,GAAsB,CAHhC;MAKEhB,kBAAQ,mBAACL,SAAD,EAAC,EAAD;IALV,CAAD,CADD,EASD,mBAAC,MAAD,EAAC;MAAKsB,OAAO;QAAEC,MAAM;MAAR,CAAZ;MAA0BlB,sBAAYA;IAAtC,CAAD,CATC;EAJF,CAAD,CADF;AAiBF,CAxB4B,CAAvB;AA2BPG,eAAegB,EAAf,GAAoB,gBAApB;AAEAhB,eAAeiB,WAAf,GAA6B,gBAA7B","names":["forwardRef","cx","jsxs","CheckIcon","props","viewBox","width","height","children","fill","points","MenuItemOption","ref","icon","iconSpacing","rest","optionProps","useMenuOption","StyledMenuItem","className","MenuIcon","fontSize","marginEnd","opacity","isChecked","style","flex","id","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\menu\\src\\menu-item-option.tsx"],"sourcesContent":["import { HTMLAttributes, ReactElement } from \"react\"\nimport { forwardRef, PropsOf, SystemProps } from \"@chakra-ui/system\"\n\nimport { MenuItemProps } from \"./menu-item\"\nimport { useMenuOption, UseMenuOptionOptions } from \"./use-menu\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions | \"icon\"> {\n  /**\n   * @type React.ReactElement\n   */\n  icon?: ReactElement | null\n  /**\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  (props, ref) => {\n    // menu option item should always be `type=button`, so we omit `type`\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref) as HTMLAttributes<HTMLElement>\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        {icon !== null && (\n          <MenuIcon\n            fontSize=\"0.8em\"\n            marginEnd={iconSpacing}\n            opacity={props.isChecked ? 1 : 0}\n          >\n            {icon || <CheckIcon />}\n          </MenuIcon>\n        )}\n        <span style={{ flex: 1 }}>{optionProps.children}</span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nMenuItemOption.displayName = \"MenuItemOption\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client'; // src/index.ts\n\nimport { useEffect } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\n\nfunction useEventListener(target, event, handler, options) {\n  const listener = useCallbackRef(handler);\n  useEffect(() => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    if (!handler || !node) return;\n    node.addEventListener(event, listener, options);\n    return () => {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, target, options, listener, handler]);\n  return () => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    node == null ? void 0 : node.removeEventListener(event, listener, options);\n  };\n}\n\nexport { useEventListener };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,mCAA/B;;AAuBO,SAASC,gBAAT,CACLC,MADK,EAELC,KAFK,EAGLC,OAHK,EAILC,OAJK,EAKL;EACA,MAAMC,WAAWN,eAAeI,OAAf,CAAjB;EAEAL,UAAU,MAAM;IACd,MAAMQ,OAAO,OAAOL,MAAP,KAAkB,UAAlB,GAA+BA,QAA/B,GAA0CA,0BAAUM,QAAjE;IAEA,IAAI,CAACJ,OAAD,IAAY,CAACG,IAAjB,EAAuB;IAEvBA,KAAKE,gBAAL,CAAsBN,KAAtB,EAA6BG,QAA7B,EAAuCD,OAAvC;IACA,OAAO,MAAM;MACXE,KAAKG,mBAAL,CAAyBP,KAAzB,EAAgCG,QAAhC,EAA0CD,OAA1C;IACF,CAFA;EAGF,CATA,EASG,CAACF,KAAD,EAAQD,MAAR,EAAgBG,OAAhB,EAAyBC,QAAzB,EAAmCF,OAAnC,CATH;EAWA,OAAO,MAAM;IACX,MAAMG,OAAO,OAAOL,MAAP,KAAkB,UAAlB,GAA+BA,QAA/B,GAA0CA,0BAAUM,QAAjE;IACAD,6BAAMG,mBAAN,CAA0BP,KAA1B,EAAiCG,QAAjC,EAA2CD,OAA3C;EACF,CAHA;AAIF","names":["useEffect","useCallbackRef","useEventListener","target","event","handler","options","listener","node","document","addEventListener","removeEventListener"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\react-use-event-listener\\src\\index.ts"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\ntype Target = EventTarget | null | (() => EventTarget | null)\ntype Options = boolean | AddEventListenerOptions\n\nexport function useEventListener<K extends keyof DocumentEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: DocumentEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener<K extends keyof WindowEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: WindowEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: GlobalEventHandlersEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener(\n  target: Target,\n  event: string,\n  handler: ((event: Event) => void) | undefined,\n  options?: Options,\n) {\n  const listener = useCallbackRef(handler)\n\n  useEffect(() => {\n    const node = typeof target === \"function\" ? target() : target ?? document\n\n    if (!handler || !node) return\n\n    node.addEventListener(event, listener, options)\n    return () => {\n      node.removeEventListener(event, listener, options)\n    }\n  }, [event, target, options, listener, handler])\n\n  return () => {\n    const node = typeof target === \"function\" ? target() : target ?? document\n    node?.removeEventListener(event, listener, options)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
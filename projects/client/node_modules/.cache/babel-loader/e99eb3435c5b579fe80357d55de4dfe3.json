{"ast":null,"code":"'use client'; // src/env.tsx\n\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { createContext, useContext, useMemo, useReducer, useRef } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar EnvironmentContext = createContext({\n  getDocument() {\n    return document;\n  },\n\n  getWindow() {\n    return window;\n  }\n\n});\nEnvironmentContext.displayName = \"EnvironmentContext\";\n\nfunction useEnvironment() {\n  let {\n    defer\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [, forceUpdate] = useReducer(c => c + 1, 0);\n  useSafeLayoutEffect(() => {\n    if (!defer) return;\n    forceUpdate();\n  }, [defer]);\n  return useContext(EnvironmentContext);\n}\n\nfunction EnvironmentProvider(props) {\n  const {\n    children,\n    environment: environmentProp,\n    disabled\n  } = props;\n  const ref = useRef(null);\n  const context = useMemo(() => {\n    if (environmentProp) return environmentProp;\n    return {\n      getDocument: () => {\n        var _a, _b;\n\n        return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n      },\n      getWindow: () => {\n        var _a, _b;\n\n        return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument.defaultView) != null ? _b : window;\n      }\n    };\n  }, [environmentProp]);\n  const showSpan = !disabled || !environmentProp;\n  return /* @__PURE__ */jsxs(EnvironmentContext.Provider, {\n    value: context,\n    children: [children, showSpan && /* @__PURE__ */jsx(\"span\", {\n      id: \"__chakra_env\",\n      hidden: true,\n      ref\n    })]\n  });\n}\n\nEnvironmentProvider.displayName = \"EnvironmentProvider\";\nexport { useEnvironment, EnvironmentProvider };","map":{"version":3,"mappings":";;AAAA,SAASA,mBAAT,QAAoC,yCAApC;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,OAApC,EAA6CC,UAA7C,EAAyDC,MAAzD,QAAuE,OAAvE;AAkDI,SAEeC,GAFf;AA3CJ,IAAMC,qBAAqBN,cAA2B;EACpDO,cAAc;IACZ,OAAOC,QAAP;EACF,CAHoD;;EAIpDC,YAAY;IACV,OAAOC,MAAP;EACF;;AANoD,CAA3B,CAA3B;AASAJ,mBAAmBK,WAAnB,GAAiC,oBAAjC;;AAEO,SAASC,cAAT,GAA6D;EAAA,IAArC;IAAEC;EAAF,CAAqC,uEAAJ,EAAI;EAClE,MAAM,GAAGC,WAAH,IAAkBX,WAAYY,CAAD,IAAOA,IAAI,CAAtB,EAAyB,CAAzB,CAAxB;EAEAhB,oBAAoB,MAAM;IACxB,IAAI,CAACc,KAAL,EAAY;IACZC;EACF,CAHA,EAGG,CAACD,KAAD,CAHH;EAKA,OAAOZ,WAAWK,kBAAX,CAAP;AACF;;AAQO,SAASU,mBAAT,CAA6BC,KAA7B,EAA8D;EACnE,MAAM;IAAEC,QAAF;IAAYC,aAAaC,eAAzB;IAA0CC;EAA1C,IAAuDJ,KAA7D;EACA,MAAMK,MAAMlB,OAAwB,IAAxB,CAAZ;EAEA,MAAMmB,UAAUrB,QAAqB,MAAM;IACzC,IAAIkB,eAAJ,EAAqB,OAAOA,eAAP;IACrB,OAAO;MACLb,aAAa,MAAG;QA3CtB;;QA2CyB,uBAAIiB,OAAJ,wBAAaC,aAAb,iBAA8BjB,QAA9B;MAA8B,CAD5C;MAELC,WAAW,MAAG;QA5CpB;;QA4CuB,uBAAIe,OAAJ,wBAAaC,aAAb,CAA2BC,WAA3B,iBAA0ChB,MAA1C;MAA0C;IAFtD,CAAP;EAIF,CANgB,EAMb,CAACU,eAAD,CANa,CAAhB;EAQA,MAAMO,WAAW,CAACN,QAAD,IAAa,CAACD,eAA/B;EAEA,OACE,oBAACd,mBAAmBsB,QAApB,EAAC;IAA4BC,OAAON,OAAnC;IACEL,qBACAS,YAAY,mBAAC,MAAD,EAAC;MAAKG,IAAG,cAAR;MAAuBC,QAAM,IAA7B;MAA8BT;IAA9B,CAAD,CADZ;EADF,CAAD,CADF;AAMF;;AAEAN,oBAAoBL,WAApB,GAAkC,qBAAlC","names":["useSafeLayoutEffect","createContext","useContext","useMemo","useReducer","useRef","jsx","EnvironmentContext","getDocument","document","getWindow","window","displayName","useEnvironment","defer","forceUpdate","c","EnvironmentProvider","props","children","environment","environmentProp","disabled","ref","context","current","ownerDocument","defaultView","showSpan","Provider","value","id","hidden"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\react-env\\src\\env.tsx"],"sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { createContext, useContext, useMemo, useReducer, useRef } from \"react\"\n\ninterface Environment {\n  getWindow: () => Window\n  getDocument: () => Document\n}\n\nconst EnvironmentContext = createContext<Environment>({\n  getDocument() {\n    return document\n  },\n  getWindow() {\n    return window\n  },\n})\n\nEnvironmentContext.displayName = \"EnvironmentContext\"\n\nexport function useEnvironment({ defer }: { defer?: boolean } = {}) {\n  const [, forceUpdate] = useReducer((c) => c + 1, 0)\n\n  useSafeLayoutEffect(() => {\n    if (!defer) return\n    forceUpdate()\n  }, [defer])\n\n  return useContext(EnvironmentContext)\n}\n\nexport interface EnvironmentProviderProps {\n  children: React.ReactNode\n  disabled?: boolean\n  environment?: Environment\n}\n\nexport function EnvironmentProvider(props: EnvironmentProviderProps) {\n  const { children, environment: environmentProp, disabled } = props\n  const ref = useRef<HTMLSpanElement>(null)\n\n  const context = useMemo<Environment>(() => {\n    if (environmentProp) return environmentProp\n    return {\n      getDocument: () => ref.current?.ownerDocument ?? document,\n      getWindow: () => ref.current?.ownerDocument.defaultView ?? window,\n    }\n  }, [environmentProp])\n\n  const showSpan = !disabled || !environmentProp\n\n  return (\n    <EnvironmentContext.Provider value={context}>\n      {children}\n      {showSpan && <span id=\"__chakra_env\" hidden ref={ref} />}\n    </EnvironmentContext.Provider>\n  )\n}\n\nEnvironmentProvider.displayName = \"EnvironmentProvider\"\n"]},"metadata":{},"sourceType":"module"}
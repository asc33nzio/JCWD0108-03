{"ast":null,"code":"'use client'; // src/code.tsx\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Code = forwardRef(function Code2(props, ref) {\n  const styles = useStyleConfig(\"Code\", props);\n  const {\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  return /* @__PURE__ */jsx(chakra.code, {\n    ref,\n    className: cx(\"chakra-code\", props.className),\n    ...rest,\n    __css: {\n      display: \"inline-block\",\n      ...styles\n    }\n  });\n});\nCode.displayName = \"Code\";\nexport { Code };","map":{"version":3,"mappings":";;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAKEC,cALF,QAOO,mBAPP;AAQA,SAASC,EAAT,QAAmB,yBAAnB;AAgBI;AALG,IAAMC,OAAOJ,WAA8B,SAASI,KAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;EAC1E,MAAMC,SAASL,eAAe,MAAf,EAAuBG,KAAvB,CAAf;EACA,MAAM;IAAEG,SAAF;IAAa,GAAGC;EAAhB,IAAyBR,iBAAiBI,KAAjB,CAA/B;EAEA,OACE,mBAACN,OAAOW,IAAR,EAAC;IACCJ,GADD;IAECE,WAAWL,GAAG,aAAH,EAAkBE,MAAMG,SAAxB,CAFZ;IAGE,GAAGC,IAHL;IAICE,OAAO;MACLC,SAAS,cADJ;MAEL,GAAGL;IAFE;EAJR,CAAD,CADF;AAWD,CAfmB,CAAb;AAiBPH,KAAKS,WAAL,GAAmB,MAAnB","names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","Code","props","ref","styles","className","rest","code","__css","display","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\layout\\src\\code.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface CodeProps\n  extends HTMLChakraProps<\"code\">,\n    ThemingProps<\"Code\"> {}\n\n/**\n * React component to render inline code snippets.\n *\n * @see Docs https://chakra-ui.com/code\n */\nexport const Code = forwardRef<CodeProps, \"code\">(function Code(props, ref) {\n  const styles = useStyleConfig(\"Code\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.code\n      ref={ref}\n      className={cx(\"chakra-code\", props.className)}\n      {...rest}\n      __css={{\n        display: \"inline-block\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nCode.displayName = \"Code\"\n"]},"metadata":{},"sourceType":"module"}
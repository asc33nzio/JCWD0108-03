{"ast":null,"code":"import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n  return Boolean(!easing || typeof easing === \"string\" && supportedWaapiEasing[easing] || isBezierDefinition(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));\n}\n\nconst cubicBezierAsString = _ref => {\n  let [a, b, c, d] = _ref;\n  return `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n};\n\nconst supportedWaapiEasing = {\n  linear: \"linear\",\n  ease: \"ease\",\n  easeIn: \"ease-in\",\n  easeOut: \"ease-out\",\n  easeInOut: \"ease-in-out\",\n  circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n  circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n  backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n  backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])\n};\n\nfunction mapEasingToNativeEasing(easing) {\n  if (!easing) return undefined;\n  return isBezierDefinition(easing) ? cubicBezierAsString(easing) : Array.isArray(easing) ? easing.map(mapEasingToNativeEasing) : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };","map":{"version":3,"names":["isBezierDefinition","isWaapiSupportedEasing","easing","Boolean","supportedWaapiEasing","Array","isArray","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","undefined","map"],"sources":["C:/Purwadhika/JCWD Bandung/4. REAL PROJECT/JCWD0108-03/node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs"],"sourcesContent":["import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,gDAAnC;;AAEA,SAASC,sBAAT,CAAgCC,MAAhC,EAAwC;EACpC,OAAOC,OAAO,CAAC,CAACD,MAAD,IACV,OAAOA,MAAP,KAAkB,QAAlB,IAA8BE,oBAAoB,CAACF,MAAD,CADxC,IAEXF,kBAAkB,CAACE,MAAD,CAFP,IAGVG,KAAK,CAACC,OAAN,CAAcJ,MAAd,KAAyBA,MAAM,CAACK,KAAP,CAAaN,sBAAb,CAHhB,CAAd;AAIH;;AACD,MAAMO,mBAAmB,GAAG;EAAA,IAAC,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAD;EAAA,OAAmB,gBAAeH,CAAE,KAAIC,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAtD;AAAA,CAA5B;;AACA,MAAMR,oBAAoB,GAAG;EACzBS,MAAM,EAAE,QADiB;EAEzBC,IAAI,EAAE,MAFmB;EAGzBC,MAAM,EAAE,SAHiB;EAIzBC,OAAO,EAAE,UAJgB;EAKzBC,SAAS,EAAE,aALc;EAMzBC,MAAM,EAAEV,mBAAmB,CAAC,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,CAAhB,CAAD,CANF;EAOzBW,OAAO,EAAEX,mBAAmB,CAAC,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,EAAa,IAAb,CAAD,CAPH;EAQzBY,MAAM,EAAEZ,mBAAmB,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,CAAC,IAApB,CAAD,CARF;EASzBa,OAAO,EAAEb,mBAAmB,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD;AATH,CAA7B;;AAWA,SAASc,uBAAT,CAAiCpB,MAAjC,EAAyC;EACrC,IAAI,CAACA,MAAL,EACI,OAAOqB,SAAP;EACJ,OAAOvB,kBAAkB,CAACE,MAAD,CAAlB,GACDM,mBAAmB,CAACN,MAAD,CADlB,GAEDG,KAAK,CAACC,OAAN,CAAcJ,MAAd,IACIA,MAAM,CAACsB,GAAP,CAAWF,uBAAX,CADJ,GAEIlB,oBAAoB,CAACF,MAAD,CAJ9B;AAKH;;AAED,SAASM,mBAAT,EAA8BP,sBAA9B,EAAsDqB,uBAAtD,EAA+ElB,oBAA/E"},"metadata":{},"sourceType":"module"}
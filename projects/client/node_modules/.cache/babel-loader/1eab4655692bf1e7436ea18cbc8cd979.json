{"ast":null,"code":"'use client';\n\nimport { usePopoverContext } from \"./chunk-Z3POGKNI.mjs\"; // src/popover-trigger.tsx\n\nimport { Children, cloneElement } from \"react\";\n\nfunction PopoverTrigger(props) {\n  const child = Children.only(props.children);\n  const {\n    getTriggerProps\n  } = usePopoverContext();\n  return cloneElement(child, getTriggerProps(child.props, child.ref));\n}\n\nPopoverTrigger.displayName = \"PopoverTrigger\";\nexport { PopoverTrigger };","map":{"version":3,"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,YAAnB,QAAuC,OAAvC;;AAQO,SAASC,cAAT,CAAwBC,KAAxB,EAA8D;EAEnE,MAAMC,QAAaJ,SAASK,IAAT,CAAcF,MAAMG,QAApB,CAAnB;EACA,MAAM;IAAEC;EAAF,IAAsBC,mBAA5B;EACA,OAAOP,aAAaG,KAAb,EAAoBG,gBAAgBH,MAAMD,KAAtB,EAA6BC,MAAMK,GAAnC,CAApB,CAAP;AACF;;AAEAP,eAAeQ,WAAf,GAA6B,gBAA7B","names":["Children","cloneElement","PopoverTrigger","props","child","only","children","getTriggerProps","usePopoverContext","ref","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\popover\\src\\popover-trigger.tsx"],"sourcesContent":["import { Children, cloneElement } from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\n/**\n * PopoverTrigger opens the popover's content. It must be an interactive element\n * such as `button` or `a`.\n */\n\nexport function PopoverTrigger(props: { children: React.ReactNode }) {\n  // enforce a single child\n  const child: any = Children.only(props.children)\n  const { getTriggerProps } = usePopoverContext()\n  return cloneElement(child, getTriggerProps(child.props, child.ref))\n}\n\nPopoverTrigger.displayName = \"PopoverTrigger\"\n"]},"metadata":{},"sourceType":"module"}
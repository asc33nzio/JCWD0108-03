{"ast":null,"code":"'use client'; // src/color-mode.utils.ts\n\nvar classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\"\n};\n\nfunction getColorModeUtils() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    preventTransition = true\n  } = options;\n  const utils = {\n    setDataset: value => {\n      const cleanup = preventTransition ? utils.preventTransition() : void 0;\n      document.documentElement.dataset.theme = value;\n      document.documentElement.style.colorScheme = value;\n      cleanup == null ? void 0 : cleanup();\n    },\n\n    setClassName(dark) {\n      document.body.classList.add(dark ? classNames.dark : classNames.light);\n      document.body.classList.remove(dark ? classNames.light : classNames.dark);\n    },\n\n    query() {\n      return window.matchMedia(\"(prefers-color-scheme: dark)\");\n    },\n\n    getSystemTheme(fallback) {\n      var _a;\n\n      const dark = (_a = utils.query().matches) != null ? _a : fallback === \"dark\";\n      return dark ? \"dark\" : \"light\";\n    },\n\n    addListener(fn) {\n      const mql = utils.query();\n\n      const listener = e => {\n        fn(e.matches ? \"dark\" : \"light\");\n      };\n\n      if (typeof mql.addListener === \"function\") mql.addListener(listener);else mql.addEventListener(\"change\", listener);\n      return () => {\n        if (typeof mql.removeListener === \"function\") mql.removeListener(listener);else mql.removeEventListener(\"change\", listener);\n      };\n    },\n\n    preventTransition() {\n      const css = document.createElement(\"style\");\n      css.appendChild(document.createTextNode(`*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`));\n      document.head.appendChild(css);\n      return () => {\n        ;\n\n        (() => window.getComputedStyle(document.body))();\n\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            document.head.removeChild(css);\n          });\n        });\n      };\n    }\n\n  };\n  return utils;\n}\n\nexport { getColorModeUtils };","map":{"version":3,"mappings":";;AAEA,IAAMA,aAAa;EACjBC,OAAO,iBADU;EAEjBC,MAAM;AAFW,CAAnB;;AASO,SAASC,iBAAT,GAAsD;EAAA,IAA3BC,OAA2B,uEAAJ,EAAI;EAC3D,MAAM;IAAEC,oBAAoB;EAAtB,IAA+BD,OAArC;EAEA,MAAME,QAAQ;IACZC,YAAaC,KAAD,IAAsB;MAChC,MAAMC,UAAUJ,oBAAoBC,MAAMD,iBAAN,EAApB,GAAgD,MAAhE;MACAK,SAASC,eAAT,CAAyBC,OAAzB,CAAiCC,KAAjC,GAAyCL,KAAzC;MACAE,SAASC,eAAT,CAAyBG,KAAzB,CAA+BC,WAA/B,GAA6CP,KAA7C;MACAC;IACF,CANY;;IAOZO,aAAad,IAAb,EAA4B;MAC1BQ,SAASO,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4BjB,OAAOF,WAAWE,IAAlB,GAAyBF,WAAWC,KAAhE;MACAS,SAASO,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+BlB,OAAOF,WAAWC,KAAlB,GAA0BD,WAAWE,IAApE;IACF,CAVY;;IAWZmB,QAAQ;MACN,OAAOC,OAAOC,UAAP,CAAkB,8BAAlB,CAAP;IACF,CAbY;;IAcZC,eAAeC,QAAf,EAAqC;MA5BzC;;MA6BM,MAAMvB,QAAOwB,WAAML,KAAN,GAAcM,OAArB,KAAO,IAAP,GAAOD,EAAP,GAAgCD,aAAa,MAAnD;MACA,OAAOvB,OAAO,MAAP,GAAgB,OAAvB;IACF,CAjBY;;IAkBZ0B,YAAYC,EAAZ,EAA4C;MAC1C,MAAMC,MAAMxB,MAAMe,KAAN,EAAZ;;MACA,MAAMU,WAAYC,CAAD,IAA4B;QAC3CH,GAAGG,EAAEL,OAAF,GAAY,MAAZ,GAAqB,OAAxB;MACF,CAFA;;MAIA,IAAI,OAAOG,IAAIF,WAAX,KAA2B,UAA/B,EAA2CE,IAAIF,WAAJ,CAAgBG,QAAhB,EAA3C,KACKD,IAAIG,gBAAJ,CAAqB,QAArB,EAA+BF,QAA/B;MAEL,OAAO,MAAM;QACX,IAAI,OAAOD,IAAII,cAAX,KAA8B,UAAlC,EACEJ,IAAII,cAAJ,CAAmBH,QAAnB,EADF,KAEKD,IAAIK,mBAAJ,CAAwB,QAAxB,EAAkCJ,QAAlC;MACP,CAJA;IAKF,CAhCY;;IAiCZ1B,oBAAoB;MAClB,MAAM+B,MAAM1B,SAAS2B,aAAT,CAAuB,OAAvB,CAAZ;MACAD,IAAIE,WAAJ,CACE5B,SAAS6B,cAAT,CACE,0JADF,CADF;MAKA7B,SAAS8B,IAAT,CAAcF,WAAd,CAA0BF,GAA1B;MAEA,OAAO,MAAM;QAEX;;QAAC,CAAC,MAAMd,OAAOmB,gBAAP,CAAwB/B,SAASO,IAAjC,CAAP;;QAGDyB,sBAAsB,MAAM;UAC1BA,sBAAsB,MAAM;YAC1BhC,SAAS8B,IAAT,CAAcG,WAAd,CAA0BP,GAA1B;UACD,CAFD;QAGD,CAJD;MAKF,CAVA;IAWF;;EArDY,CAAd;EAwDA,OAAO9B,KAAP;AACF","names":["classNames","light","dark","getColorModeUtils","options","preventTransition","utils","setDataset","value","cleanup","document","documentElement","dataset","theme","style","colorScheme","setClassName","body","classList","add","remove","query","window","matchMedia","getSystemTheme","fallback","_a","matches","addListener","fn","mql","listener","e","addEventListener","removeListener","removeEventListener","css","createElement","appendChild","createTextNode","head","getComputedStyle","requestAnimationFrame","removeChild"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\color-mode\\src\\color-mode.utils.ts"],"sourcesContent":["import { ColorMode } from \"./color-mode-types\"\n\nconst classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\",\n}\n\ntype UtilOptions = {\n  preventTransition?: boolean\n}\n\nexport function getColorModeUtils(options: UtilOptions = {}) {\n  const { preventTransition = true } = options\n\n  const utils = {\n    setDataset: (value: ColorMode) => {\n      const cleanup = preventTransition ? utils.preventTransition() : undefined\n      document.documentElement.dataset.theme = value\n      document.documentElement.style.colorScheme = value\n      cleanup?.()\n    },\n    setClassName(dark: boolean) {\n      document.body.classList.add(dark ? classNames.dark : classNames.light)\n      document.body.classList.remove(dark ? classNames.light : classNames.dark)\n    },\n    query() {\n      return window.matchMedia(\"(prefers-color-scheme: dark)\")\n    },\n    getSystemTheme(fallback?: ColorMode) {\n      const dark = utils.query().matches ?? fallback === \"dark\"\n      return dark ? \"dark\" : \"light\"\n    },\n    addListener(fn: (cm: ColorMode) => unknown) {\n      const mql = utils.query()\n      const listener = (e: MediaQueryListEvent) => {\n        fn(e.matches ? \"dark\" : \"light\")\n      }\n\n      if (typeof mql.addListener === \"function\") mql.addListener(listener)\n      else mql.addEventListener(\"change\", listener)\n\n      return () => {\n        if (typeof mql.removeListener === \"function\")\n          mql.removeListener(listener)\n        else mql.removeEventListener(\"change\", listener)\n      }\n    },\n    preventTransition() {\n      const css = document.createElement(\"style\")\n      css.appendChild(\n        document.createTextNode(\n          `*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`,\n        ),\n      )\n      document.head.appendChild(css)\n\n      return () => {\n        // force a reflow\n        ;(() => window.getComputedStyle(document.body))()\n\n        // wait for next tick\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            document.head.removeChild(css)\n          })\n        })\n      }\n    },\n  }\n\n  return utils\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client';\n\nimport { useFormControlContext } from \"./chunk-R42ZB7PB.mjs\"; // src/use-form-control.ts\n\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\n\nfunction useFormControl(props) {\n  const {\n    isDisabled,\n    isInvalid,\n    isReadOnly,\n    isRequired,\n    ...rest\n  } = useFormControlProps(props);\n  return { ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\n\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return { ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport { useFormControl, useFormControlProps };","map":{"version":3,"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,yBAA1C;;AAuBO,SAASC,cAAT,CACLC,KADK,EAEL;EACA,MAAM;IAAEC,UAAF;IAAcC,SAAd;IAAyBC,UAAzB;IAAqCC,UAArC;IAAiD,GAAGC;EAApD,IACJC,oBAAoBN,KAApB,CADF;EAGA,OAAO,EACL,GAAGK,IADE;IAELE,UAAUN,UAFL;IAGLO,UAAUL,UAHL;IAILM,UAAUL,UAJL;IAKL,gBAAgBP,SAASK,SAAT,CALX;IAML,iBAAiBL,SAASO,UAAT,CANZ;IAOL,iBAAiBP,SAASM,UAAT;EAPZ,CAAP;AASF;;AAKO,SAASG,mBAAT,CACLN,KADK,EAEL;EA7CF;;EA8CE,MAAMU,QAAQC,uBAAd;EAEA,MAAM;IACJC,EADI;IAEJL,QAFI;IAGJC,QAHI;IAIJC,QAJI;IAKJL,UALI;IAMJF,SANI;IAOJC,UAPI;IAQJF,UARI;IASJY,OATI;IAUJC,MAVI;IAWJ,GAAGT;EAXC,IAYFL,KAZJ;EAcA,MAAMe,WAAqBf,MAAM,kBAAN,IACvB,CAACA,MAAM,kBAAN,CAAD,CADuB,GAEvB,EAFJ;;EAKA,KAAIU,+BAAOM,eAAX,MAA8BN,+BAAOR,SAArC,GAAgD;IAC9Ca,SAASE,IAAT,CAAcP,MAAMQ,UAApB;EACF;;EAEA,IAAIR,+BAAOS,WAAX,EAAwB;IACtBJ,SAASE,IAAT,CAAcP,MAAMU,UAApB;EACF;;EAEA,OAAO,EACL,GAAGf,IADE;IAEL,oBAAoBU,SAASM,IAAT,CAAc,GAAd,KAAsB,MAFrC;IAGLT,IAAIA,kBAAMF,+BAAOE,EAHZ;IAILX,aAAYqB,mCAAYrB,UAAxB,KAAY,IAAZ,GAAYqB,EAAZ,GAAsCZ,+BAAOT,UAJxC;IAKLE,aAAYoB,mCAAYpB,UAAxB,KAAY,IAAZ,GAAYoB,EAAZ,GAAsCb,+BAAOP,UALxC;IAMLC,aAAYoB,mCAAYpB,UAAxB,KAAY,IAAZ,GAAYoB,EAAZ,GAAsCd,+BAAON,UANxC;IAOLF,WAAWA,gCAAaQ,+BAAOR,SAP1B;IAQLW,SAASf,gBAAgBY,+BAAOG,OAAvB,EAAgCA,OAAhC,CARJ;IASLC,QAAQhB,gBAAgBY,+BAAOI,MAAvB,EAA+BA,MAA/B;EATH,CAAP;AAWF","names":["ariaAttr","callAllHandlers","useFormControl","props","isDisabled","isInvalid","isReadOnly","isRequired","rest","useFormControlProps","disabled","readOnly","required","field","useFormControlContext","id","onFocus","onBlur","labelIds","hasFeedbackText","push","feedbackId","hasHelpText","helpTextId","join","_a","_b","_c"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\form-control\\src\\use-form-control.ts"],"sourcesContent":["import { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: React.FocusEventHandler<T>\n  onBlur?: React.FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n  \"aria-describedby\"?: string\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } =\n    useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\n/**\n * @internal\n */\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = props[\"aria-describedby\"]\n    ? [props[\"aria-describedby\"]]\n    : []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { memo } from '../../../utils/memo.mjs';\nimport { scrollInfo } from './track.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nfunction scrollTimelineFallback(_ref) {\n  let {\n    source,\n    axis = \"y\"\n  } = _ref;\n  // ScrollTimeline records progress as a percentage CSSUnitValue\n  const currentTime = {\n    value: 0\n  };\n  const cancel = scrollInfo(info => {\n    currentTime.value = info[axis].progress * 100;\n  }, {\n    container: source,\n    axis\n  });\n  return {\n    currentTime,\n    cancel\n  };\n}\n\nconst timelineCache = new Map();\n\nfunction getTimeline() {\n  let {\n    source = document.documentElement,\n    axis = \"y\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!timelineCache.has(source)) {\n    timelineCache.set(source, {});\n  }\n\n  const elementCache = timelineCache.get(source);\n\n  if (!elementCache[axis]) {\n    elementCache[axis] = supportsScrollTimeline() ? new ScrollTimeline({\n      source,\n      axis\n    }) : scrollTimelineFallback({\n      source,\n      axis\n    });\n  }\n\n  return elementCache[axis];\n}\n\nfunction scroll(onScroll, options) {\n  const timeline = getTimeline(options);\n  let prevProgress;\n\n  const onFrame = () => {\n    const {\n      currentTime\n    } = timeline;\n    const percentage = currentTime === null ? 0 : currentTime.value;\n    const progress = percentage / 100;\n\n    if (prevProgress !== progress) {\n      onScroll(progress);\n    }\n\n    prevProgress = progress;\n  };\n\n  frame.update(onFrame, true);\n  return () => {\n    cancelFrame(onFrame);\n    if (timeline.cancel) timeline.cancel();\n  };\n}\n\nexport { scroll };","map":{"version":3,"names":["memo","scrollInfo","frame","cancelFrame","supportsScrollTimeline","window","ScrollTimeline","undefined","scrollTimelineFallback","source","axis","currentTime","value","cancel","info","progress","container","timelineCache","Map","getTimeline","document","documentElement","has","set","elementCache","get","scroll","onScroll","options","timeline","prevProgress","onFrame","percentage","update"],"sources":["C:/Purwadhika/JCWD Bandung/4. REAL PROJECT/JCWD0108-03/node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs"],"sourcesContent":["import { memo } from '../../../utils/memo.mjs';\nimport { scrollInfo } from './track.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\nfunction scrollTimelineFallback({ source, axis = \"y\" }) {\n    // ScrollTimeline records progress as a percentage CSSUnitValue\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[axis].progress * 100;\n    }, { container: source, axis });\n    return { currentTime, cancel };\n}\nconst timelineCache = new Map();\nfunction getTimeline({ source = document.documentElement, axis = \"y\", } = {}) {\n    if (!timelineCache.has(source)) {\n        timelineCache.set(source, {});\n    }\n    const elementCache = timelineCache.get(source);\n    if (!elementCache[axis]) {\n        elementCache[axis] = supportsScrollTimeline()\n            ? new ScrollTimeline({ source, axis })\n            : scrollTimelineFallback({ source, axis });\n    }\n    return elementCache[axis];\n}\nfunction scroll(onScroll, options) {\n    const timeline = getTimeline(options);\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            onScroll(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => {\n        cancelFrame(onFrame);\n        if (timeline.cancel)\n            timeline.cancel();\n    };\n}\n\nexport { scroll };\n"],"mappings":"AAAA,SAASA,IAAT,QAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,8BAAnC;AAEA,MAAMC,sBAAsB,GAAGJ,IAAI,CAAC,MAAMK,MAAM,CAACC,cAAP,KAA0BC,SAAjC,CAAnC;;AACA,SAASC,sBAAT,OAAwD;EAAA,IAAxB;IAAEC,MAAF;IAAUC,IAAI,GAAG;EAAjB,CAAwB;EACpD;EACA,MAAMC,WAAW,GAAG;IAAEC,KAAK,EAAE;EAAT,CAApB;EACA,MAAMC,MAAM,GAAGZ,UAAU,CAAEa,IAAD,IAAU;IAChCH,WAAW,CAACC,KAAZ,GAAoBE,IAAI,CAACJ,IAAD,CAAJ,CAAWK,QAAX,GAAsB,GAA1C;EACH,CAFwB,EAEtB;IAAEC,SAAS,EAAEP,MAAb;IAAqBC;EAArB,CAFsB,CAAzB;EAGA,OAAO;IAAEC,WAAF;IAAeE;EAAf,CAAP;AACH;;AACD,MAAMI,aAAa,GAAG,IAAIC,GAAJ,EAAtB;;AACA,SAASC,WAAT,GAA8E;EAAA,IAAzD;IAAEV,MAAM,GAAGW,QAAQ,CAACC,eAApB;IAAqCX,IAAI,GAAG;EAA5C,CAAyD,uEAAJ,EAAI;;EAC1E,IAAI,CAACO,aAAa,CAACK,GAAd,CAAkBb,MAAlB,CAAL,EAAgC;IAC5BQ,aAAa,CAACM,GAAd,CAAkBd,MAAlB,EAA0B,EAA1B;EACH;;EACD,MAAMe,YAAY,GAAGP,aAAa,CAACQ,GAAd,CAAkBhB,MAAlB,CAArB;;EACA,IAAI,CAACe,YAAY,CAACd,IAAD,CAAjB,EAAyB;IACrBc,YAAY,CAACd,IAAD,CAAZ,GAAqBN,sBAAsB,KACrC,IAAIE,cAAJ,CAAmB;MAAEG,MAAF;MAAUC;IAAV,CAAnB,CADqC,GAErCF,sBAAsB,CAAC;MAAEC,MAAF;MAAUC;IAAV,CAAD,CAF5B;EAGH;;EACD,OAAOc,YAAY,CAACd,IAAD,CAAnB;AACH;;AACD,SAASgB,MAAT,CAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;EAC/B,MAAMC,QAAQ,GAAGV,WAAW,CAACS,OAAD,CAA5B;EACA,IAAIE,YAAJ;;EACA,MAAMC,OAAO,GAAG,MAAM;IAClB,MAAM;MAAEpB;IAAF,IAAkBkB,QAAxB;IACA,MAAMG,UAAU,GAAGrB,WAAW,KAAK,IAAhB,GAAuB,CAAvB,GAA2BA,WAAW,CAACC,KAA1D;IACA,MAAMG,QAAQ,GAAGiB,UAAU,GAAG,GAA9B;;IACA,IAAIF,YAAY,KAAKf,QAArB,EAA+B;MAC3BY,QAAQ,CAACZ,QAAD,CAAR;IACH;;IACDe,YAAY,GAAGf,QAAf;EACH,CARD;;EASAb,KAAK,CAAC+B,MAAN,CAAaF,OAAb,EAAsB,IAAtB;EACA,OAAO,MAAM;IACT5B,WAAW,CAAC4B,OAAD,CAAX;IACA,IAAIF,QAAQ,CAAChB,MAAb,EACIgB,QAAQ,CAAChB,MAAT;EACP,CAJD;AAKH;;AAED,SAASa,MAAT"},"metadata":{},"sourceType":"module"}
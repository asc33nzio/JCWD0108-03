{"ast":null,"code":"'use client';\n\nimport { AlertProvider, AlertStylesProvider, getStatusColorScheme } from \"./chunk-XCES3W5V.mjs\"; // src/alert.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Alert = forwardRef(function Alert2(props, ref) {\n  var _a;\n\n  const {\n    status = \"info\",\n    addRole = true,\n    ...rest\n  } = omitThemingProps(props);\n  const colorScheme = (_a = props.colorScheme) != null ? _a : getStatusColorScheme(status);\n  const styles = useMultiStyleConfig(\"Alert\", { ...props,\n    colorScheme\n  });\n  const alertStyles = {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container\n  };\n  return /* @__PURE__ */jsx(AlertProvider, {\n    value: {\n      status\n    },\n    children: /* @__PURE__ */jsx(AlertStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.div, {\n        \"data-status\": status,\n        role: addRole ? \"alert\" : void 0,\n        ref,\n        ...rest,\n        className: cx(\"chakra-alert\", props.className),\n        __css: alertStyles\n      })\n    })\n  });\n});\nAlert.displayName = \"Alert\";\nexport { Alert };","map":{"version":3,"mappings":";;;;AAAA,SAASA,EAAT,QAAmB,yBAAnB;AACA,SACEC,MADF,EAEEC,UAFF,EAIEC,gBAJF,EAOEC,mBAPF,QAQO,mBARP;AA2DQ;AAlBD,IAAMC,QAAQH,WAA8B,SAASG,MAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2B;EA1C9E;;EA2CE,MAAM;IAAEC,SAAS,MAAX;IAAmBC,UAAU,IAA7B;IAAmC,GAAGC;EAAtC,IAA+CP,iBAAiBG,KAAjB,CAArD;EACA,MAAMK,eAAcC,WAAMD,WAApB,KAAc,IAAd,GAAcC,EAAd,GAAmCC,qBAAqBL,MAArB,CAAzC;EAEA,MAAMM,SAASV,oBAAoB,OAApB,EAA6B,EAAE,GAAGE,KAAL;IAAYK;EAAZ,CAA7B,CAAf;EAEA,MAAMI,cAAiC;IACrCC,OAAO,MAD8B;IAErCC,SAAS,MAF4B;IAGrCC,YAAY,QAHyB;IAIrCC,UAAU,UAJ2B;IAKrCC,UAAU,QAL2B;IAMrC,GAAGN,OAAOO;EAN2B,CAAvC;EASA,OACE,mBAACC,aAAD,EAAC;IAAcC,OAAO;MAAEf;IAAF,CAArB;IACCgB,6BAACC,mBAAD,EAAC;MAAoBF,OAAOT,MAA3B;MACCU,6BAACvB,OAAOyB,GAAR,EAAC;QACC,eAAalB,MADd;QAECmB,MAAMlB,UAAU,OAAV,GAAoB,MAF3B;QAGCF,GAHD;QAIE,GAAGG,IAJL;QAKCkB,WAAW5B,GAAG,cAAH,EAAmBM,MAAMsB,SAAzB,CALZ;QAMCC,OAAOd;MANR,CAAD;IADD,CAAD;EADD,CAAD,CADF;AAcD,CA7BoB,CAAd;AA+BPV,MAAMyB,WAAN,GAAoB,OAApB","names":["cx","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","Alert","props","ref","status","addRole","rest","colorScheme","_a","getStatusColorScheme","styles","alertStyles","width","display","alignItems","position","overflow","container","AlertProvider","value","children","AlertStylesProvider","div","role","className","__css","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\alert\\src\\alert.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport {\n  AlertProvider,\n  AlertStatus,\n  AlertStylesProvider,\n  getStatusColorScheme,\n} from \"./alert-context\"\n\ninterface AlertOptions {\n  /**\n   * The status of the alert\n   * @default \"info\"\n   */\n  status?: AlertStatus\n}\n\nexport interface AlertProps\n  extends HTMLChakraProps<\"div\">,\n    AlertOptions,\n    ThemingProps<\"Alert\"> {\n  /**\n   * @default false\n   */\n  addRole?: boolean\n}\n\n/**\n * Alert is used to communicate the state or status of a\n * page, feature or action\n *\n * @see Docs https://chakra-ui.com/docs/components/alert\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/alert/\n */\nexport const Alert = forwardRef<AlertProps, \"div\">(function Alert(props, ref) {\n  const { status = \"info\", addRole = true, ...rest } = omitThemingProps(props)\n  const colorScheme = props.colorScheme ?? getStatusColorScheme(status)\n\n  const styles = useMultiStyleConfig(\"Alert\", { ...props, colorScheme })\n\n  const alertStyles: SystemStyleObject = {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container,\n  }\n\n  return (\n    <AlertProvider value={{ status }}>\n      <AlertStylesProvider value={styles}>\n        <chakra.div\n          data-status={status}\n          role={addRole ? \"alert\" : undefined}\n          ref={ref}\n          {...rest}\n          className={cx(\"chakra-alert\", props.className)}\n          __css={alertStyles}\n        />\n      </AlertStylesProvider>\n    </AlertProvider>\n  )\n})\n\nAlert.displayName = \"Alert\"\n"]},"metadata":{},"sourceType":"module"}
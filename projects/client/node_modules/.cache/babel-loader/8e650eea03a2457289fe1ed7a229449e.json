{"ast":null,"code":"'use client'; // src/slider-utils.ts\n\nfunction getIds(id) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: i => `slider-thumb-${id}-${i}`,\n    getInput: i => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: i => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`\n  };\n}\n\nfunction orient(options) {\n  const {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\n\nvar zeroSize = {\n  width: 0,\n  height: 0\n};\n\nvar normalize = a => a || zeroSize;\n\nfunction getStyles(options) {\n  const {\n    orientation,\n    thumbPercents,\n    thumbRects,\n    isReversed\n  } = options;\n\n  const getThumbStyle = i => {\n    var _a;\n\n    const rect = (_a = thumbRects[i]) != null ? _a : zeroSize;\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - ${rect.height / 2}px)`\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - ${rect.width / 2}px)`\n        }\n      })\n    };\n  };\n\n  const size = orientation === \"vertical\" ? thumbRects.reduce((a, b) => normalize(a).height > normalize(b).height ? a : b, zeroSize) : thumbRects.reduce((a, b) => normalize(a).width > normalize(b).width ? a : b, zeroSize);\n  const rootStyle = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size ? {\n        paddingLeft: size.width / 2,\n        paddingRight: size.width / 2\n      } : {},\n      horizontal: size ? {\n        paddingTop: size.height / 2,\n        paddingBottom: size.height / 2\n      } : {}\n    })\n  };\n  const trackStyle = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\"\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\"\n      }\n    })\n  };\n  const isSingleThumb = thumbPercents.length === 1;\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  const range = isSingleThumb ? fallback : thumbPercents;\n  let start = range[0];\n\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n\n  const percent = Math.abs(range[range.length - 1] - range[0]);\n  const innerTrackStyle = { ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed ? {\n        height: `${percent}%`,\n        top: `${start}%`\n      } : {\n        height: `${percent}%`,\n        bottom: `${start}%`\n      },\n      horizontal: isReversed ? {\n        width: `${percent}%`,\n        right: `${start}%`\n      } : {\n        width: `${percent}%`,\n        left: `${start}%`\n      }\n    })\n  };\n  return {\n    trackStyle,\n    innerTrackStyle,\n    rootStyle,\n    getThumbStyle\n  };\n}\n\nfunction getIsReversed(options) {\n  const {\n    isReversed,\n    direction,\n    orientation\n  } = options;\n\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  }\n\n  return !isReversed;\n}\n\nexport { getIds, orient, getStyles, getIsReversed };","map":{"version":3,"mappings":"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","names":["getIds","id","root","getThumb","i","getInput","track","innerTrack","getMarker","output","orient","options","orientation","vertical","horizontal","zeroSize","width","height","normalize","a","getStyles","thumbPercents","thumbRects","isReversed","getThumbStyle","rect","_a","position","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","touchAction","bottom","left","size","reduce","b","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","isSingleThumb","length","fallback","range","start","percent","Math","abs","innerTrackStyle","right","getIsReversed","direction"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\slider\\src\\slider-utils.ts"],"sourcesContent":["export function getIds(id: string | number) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: (i: number) => `slider-thumb-${id}-${i}`,\n    getInput: (i: number) => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: (i: number) => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`,\n  }\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport function orient(options: {\n  orientation: Orientation\n  vertical: React.CSSProperties\n  horizontal: React.CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\ntype Size = { height: number; width: number }\n\nconst zeroSize: Size = { width: 0, height: 0 }\n\nconst normalize = (a: Size | undefined) => a || zeroSize\n\nexport function getStyles(options: {\n  orientation: Orientation\n  thumbPercents: number[]\n  thumbRects: Array<Size | undefined>\n  isReversed?: boolean\n}) {\n  const { orientation, thumbPercents, thumbRects, isReversed } = options\n\n  const getThumbStyle = (i: number): React.CSSProperties => {\n    const rect = thumbRects[i] ?? zeroSize\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - ${rect.height / 2}px)`,\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - ${rect.width / 2}px)`,\n        },\n      }),\n    }\n  }\n\n  const size =\n    orientation === \"vertical\"\n      ? thumbRects.reduce(\n          (a, b) => (normalize(a).height > normalize(b).height ? a : b),\n          zeroSize,\n        )\n      : thumbRects.reduce(\n          (a, b) => (normalize(a).width > normalize(b).width ? a : b),\n          zeroSize,\n        )\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size\n        ? {\n            paddingLeft: size.width / 2,\n            paddingRight: size.width / 2,\n          }\n        : {},\n      horizontal: size\n        ? {\n            paddingTop: size.height / 2,\n            paddingBottom: size.height / 2,\n          }\n        : {},\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const isSingleThumb = thumbPercents.length === 1\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]]\n  const range = isSingleThumb ? fallback : thumbPercents\n\n  let start = range[0]\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0])\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${percent}%`, top: `${start}%` }\n        : { height: `${percent}%`, bottom: `${start}%` },\n      horizontal: isReversed\n        ? { width: `${percent}%`, right: `${start}%` }\n        : { width: `${percent}%`, left: `${start}%` },\n    }),\n  }\n\n  return { trackStyle, innerTrackStyle, rootStyle, getThumbStyle }\n}\n\nexport function getIsReversed(options: {\n  isReversed?: boolean\n  direction: \"ltr\" | \"rtl\"\n  orientation?: \"horizontal\" | \"vertical\"\n}) {\n  const { isReversed, direction, orientation } = options\n\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed\n  }\n  // only flip for horizontal RTL\n  // if isReserved 🔜  otherwise  🔚\n  return !isReversed\n}\n"]},"metadata":{},"sourceType":"module"}
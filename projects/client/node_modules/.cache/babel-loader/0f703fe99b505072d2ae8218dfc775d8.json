{"ast":null,"code":"'use client';\n\nimport { useAvatarStyles } from \"./chunk-RD3LQCU3.mjs\"; // src/avatar-badge.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar placementMap = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\"\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\"\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\"\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\"\n  }\n};\nvar AvatarBadge = forwardRef(function AvatarBadge2(props, ref) {\n  const {\n    placement = \"bottom-end\",\n    className,\n    ...rest\n  } = props;\n  const styles = useAvatarStyles();\n  const placementStyles = placementMap[placement];\n  const badgeStyles = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...placementStyles,\n    ...styles.badge\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    ...rest,\n    className: cx(\"chakra-avatar__badge\", className),\n    __css: badgeStyles\n  });\n});\nAvatarBadge.displayName = \"AvatarBadge\";\nexport { AvatarBadge };","map":{"version":3,"mappings":";;;;AAAA,SACEA,MADF,EAEEC,UAFF,QAKO,mBALP;AAMA,SAASC,EAAT,QAAmB,yBAAnB;AAqDM;AAhDN,IAAMC,eAA0D;EAC9D,aAAa;IACXC,KAAK,GADM;IAEXC,YAAY,GAFD;IAGXC,WAAW;EAHA,CADiD;EAM9D,WAAW;IACTF,KAAK,GADI;IAETG,UAAU,GAFD;IAGTD,WAAW;EAHF,CANmD;EAW9D,gBAAgB;IACdE,QAAQ,GADM;IAEdH,YAAY,GAFE;IAGdC,WAAW;EAHG,CAX8C;EAgB9D,cAAc;IACZE,QAAQ,GADI;IAEZD,UAAU,GAFE;IAGZD,WAAW;EAHC;AAhBgD,CAAhE;AA+BO,IAAMG,cAAcR,WACzB,SAASQ,YAAT,CAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;EAC/B,MAAM;IAAEC,YAAY,YAAd;IAA4BC,SAA5B;IAAuC,GAAGC;EAA1C,IAAmDJ,KAAzD;EACA,MAAMK,SAASC,iBAAf;EAEA,MAAMC,kBAAkBd,aAAaS,SAAb,CAAxB;EAEA,MAAMM,cAAiC;IACrCC,UAAU,UAD2B;IAErCC,SAAS,MAF4B;IAGrCC,YAAY,QAHyB;IAIrCC,gBAAgB,QAJqB;IAKrC,GAAGL,eALkC;IAMrC,GAAGF,OAAOQ;EAN2B,CAAvC;EASA,OACE,mBAACvB,OAAOwB,GAAR,EAAC;IACCb,GADD;IAEE,GAAGG,IAFL;IAGCD,WAAWX,GAAG,sBAAH,EAA2BW,SAA3B,CAHZ;IAICY,OAAOP;EAJR,CAAD,CADF;AAQF,CAxByB,CAApB;AA2BPT,YAAYiB,WAAZ,GAA0B,aAA1B","names":["chakra","forwardRef","cx","placementMap","top","insetStart","transform","insetEnd","bottom","AvatarBadge","props","ref","placement","className","rest","styles","useAvatarStyles","placementStyles","badgeStyles","position","display","alignItems","justifyContent","badge","div","__css","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\avatar\\src\\avatar-badge.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useAvatarStyles } from \"./avatar-context\"\n\ntype BadgePlacement = \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\"\n\nconst placementMap: Record<BadgePlacement, SystemStyleObject> = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\",\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\",\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\",\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\",\n  },\n}\n\nexport interface AvatarBadgeProps extends HTMLChakraProps<\"div\"> {\n  placement?: BadgePlacement\n}\n\n/**\n * AvatarBadge used to show extra badge to the top-right\n * or bottom-right corner of an avatar.\n */\nexport const AvatarBadge = forwardRef<AvatarBadgeProps, \"div\">(\n  function AvatarBadge(props, ref) {\n    const { placement = \"bottom-end\", className, ...rest } = props\n    const styles = useAvatarStyles()\n\n    const placementStyles = placementMap[placement]\n\n    const badgeStyles: SystemStyleObject = {\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      ...placementStyles,\n      ...styles.badge,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...rest}\n        className={cx(\"chakra-avatar__badge\", className)}\n        __css={badgeStyles}\n      />\n    )\n  },\n)\n\nAvatarBadge.displayName = \"AvatarBadge\"\n"]},"metadata":{},"sourceType":"module"}
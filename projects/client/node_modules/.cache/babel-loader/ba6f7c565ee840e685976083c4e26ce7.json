{"ast":null,"code":"'use client'; // src/index.ts\n\nimport { useRef } from \"react\";\n\nfunction useLatestRef(value) {\n  const ref = useRef(null);\n  ref.current = value;\n  return ref;\n}\n\nexport { useLatestRef };","map":{"version":3,"mappings":";;AAAA,SAASA,MAAT,QAAuB,OAAvB;;AAQO,SAASC,YAAT,CAAyBC,KAAzB,EAAmC;EACxC,MAAMC,MAAMH,OAAiB,IAAjB,CAAZ;EACAG,IAAIC,OAAJ,GAAcF,KAAd;EACA,OAAOC,GAAP;AACF","names":["useRef","useLatestRef","value","ref","current"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\react-use-latest-ref\\src\\index.ts"],"sourcesContent":["import { useRef } from \"react\"\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param value the value or function to persist\n */\nexport function useLatestRef<T>(value: T) {\n  const ref = useRef<T | null>(null)\n  ref.current = value\n  return ref as React.MutableRefObject<T>\n}\n"]},"metadata":{},"sourceType":"module"}
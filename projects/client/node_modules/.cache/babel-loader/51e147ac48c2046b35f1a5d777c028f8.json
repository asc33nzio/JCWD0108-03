{"ast":null,"code":"'use client'; // src/chakra-provider.tsx\n\nimport { ChakraProvider as BaseChakraProvider } from \"@chakra-ui/provider\";\nimport { theme as defaultTheme, baseTheme } from \"@chakra-ui/theme\";\nimport { ToastProvider, ToastOptionProvider } from \"@chakra-ui/toast\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\n\nvar createChakraProvider = providerTheme => {\n  return function ChakraProvider2(_ref) {\n    let {\n      children,\n      theme = providerTheme,\n      toastOptions,\n      ...restProps\n    } = _ref;\n    return /* @__PURE__ */jsxs(BaseChakraProvider, {\n      theme,\n      ...restProps,\n      children: [/* @__PURE__ */jsx(ToastOptionProvider, {\n        value: toastOptions == null ? void 0 : toastOptions.defaultOptions,\n        children\n      }), /* @__PURE__ */jsx(ToastProvider, { ...toastOptions\n      })]\n    });\n  };\n};\n\nvar ChakraProvider = createChakraProvider(defaultTheme);\nvar ChakraBaseProvider = createChakraProvider(baseTheme);\nexport { ChakraProvider, ChakraBaseProvider };","map":{"version":3,"mappings":";;AAAA,SACEA,kBAAkBC,kBADpB,QAGO,qBAHP;AAIA,SAASC,SAASC,YAAlB,EAAgCC,SAAhC,QAAwD,kBAAxD;AACA,SACEC,aADF,EAGEC,mBAHF,QAIO,kBAJP;AAwBM,SACEC,GADF;;AAVN,IAAMC,uBACJC,aAD2B,IAExB;EACH,OAAO,SAAST,eAAT,OAKiB;IAAA,IALO;MAC7BU,QAD6B;MAE7BR,QAAQO,aAFqB;MAG7BE,YAH6B;MAI7B,GAAGC;IAJ0B,CAKP;IACtB,OACE,oBAACX,kBAAD,EAAC;MAAmBC,KAAnB;MAAkC,GAAGU,SAArC;MACCF,8BAACJ,mBAAD,EAAC;QAAoBO,OAAOF,6CAAcG,cAAzC;QACEJ;MADF,CAAD,GAGA,mBAACL,aAAD,EAAC,EAAe,GAAGM;MAAlB,CAAD,CAHA;IADD,CAAD,CADF;EAQF,CAdA;AAeF,CAlBA;;AAoBO,IAAMX,iBAAiBQ,qBAAqBL,YAArB,CAAvB;AACA,IAAMY,qBAAqBP,qBAAqBJ,SAArB,CAA3B","names":["ChakraProvider","BaseChakraProvider","theme","defaultTheme","baseTheme","ToastProvider","ToastOptionProvider","jsx","createChakraProvider","providerTheme","children","toastOptions","restProps","value","defaultOptions","ChakraBaseProvider"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\react\\src\\chakra-provider.tsx"],"sourcesContent":["import {\n  ChakraProvider as BaseChakraProvider,\n  ChakraProviderProps as BaseChakraProviderProps,\n} from \"@chakra-ui/provider\"\nimport { theme as defaultTheme, baseTheme, Theme } from \"@chakra-ui/theme\"\nimport {\n  ToastProvider,\n  ToastProviderProps,\n  ToastOptionProvider,\n} from \"@chakra-ui/toast\"\nimport { Dict } from \"@chakra-ui/utils\"\n\nexport interface ChakraProviderProps extends BaseChakraProviderProps {\n  /**\n   * Provide defaults for `useToast()` usages for `ChakraProvider`s children\n   */\n  toastOptions?: ToastProviderProps\n}\n\nconst createChakraProvider = (\n  providerTheme: Theme | (Omit<Theme, \"components\"> & { components: Dict }),\n) => {\n  return function ChakraProvider({\n    children,\n    theme = providerTheme,\n    toastOptions,\n    ...restProps\n  }: ChakraProviderProps) {\n    return (\n      <BaseChakraProvider theme={theme} {...restProps}>\n        <ToastOptionProvider value={toastOptions?.defaultOptions}>\n          {children}\n        </ToastOptionProvider>\n        <ToastProvider {...toastOptions} />\n      </BaseChakraProvider>\n    )\n  }\n}\n\nexport const ChakraProvider = createChakraProvider(defaultTheme)\nexport const ChakraBaseProvider = createChakraProvider(baseTheme)\n"]},"metadata":{},"sourceType":"module"}
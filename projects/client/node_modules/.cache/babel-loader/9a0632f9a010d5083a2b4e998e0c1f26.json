{"ast":null,"code":"'use client';\n\nimport { useStepContext } from \"./chunk-5JULEEQD.mjs\"; // src/step-status.tsx\n\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\n\nfunction StepStatus(props) {\n  const {\n    complete,\n    incomplete,\n    active\n  } = props;\n  const context = useStepContext();\n  let render = null;\n\n  switch (context.status) {\n    case \"complete\":\n      render = runIfFn(complete, context);\n      break;\n\n    case \"incomplete\":\n      render = runIfFn(incomplete, context);\n      break;\n\n    case \"active\":\n      render = runIfFn(active, context);\n      break;\n  }\n\n  return render ? /* @__PURE__ */jsx(Fragment, {\n    children: render\n  }) : null;\n}\n\nexport { StepStatus };","map":{"version":3,"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,yBAAxB;AA4BkB;;AAlBX,SAASC,UAAT,CAAoBC,KAApB,EAA4C;EACjD,MAAM;IAAEC,QAAF;IAAYC,UAAZ;IAAwBC;EAAxB,IAAmCH,KAAzC;EACA,MAAMI,UAAUC,gBAAhB;EAEA,IAAIC,SAAiC,IAArC;;EAEA,QAAQF,QAAQG,MAAhB;IACE,KAAK,UAAL;MACED,SAASR,QAAQG,QAAR,EAAkBG,OAAlB,CAAT;MACA;;IACF,KAAK,YAAL;MACEE,SAASR,QAAQI,UAAR,EAAoBE,OAApB,CAAT;MACA;;IACF,KAAK,QAAL;MACEE,SAASR,QAAQK,MAAR,EAAgBC,OAAhB,CAAT;MACA;EATJ;;EAYA,OAAOE,SAAS;IAAGE;EAAH,EAAT,GAAyB,IAAhC;AACF","names":["runIfFn","StepStatus","props","complete","incomplete","active","context","useStepContext","render","status","children"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\stepper\\src\\step-status.tsx"],"sourcesContent":["import { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { StepContext, StepStatusType, useStepContext } from \"./step-context\"\n\ntype MaybeRenderProp =\n  | React.ReactNode\n  | ((props: StepContext) => React.ReactNode)\n\nexport interface StepStatusProps\n  extends Partial<Record<StepStatusType, MaybeRenderProp>> {}\n\nexport function StepStatus(props: StepStatusProps) {\n  const { complete, incomplete, active } = props\n  const context = useStepContext()\n\n  let render: React.ReactNode | null = null\n\n  switch (context.status) {\n    case \"complete\":\n      render = runIfFn(complete, context)\n      break\n    case \"incomplete\":\n      render = runIfFn(incomplete, context)\n      break\n    case \"active\":\n      render = runIfFn(active, context)\n      break\n  }\n\n  return render ? <>{render}</> : null\n}\n"]},"metadata":{},"sourceType":"module"}
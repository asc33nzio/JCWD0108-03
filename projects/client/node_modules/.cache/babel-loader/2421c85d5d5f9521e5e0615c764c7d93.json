{"ast":null,"code":"'use client'; // src/tag.tsx\n\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nvar Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */jsx(TagStylesProvider, {\n    value: styles,\n    children: /* @__PURE__ */jsx(chakra.span, {\n      ref,\n      ...ownProps,\n      __css: containerStyles\n    })\n  });\n});\nTag.displayName = \"Tag\";\nvar TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */jsx(chakra.span, {\n    ref,\n    noOfLines: 1,\n    ...props,\n    __css: styles.label\n  });\n});\nTagLabel.displayName = \"TagLabel\";\nvar TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */jsx(Icon, {\n  ref,\n  verticalAlign: \"top\",\n  marginEnd: \"0.5rem\",\n  ...props\n}));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nvar TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */jsx(Icon, {\n  ref,\n  verticalAlign: \"top\",\n  marginStart: \"0.5rem\",\n  ...props\n}));\nTagRightIcon.displayName = \"TagRightIcon\";\n\nvar TagCloseIcon = props => /* @__PURE__ */jsx(Icon, {\n  verticalAlign: \"inherit\",\n  viewBox: \"0 0 512 512\",\n  ...props,\n  children: /* @__PURE__ */jsx(\"path\", {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  })\n});\n\nTagCloseIcon.displayName = \"TagCloseIcon\";\nvar TagCloseButton = forwardRef((props, ref) => {\n  const {\n    isDisabled,\n    children,\n    ...rest\n  } = props;\n  const styles = useTagStyles();\n  const btnStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    ...styles.closeButton\n  };\n  return /* @__PURE__ */jsx(chakra.button, {\n    ref,\n    \"aria-label\": \"close\",\n    ...rest,\n    type: \"button\",\n    disabled: isDisabled,\n    __css: btnStyles,\n    children: children || /* @__PURE__ */jsx(TagCloseIcon, {})\n  });\n});\nTagCloseButton.displayName = \"TagCloseButton\";\nexport { useTagStyles, Tag, TagLabel, TagLeftIcon, TagRightIcon, TagCloseButton };","map":{"version":3,"mappings":";;AAAA,SAASA,IAAT,QAAgC,iBAAhC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SACEC,MADF,EAEEC,UAFF,EAIEC,gBAJF,EAOEC,mBAPF,QAQO,mBARP;AA0CM;AAhCN,IAAM,CAACC,iBAAD,EAAoBC,YAApB,IAAoCN,cAExC;EACAO,MAAM,kBADN;EAEAC,cAAc;AAFd,CAFwC,CAA1C;AAkBO,IAAMC,MAAMP,WAA6B,CAACQ,KAAD,EAAQC,GAAR,KAAgB;EAC9D,MAAMC,SAASR,oBAAoB,KAApB,EAA2BM,KAA3B,CAAf;EACA,MAAMG,WAAWV,iBAAiBO,KAAjB,CAAjB;EAEA,MAAMI,kBAAqC;IACzCC,SAAS,aADgC;IAEzCC,eAAe,KAF0B;IAGzCC,YAAY,QAH6B;IAIzCC,UAAU,MAJ+B;IAKzC,GAAGN,OAAOO;EAL+B,CAA3C;EAQA,OACE,mBAACd,iBAAD,EAAC;IAAkBe,OAAOR,MAAzB;IACCS,6BAACpB,OAAOqB,IAAR,EAAC;MAAYX,GAAZ;MAAuB,GAAGE,QAA1B;MAAoCU,OAAOT;IAA3C,CAAD;EADD,CAAD,CADF;AAKD,CAjBkB,CAAZ;AAmBPL,IAAIe,WAAJ,GAAkB,KAAlB;AAIO,IAAMC,WAAWvB,WAAkC,CAACQ,KAAD,EAAQC,GAAR,KAAgB;EACxE,MAAMC,SAASN,cAAf;EACA,OAAO,mBAACL,OAAOqB,IAAR,EAAC;IAAYX,GAAZ;IAAsBe,WAAW,CAAjC;IAAqC,GAAGhB,KAAxC;IAA+Ca,OAAOX,OAAOe;EAA7D,CAAD,CAAP;AACD,CAHuB,CAAjB;AAKPF,SAASD,WAAT,GAAuB,UAAvB;AAEO,IAAMI,cAAc1B,WAA6B,CAACQ,KAAD,EAAQC,GAAR,KACtD,mBAACZ,IAAD,EAAC;EAAKY,GAAL;EAAeK,eAAc,KAA7B;EAAmCa,WAAU,QAA7C;EAAuD,GAAGnB;AAA1D,CAAD,CADyB,CAApB;AAIPkB,YAAYJ,WAAZ,GAA0B,aAA1B;AAEO,IAAMM,eAAe5B,WAA6B,CAACQ,KAAD,EAAQC,GAAR,KACvD,mBAACZ,IAAD,EAAC;EAAKY,GAAL;EAAeK,eAAc,KAA7B;EAAmCe,aAAY,QAA/C;EAAyD,GAAGrB;AAA5D,CAAD,CAD0B,CAArB;AAIPoB,aAAaN,WAAb,GAA2B,cAA3B;;AAEA,IAAMQ,eAAqCtB,KAAD,IACxC,mBAACX,IAAD,EAAC;EAAKiB,eAAc,SAAnB;EAA6BiB,SAAQ,aAArC;EAAoD,GAAGvB,KAAvD;EACCW,6BAAC,MAAD,EAAC;IACCa,MAAK,cADN;IAECC,GAAE;EAFH,CAAD;AADD,CAAD,CADF;;AASAH,aAAaR,WAAb,GAA2B,cAA3B;AAcO,IAAMY,iBAAiBlC,WAC5B,CAACQ,KAAD,EAAQC,GAAR,KAAgB;EACd,MAAM;IAAE0B,UAAF;IAAchB,QAAd;IAAwB,GAAGiB;EAA3B,IAAoC5B,KAA1C;EAEA,MAAME,SAASN,cAAf;EAEA,MAAMiC,YAA+B;IACnCxB,SAAS,MAD0B;IAEnCE,YAAY,QAFuB;IAGnCuB,gBAAgB,QAHmB;IAInCC,SAAS,GAJ0B;IAKnC,GAAG7B,OAAO8B;EALyB,CAArC;EAQA,OACE,mBAACzC,OAAO0C,MAAR,EAAC;IACChC,GADD;IAEC,cAAW,OAFZ;IAGE,GAAG2B,IAHL;IAICM,MAAK,QAJN;IAKCC,UAAUR,UALX;IAMCd,OAAOgB,SANR;IAQElB,sBAAY,mBAACW,YAAD,EAAC,EAAD;EARd,CAAD,CADF;AAYF,CA1B4B,CAAvB;AA6BPI,eAAeZ,WAAf,GAA6B,gBAA7B","names":["Icon","createContext","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","TagStylesProvider","useTagStyles","name","errorMessage","Tag","props","ref","styles","ownProps","containerStyles","display","verticalAlign","alignItems","maxWidth","container","value","children","span","__css","displayName","TagLabel","noOfLines","label","TagLeftIcon","marginEnd","TagRightIcon","marginStart","TagCloseIcon","viewBox","fill","d","TagCloseButton","isDisabled","rest","btnStyles","justifyContent","outline","closeButton","button","type","disabled"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\tag\\src\\tag.tsx"],"sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [TagStylesProvider, useTagStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `,\n})\n\nexport { useTagStyles }\n\nexport interface TagProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Tag\"> {}\n\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/tag\n */\nexport const Tag = forwardRef<TagProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props)\n  const ownProps = omitThemingProps(props)\n\n  const containerStyles: SystemStyleObject = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container,\n  }\n\n  return (\n    <TagStylesProvider value={styles}>\n      <chakra.span ref={ref} {...ownProps} __css={containerStyles} />\n    </TagStylesProvider>\n  )\n})\n\nTag.displayName = \"Tag\"\n\nexport interface TagLabelProps extends HTMLChakraProps<\"span\"> {}\n\nexport const TagLabel = forwardRef<TagLabelProps, \"span\">((props, ref) => {\n  const styles = useTagStyles()\n  return <chakra.span ref={ref} noOfLines={1} {...props} __css={styles.label} />\n})\n\nTagLabel.displayName = \"TagLabel\"\n\nexport const TagLeftIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginEnd=\"0.5rem\" {...props} />\n))\n\nTagLeftIcon.displayName = \"TagLeftIcon\"\n\nexport const TagRightIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginStart=\"0.5rem\" {...props} />\n))\n\nTagRightIcon.displayName = \"TagRightIcon\"\n\nconst TagCloseIcon: React.FC<IconProps> = (props) => (\n  <Icon verticalAlign=\"inherit\" viewBox=\"0 0 512 512\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n    />\n  </Icon>\n)\n\nTagCloseIcon.displayName = \"TagCloseIcon\"\n\nexport interface TagCloseButtonProps\n  extends Omit<HTMLChakraProps<\"button\">, \"disabled\"> {\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/tag\n */\nexport const TagCloseButton = forwardRef<TagCloseButtonProps, \"button\">(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props\n\n    const styles = useTagStyles()\n\n    const btnStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton,\n    }\n\n    return (\n      <chakra.button\n        ref={ref}\n        aria-label=\"close\"\n        {...rest}\n        type=\"button\"\n        disabled={isDisabled}\n        __css={btnStyles}\n      >\n        {children || <TagCloseIcon />}\n      </chakra.button>\n    )\n  },\n)\n\nTagCloseButton.displayName = \"TagCloseButton\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client';\n\nimport { useAccordionContext } from \"./chunk-DLWX3JNE.mjs\";\nimport { useAccordionItemContext, useAccordionStyles } from \"./chunk-RUEU7BLR.mjs\"; // src/accordion-panel.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { Collapse } from \"@chakra-ui/transition\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionPanel = forwardRef(function AccordionPanel2(props, ref) {\n  const {\n    className,\n    motionProps,\n    ...rest\n  } = props;\n  const {\n    reduceMotion\n  } = useAccordionContext();\n  const {\n    getPanelProps,\n    isOpen\n  } = useAccordionItemContext();\n  const panelProps = getPanelProps(rest, ref);\n\n  const _className = cx(\"chakra-accordion__panel\", className);\n\n  const styles = useAccordionStyles();\n\n  if (!reduceMotion) {\n    delete panelProps.hidden;\n  }\n\n  const child = /* @__PURE__ */jsx(chakra.div, { ...panelProps,\n    __css: styles.panel,\n    className: _className\n  });\n\n  if (!reduceMotion) {\n    return /* @__PURE__ */jsx(Collapse, {\n      in: isOpen,\n      ...motionProps,\n      children: child\n    });\n  }\n\n  return child;\n});\nAccordionPanel.displayName = \"AccordionPanel\";\nexport { AccordionPanel };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAoD,mBAApD;AACA,SAASC,QAAT,QAAwC,uBAAxC;AACA,SAASC,EAAT,QAAmB,yBAAnB;AAsCM;AAlBC,IAAMC,iBAAiBH,WAC5B,SAASG,eAAT,CAAwBC,KAAxB,EAA+BC,GAA/B,EAAoC;EAClC,MAAM;IAAEC,SAAF;IAAaC,WAAb;IAA0B,GAAGC;EAA7B,IAAsCJ,KAA5C;EAEA,MAAM;IAAEK;EAAF,IAAmBC,qBAAzB;EACA,MAAM;IAAEC,aAAF;IAAiBC;EAAjB,IAA4BC,yBAAlC;EAGA,MAAMC,aAAaH,cAAcH,IAAd,EAAoBH,GAApB,CAAnB;;EAEA,MAAMU,aAAab,GAAG,yBAAH,EAA8BI,SAA9B,CAAnB;;EACA,MAAMU,SAASC,oBAAf;;EAEA,IAAI,CAACR,YAAL,EAAmB;IACjB,OAAOK,WAAWI,MAAlB;EACF;;EAEA,MAAMC,QACJ,mBAACpB,OAAOqB,GAAR,EAAC,EAAY,GAAGN,UAAf;IAA2BO,OAAOL,OAAOM,KAAzC;IAAgDhB,WAAWS;EAA3D,CAAD,CADF;;EAIA,IAAI,CAACN,YAAL,EAAmB;IACjB,OACE,mBAACR,QAAD,EAAC;MAASsB,IAAIX,MAAb;MAAsB,GAAGL,WAAzB;MACEiB;IADF,CAAD,CADF;EAKF;;EAEA,OAAOL,KAAP;AACF,CA9B4B,CAAvB;AAiCPhB,eAAesB,WAAf,GAA6B,gBAA7B","names":["chakra","forwardRef","Collapse","cx","AccordionPanel","props","ref","className","motionProps","rest","reduceMotion","useAccordionContext","getPanelProps","isOpen","useAccordionItemContext","panelProps","_className","styles","useAccordionStyles","hidden","child","div","__css","panel","in","children","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\accordion\\src\\accordion-panel.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { Collapse, CollapseProps } from \"@chakra-ui/transition\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  useAccordionItemContext,\n  useAccordionStyles,\n} from \"./accordion-context\"\nimport { useAccordionContext } from \"./use-accordion\"\n\nexport interface AccordionPanelProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * The properties passed to the underlying `Collapse` component.\n   */\n  motionProps?: CollapseProps\n}\n\n/**\n * Accordion panel that holds the content for each accordion.\n * It shows and hides based on the state login from the `AccordionItem`.\n *\n * It uses the `Collapse` component to animate its height.\n */\nexport const AccordionPanel = forwardRef<AccordionPanelProps, \"div\">(\n  function AccordionPanel(props, ref) {\n    const { className, motionProps, ...rest } = props\n\n    const { reduceMotion } = useAccordionContext()\n    const { getPanelProps, isOpen } = useAccordionItemContext()\n\n    // remove `hidden` prop, 'coz we're using height animation\n    const panelProps = getPanelProps(rest, ref)\n\n    const _className = cx(\"chakra-accordion__panel\", className)\n    const styles = useAccordionStyles()\n\n    if (!reduceMotion) {\n      delete panelProps.hidden\n    }\n\n    const child = (\n      <chakra.div {...panelProps} __css={styles.panel} className={_className} />\n    )\n\n    if (!reduceMotion) {\n      return (\n        <Collapse in={isOpen} {...motionProps}>\n          {child}\n        </Collapse>\n      )\n    }\n\n    return child\n  },\n)\n\nAccordionPanel.displayName = \"AccordionPanel\"\n"]},"metadata":{},"sourceType":"module"}
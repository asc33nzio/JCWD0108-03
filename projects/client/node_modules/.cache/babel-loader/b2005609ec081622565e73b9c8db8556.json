{"ast":null,"code":"'use client';\n\nimport { TabsDescendantsProvider, TabsProvider, useTabs } from \"./chunk-O5AIOR56.mjs\"; // src/tabs.tsx\n\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TabsStylesProvider, useTabsStyles] = createContext({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `\n});\nvar Tabs = forwardRef(function Tabs2(props, ref) {\n  const styles = useMultiStyleConfig(\"Tabs\", props);\n  const {\n    children,\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  const {\n    htmlProps,\n    descendants,\n    ...ctx\n  } = useTabs(rest);\n  const context = useMemo(() => ctx, [ctx]);\n  const {\n    isFitted: _,\n    ...rootProps\n  } = htmlProps;\n  return /* @__PURE__ */jsx(TabsDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */jsx(TabsProvider, {\n      value: context,\n      children: /* @__PURE__ */jsx(TabsStylesProvider, {\n        value: styles,\n        children: /* @__PURE__ */jsx(chakra.div, {\n          className: cx(\"chakra-tabs\", className),\n          ref,\n          ...rootProps,\n          __css: styles.root,\n          children\n        })\n      })\n    })\n  });\n});\nTabs.displayName = \"Tabs\";\nexport { useTabsStyles, Tabs };","map":{"version":3,"mappings":";;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAMEC,mBANF,QAQO,mBARP;AASA,SAASC,EAAT,QAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,OAAxB;AA0DU;AAlDV,IAAM,CAACC,kBAAD,EAAqBC,aAArB,IAAsCR,cAE1C;EACAS,MAAM,mBADN;EAEAC,cAAc;AAFd,CAF0C,CAA5C;AAqCO,IAAMC,OAAOT,WAA6B,SAASS,KAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;EACzE,MAAMC,SAASV,oBAAoB,MAApB,EAA4BQ,KAA5B,CAAf;EACA,MAAM;IAAEG,QAAF;IAAYC,SAAZ;IAAuB,GAAGC;EAA1B,IAAmCd,iBAAiBS,KAAjB,CAAzC;EAEA,MAAM;IAAEM,SAAF;IAAaC,WAAb;IAA0B,GAAGC;EAA7B,IAAqCC,QAAQJ,IAAR,CAA3C;EACA,MAAMK,UAAUhB,QAAQ,MAAMc,GAAd,EAAmB,CAACA,GAAD,CAAnB,CAAhB;EAEA,MAAM;IAAEG,UAAUC,CAAZ;IAAe,GAAGC;EAAlB,IAAgCP,SAAtC;EAEA,OACE,mBAACQ,uBAAD,EAAC;IAAwBC,OAAOR,WAA/B;IACCJ,6BAACa,YAAD,EAAC;MAAaD,OAAOL,OAApB;MACCP,6BAACR,kBAAD,EAAC;QAAmBoB,OAAOb,MAA1B;QACCC,6BAACd,OAAO4B,GAAR,EAAC;UACCb,WAAWX,GAAG,aAAH,EAAkBW,SAAlB,CADZ;UAECH,GAFD;UAGE,GAAGY,SAHL;UAICK,OAAOhB,OAAOiB,IAJf;UAMEhB;QANF,CAAD;MADD,CAAD;IADD,CAAD;EADD,CAAD,CADF;AAgBD,CAzBmB,CAAb;AA2BPJ,KAAKqB,WAAL,GAAmB,MAAnB","names":["createContext","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","useMemo","TabsStylesProvider","useTabsStyles","name","errorMessage","Tabs","props","ref","styles","children","className","rest","htmlProps","descendants","ctx","useTabs","context","isFitted","_","rootProps","TabsDescendantsProvider","value","TabsProvider","div","__css","root","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\tabs\\src\\tabs.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  TabsDescendantsProvider,\n  TabsProvider,\n  useTabs,\n  UseTabsProps,\n} from \"./use-tabs\"\n\nconst [TabsStylesProvider, useTabsStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `,\n})\n\nexport { useTabsStyles }\n\ninterface TabsOptions {\n  /**\n   * If `true`, tabs will stretch to width of the tablist.\n   * @default false\n   */\n  isFitted?: boolean\n  /**\n   * The alignment of the tabs\n   */\n  align?: \"start\" | \"end\" | \"center\"\n}\n\nexport interface TabsProps\n  extends UseTabsProps,\n    ThemingProps<\"Tabs\">,\n    Omit<HTMLChakraProps<\"div\">, \"onChange\">,\n    TabsOptions {\n  children: React.ReactNode\n}\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n *\n * @see Docs https://chakra-ui.com/docs/components/tabs\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n */\nexport const Tabs = forwardRef<TabsProps, \"div\">(function Tabs(props, ref) {\n  const styles = useMultiStyleConfig(\"Tabs\", props)\n  const { children, className, ...rest } = omitThemingProps(props)\n\n  const { htmlProps, descendants, ...ctx } = useTabs(rest)\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isFitted: _, ...rootProps } = htmlProps as any\n\n  return (\n    <TabsDescendantsProvider value={descendants}>\n      <TabsProvider value={context}>\n        <TabsStylesProvider value={styles}>\n          <chakra.div\n            className={cx(\"chakra-tabs\", className)}\n            ref={ref}\n            {...rootProps}\n            __css={styles.root}\n          >\n            {children}\n          </chakra.div>\n        </TabsStylesProvider>\n      </TabsProvider>\n    </TabsDescendantsProvider>\n  )\n})\n\nTabs.displayName = \"Tabs\"\n"]},"metadata":{},"sourceType":"module"}
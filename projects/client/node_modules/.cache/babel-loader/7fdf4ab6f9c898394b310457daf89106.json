{"ast":null,"code":"'use client';\n\nimport { getToastStyle } from \"./chunk-LDADOVIM.mjs\"; // src/toast.component.tsx\n\nimport { useTimeout } from \"@chakra-ui/react-use-timeout\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { motion, useIsPresent } from \"framer-motion\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { memo, useEffect, useMemo, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar toastMotionVariants = {\n  initial: props => {\n    const {\n      position\n    } = props;\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\";\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1;\n    if (position === \"bottom\") factor = 1;\n    return {\n      opacity: 0,\n      [dir]: factor * 24\n    };\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1]\n    }\n  }\n};\nvar ToastComponent = memo(props => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5e3,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\"\n  } = props;\n  const [delay, setDelay] = useState(duration);\n  const isPresent = useIsPresent();\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete == null ? void 0 : onCloseComplete();\n    }\n  }, [isPresent]);\n  useUpdateEffect(() => {\n    setDelay(duration);\n  }, [duration]);\n\n  const onMouseEnter = () => setDelay(null);\n\n  const onMouseLeave = () => setDelay(duration);\n\n  const close = () => {\n    if (isPresent) onRequestRemove();\n  };\n\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove();\n    }\n  }, [isPresent, requestClose, onRequestRemove]);\n  useTimeout(close, delay);\n  const containerStyles = useMemo(() => ({\n    pointerEvents: \"auto\",\n    maxWidth: 560,\n    minWidth: 300,\n    margin: toastSpacing,\n    ...containerStyle\n  }), [containerStyle, toastSpacing]);\n  const toastStyle = useMemo(() => getToastStyle(position), [position]);\n  return /* @__PURE__ */jsx(motion.div, {\n    layout: true,\n    className: \"chakra-toast\",\n    variants: motionVariants,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    onHoverStart: onMouseEnter,\n    onHoverEnd: onMouseLeave,\n    custom: {\n      position\n    },\n    style: toastStyle,\n    children: /* @__PURE__ */jsx(chakra.div, {\n      role: \"status\",\n      \"aria-atomic\": \"true\",\n      className: \"chakra-toast__inner\",\n      __css: containerStyles,\n      children: runIfFn(message, {\n        id,\n        onClose: close\n      })\n    })\n  });\n});\nToastComponent.displayName = \"ToastComponent\";\nexport { ToastComponent };","map":{"version":3,"mappings":"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","names":["useTimeout","useUpdateEffect","runIfFn","motion","useIsPresent","chakra","memo","useEffect","useMemo","useState","toastMotionVariants","initial","props","position","dir","includes","factor","opacity","animate","y","x","scale","transition","duration","ease","exit","ToastComponent","id","message","onCloseComplete","onRequestRemove","requestClose","containerStyle","motionVariants","toastSpacing","delay","setDelay","isPresent","onMouseEnter","onMouseLeave","close","containerStyles","pointerEvents","maxWidth","minWidth","margin","toastStyle","getToastStyle","div","layout","className","variants","onHoverStart","onHoverEnd","custom","style","children","role","__css","onClose","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\toast\\src\\toast.component.tsx"],"sourcesContent":["import { useTimeout } from \"@chakra-ui/react-use-timeout\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { motion, useIsPresent, Variants } from \"framer-motion\"\nimport { chakra } from \"@chakra-ui/system\"\nimport type { ToastOptions } from \"./toast.types\"\nimport { getToastStyle } from \"./toast.utils\"\nimport { ToastProviderProps } from \"./toast.provider\"\nimport { memo, useEffect, useMemo, useState } from \"react\"\n\nconst toastMotionVariants: Variants = {\n  initial: (props) => {\n    const { position } = props\n\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\"\n\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1\n    if (position === \"bottom\") factor = 1\n\n    return {\n      opacity: 0,\n      [dir]: factor * 24,\n    }\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\nexport interface ToastComponentProps\n  extends ToastOptions,\n    Pick<ToastProviderProps, \"motionVariants\" | \"toastSpacing\"> {}\n\nexport const ToastComponent = memo((props: ToastComponentProps) => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\",\n  } = props\n\n  const [delay, setDelay] = useState(duration)\n  const isPresent = useIsPresent()\n\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete?.()\n    }\n  }, [isPresent])\n\n  useUpdateEffect(() => {\n    setDelay(duration)\n  }, [duration])\n\n  const onMouseEnter = () => setDelay(null)\n  const onMouseLeave = () => setDelay(duration)\n\n  const close = () => {\n    if (isPresent) onRequestRemove()\n  }\n\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove()\n    }\n  }, [isPresent, requestClose, onRequestRemove])\n\n  useTimeout(close, delay)\n\n  const containerStyles = useMemo(\n    () => ({\n      pointerEvents: \"auto\",\n      maxWidth: 560,\n      minWidth: 300,\n      margin: toastSpacing,\n      ...containerStyle,\n    }),\n    [containerStyle, toastSpacing],\n  )\n\n  const toastStyle = useMemo(() => getToastStyle(position), [position])\n\n  return (\n    <motion.div\n      layout\n      className=\"chakra-toast\"\n      variants={motionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onHoverStart={onMouseEnter}\n      onHoverEnd={onMouseLeave}\n      custom={{ position }}\n      style={toastStyle}\n    >\n      <chakra.div\n        role=\"status\"\n        aria-atomic=\"true\"\n        className=\"chakra-toast__inner\"\n        __css={containerStyles}\n      >\n        {runIfFn(message, { id, onClose: close })}\n      </chakra.div>\n    </motion.div>\n  )\n})\n\nToastComponent.displayName = \"ToastComponent\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client';\n\nimport { AccordionProvider, useAccordion } from \"./chunk-DLWX3JNE.mjs\";\nimport { AccordionDescendantsProvider, AccordionStylesProvider } from \"./chunk-RUEU7BLR.mjs\"; // src/accordion.tsx\n\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Accordion = forwardRef(function Accordion2(_ref, ref) {\n  let {\n    children,\n    reduceMotion,\n    ...props\n  } = _ref;\n  const styles = useMultiStyleConfig(\"Accordion\", props);\n  const ownProps = omitThemingProps(props);\n  const {\n    htmlProps,\n    descendants,\n    ...context\n  } = useAccordion(ownProps);\n  const ctx = useMemo(() => ({ ...context,\n    reduceMotion: !!reduceMotion\n  }), [context, reduceMotion]);\n  return /* @__PURE__ */jsx(AccordionDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */jsx(AccordionProvider, {\n      value: ctx,\n      children: /* @__PURE__ */jsx(AccordionStylesProvider, {\n        value: styles,\n        children: /* @__PURE__ */jsx(chakra.div, {\n          ref,\n          ...htmlProps,\n          className: cx(\"chakra-accordion\", props.className),\n          __css: styles.root,\n          children\n        })\n      })\n    })\n  });\n});\nAccordion.displayName = \"Accordion\";\nexport { Accordion };","map":{"version":3,"mappings":";;;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAIEC,gBAJF,EAMEC,mBANF,QAOO,mBAPP;AAQA,SAASC,EAAT,QAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAiDU;AAlBH,IAAMC,YAAYL,WAAkC,SAASK,UAAT,OAEzDC,GAFyD,EAGzD;EAAA,IAFA;IAAEC,QAAF;IAAYC,YAAZ;IAA0B,GAAGC;EAA7B,CAEA;EACA,MAAMC,SAASR,oBAAoB,WAApB,EAAiCO,KAAjC,CAAf;EACA,MAAME,WAAWV,iBAAiBQ,KAAjB,CAAjB;EAEA,MAAM;IAAEG,SAAF;IAAaC,WAAb;IAA0B,GAAGC;EAA7B,IAAyCC,aAAaJ,QAAb,CAA/C;EAEA,MAAMK,MAAMZ,QACV,OAAO,EAAE,GAAGU,OAAL;IAAcN,cAAc,CAAC,CAACA;EAA9B,CAAP,CADU,EAEV,CAACM,OAAD,EAAUN,YAAV,CAFU,CAAZ;EAKA,OACE,mBAACS,4BAAD,EAAC;IAA6BC,OAAOL,WAApC;IACCN,6BAACY,iBAAD,EAAC;MAAkBD,OAAOF,GAAzB;MACCT,6BAACa,uBAAD,EAAC;QAAwBF,OAAOR,MAA/B;QACCH,6BAACR,OAAOsB,GAAR,EAAC;UACCf,GADD;UAEE,GAAGM,SAFL;UAGCU,WAAWnB,GAAG,kBAAH,EAAuBM,MAAMa,SAA7B,CAHZ;UAICC,OAAOb,OAAOc,IAJf;UAMEjB;QANF,CAAD;MADD,CAAD;IADD,CAAD;EADD,CAAD,CADF;AAgBD,CA9BwB,CAAlB;AAgCPF,UAAUoB,WAAV,GAAwB,WAAxB","names":["chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","useMemo","Accordion","ref","children","reduceMotion","props","styles","ownProps","htmlProps","descendants","context","useAccordion","ctx","AccordionDescendantsProvider","value","AccordionProvider","AccordionStylesProvider","div","className","__css","root","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\accordion\\src\\accordion.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  AccordionDescendantsProvider,\n  AccordionStylesProvider,\n} from \"./accordion-context\"\nimport {\n  AccordionProvider,\n  useAccordion,\n  UseAccordionProps,\n} from \"./use-accordion\"\n\nexport interface AccordionProps\n  extends UseAccordionProps,\n    Omit<HTMLChakraProps<\"div\">, keyof UseAccordionProps>,\n    ThemingProps<\"Accordion\"> {\n  /**\n   * If `true`, height animation and transitions will be disabled.\n   *\n   * @default false\n   */\n  reduceMotion?: boolean\n}\n\n/**\n * The wrapper that provides context and focus management\n * for all accordion items.\n *\n * It wraps all accordion items in a `div` for better grouping.\n * @see Docs https://chakra-ui.com/accordion\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/accordion/\n */\nexport const Accordion = forwardRef<AccordionProps, \"div\">(function Accordion(\n  { children, reduceMotion, ...props },\n  ref,\n) {\n  const styles = useMultiStyleConfig(\"Accordion\", props)\n  const ownProps = omitThemingProps(props)\n\n  const { htmlProps, descendants, ...context } = useAccordion(ownProps)\n\n  const ctx = useMemo(\n    () => ({ ...context, reduceMotion: !!reduceMotion }),\n    [context, reduceMotion],\n  )\n\n  return (\n    <AccordionDescendantsProvider value={descendants}>\n      <AccordionProvider value={ctx}>\n        <AccordionStylesProvider value={styles}>\n          <chakra.div\n            ref={ref}\n            {...htmlProps}\n            className={cx(\"chakra-accordion\", props.className)}\n            __css={styles.root}\n          >\n            {children}\n          </chakra.div>\n        </AccordionStylesProvider>\n      </AccordionProvider>\n    </AccordionDescendantsProvider>\n  )\n})\n\nAccordion.displayName = \"Accordion\"\n"]},"metadata":{},"sourceType":"module"}
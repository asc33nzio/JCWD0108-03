{"ast":null,"code":"'use client'; // src/box.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const {\n    size,\n    centerContent = true,\n    ...rest\n  } = props;\n  const styles = centerContent ? {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  } : {};\n  return /* @__PURE__ */jsx(Box, {\n    ref,\n    boxSize: size,\n    __css: { ...styles,\n      flexShrink: 0,\n      flexGrow: 0\n    },\n    ...rest\n  });\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const {\n    size,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(Square, {\n    size,\n    ref,\n    borderRadius: \"9999px\",\n    ...rest\n  });\n});\nCircle.displayName = \"Circle\";\nexport { Box, Square, Circle };","map":{"version":3,"mappings":";;AAAA,SACEA,MADF,EAEEC,UAFF,QAKO,mBALP;AAiDI;AAlCG,IAAMC,MAAMF,OAAO,KAAP,CAAZ;AAEPE,IAAIC,WAAJ,GAAkB,KAAlB;AAqBO,IAAMC,SAASH,WAA+B,SAASG,OAAT,CACnDC,KADmD,EAEnDC,GAFmD,EAGnD;EACA,MAAM;IAAEC,IAAF;IAAQC,gBAAgB,IAAxB;IAA8B,GAAGC;EAAjC,IAA0CJ,KAAhD;EAEA,MAAMK,SAA4BF,gBAC9B;IAAEG,SAAS,MAAX;IAAmBC,YAAY,QAA/B;IAAyCC,gBAAgB;EAAzD,CAD8B,GAE9B,EAFJ;EAIA,OACE,mBAACX,GAAD,EAAC;IACCI,GADD;IAECQ,SAASP,IAFV;IAGCQ,OAAO,EACL,GAAGL,MADE;MAELM,YAAY,CAFP;MAGLC,UAAU;IAHL,CAHR;IAQE,GAAGR;EARL,CAAD,CADF;AAYD,CAtBqB,CAAf;AAwBPL,OAAOD,WAAP,GAAqB,QAArB;AAEO,IAAMe,SAASjB,WAA+B,SAASiB,OAAT,CACnDb,KADmD,EAEnDC,GAFmD,EAGnD;EACA,MAAM;IAAEC,IAAF;IAAQ,GAAGE;EAAX,IAAoBJ,KAA1B;EACA,OAAO,mBAACD,MAAD,EAAC;IAAOG,IAAP;IAAmBD,GAAnB;IAA6Ba,cAAa,QAA1C;IAAoD,GAAGV;EAAvD,CAAD,CAAP;AACD,CANqB,CAAf;AAQPS,OAAOf,WAAP,GAAqB,QAArB","names":["chakra","forwardRef","Box","displayName","Square","props","ref","size","centerContent","rest","styles","display","alignItems","justifyContent","boxSize","__css","flexShrink","flexGrow","Circle","borderRadius"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\layout\\src\\box.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client';\n\nimport { TRANSITION_EASINGS, withDelay } from \"./chunk-6NHXDBFO.mjs\"; // src/collapse.tsx\n\nimport { cx, warn } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef, useEffect, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\n\nvar isNumeric = value => value != null && parseInt(value.toString(), 10) > 0;\n\nvar defaultTransitions = {\n  exit: {\n    height: {\n      duration: 0.2,\n      ease: TRANSITION_EASINGS.ease\n    },\n    opacity: {\n      duration: 0.3,\n      ease: TRANSITION_EASINGS.ease\n    }\n  },\n  enter: {\n    height: {\n      duration: 0.3,\n      ease: TRANSITION_EASINGS.ease\n    },\n    opacity: {\n      duration: 0.4,\n      ease: TRANSITION_EASINGS.ease\n    }\n  }\n};\nvar variants = {\n  exit: _ref => {\n    let {\n      animateOpacity,\n      startingHeight,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n\n    var _a;\n\n    return { ...(animateOpacity && {\n        opacity: isNumeric(startingHeight) ? 1 : 0\n      }),\n      height: startingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransitions.exit, delay)\n    };\n  },\n  enter: _ref2 => {\n    let {\n      animateOpacity,\n      endingHeight,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref2;\n\n    var _a;\n\n    return { ...(animateOpacity && {\n        opacity: 1\n      }),\n      height: endingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransitions.enter, delay)\n    };\n  }\n};\nvar Collapse = forwardRef((props, ref) => {\n  const {\n    in: isOpen,\n    unmountOnExit,\n    animateOpacity = true,\n    startingHeight = 0,\n    endingHeight = \"auto\",\n    style,\n    className,\n    transition,\n    transitionEnd,\n    ...rest\n  } = props;\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setMounted(true);\n    });\n    return () => clearTimeout(timeout);\n  }, []);\n  warn({\n    condition: Number(startingHeight) > 0 && !!unmountOnExit,\n    message: `startingHeight and unmountOnExit are mutually exclusive. You can't use them together`\n  });\n  const hasStartingHeight = parseFloat(startingHeight.toString()) > 0;\n  const custom = {\n    startingHeight,\n    endingHeight,\n    animateOpacity,\n    transition: !mounted ? {\n      enter: {\n        duration: 0\n      }\n    } : transition,\n    transitionEnd: {\n      enter: transitionEnd == null ? void 0 : transitionEnd.enter,\n      exit: unmountOnExit ? transitionEnd == null ? void 0 : transitionEnd.exit : { ...(transitionEnd == null ? void 0 : transitionEnd.exit),\n        display: hasStartingHeight ? \"block\" : \"none\"\n      }\n    }\n  };\n  const show = unmountOnExit ? isOpen : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    initial: false,\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ref,\n      ...rest,\n      className: cx(\"chakra-collapse\", className),\n      style: {\n        overflow: \"hidden\",\n        display: \"block\",\n        ...style\n      },\n      custom,\n      variants,\n      initial: unmountOnExit ? \"exit\" : false,\n      animate,\n      exit: \"exit\"\n    })\n  });\n});\nCollapse.displayName = \"Collapse\";\nexport { Collapse };","map":{"version":3,"mappings":"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","names":["cx","warn","AnimatePresence","motion","forwardRef","useEffect","useState","isNumeric","value","parseInt","toString","defaultTransitions","exit","height","duration","ease","TRANSITION_EASINGS","opacity","enter","variants","animateOpacity","startingHeight","transition","transitionEnd","delay","_a","withDelay","endingHeight","Collapse","props","ref","in","isOpen","unmountOnExit","style","className","rest","mounted","setMounted","timeout","setTimeout","clearTimeout","condition","Number","message","hasStartingHeight","parseFloat","custom","display","show","animate","initial","children","div","overflow","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\transition\\src\\collapse.tsx"],"sourcesContent":["import { cx, warn } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef, useEffect, useState } from \"react\"\nimport {\n  TRANSITION_EASINGS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nconst isNumeric = (value?: string | number) =>\n  value != null && parseInt(value.toString(), 10) > 0\n\nexport interface CollapseOptions {\n  /**\n   * If `true`, the opacity of the content will be animated\n   * @default true\n   */\n  animateOpacity?: boolean\n  /**\n   * The height you want the content in its collapsed state.\n   * @default 0\n   */\n  startingHeight?: number | string\n  /**\n   * The height you want the content in its expanded state.\n   * @default \"auto\"\n   */\n  endingHeight?: number | string\n}\n\nconst defaultTransitions = {\n  exit: {\n    height: { duration: 0.2, ease: TRANSITION_EASINGS.ease },\n    opacity: { duration: 0.3, ease: TRANSITION_EASINGS.ease },\n  },\n  enter: {\n    height: { duration: 0.3, ease: TRANSITION_EASINGS.ease },\n    opacity: { duration: 0.4, ease: TRANSITION_EASINGS.ease },\n  },\n}\n\nconst variants: Variants<CollapseOptions> = {\n  exit: ({\n    animateOpacity,\n    startingHeight,\n    transition,\n    transitionEnd,\n    delay,\n  }) => ({\n    ...(animateOpacity && { opacity: isNumeric(startingHeight) ? 1 : 0 }),\n    height: startingHeight,\n    transitionEnd: transitionEnd?.exit,\n    transition:\n      transition?.exit ?? withDelay.exit(defaultTransitions.exit, delay),\n  }),\n  enter: ({\n    animateOpacity,\n    endingHeight,\n    transition,\n    transitionEnd,\n    delay,\n  }) => ({\n    ...(animateOpacity && { opacity: 1 }),\n    height: endingHeight,\n    transitionEnd: transitionEnd?.enter,\n    transition:\n      transition?.enter ?? withDelay.enter(defaultTransitions.enter, delay),\n  }),\n}\n\nexport type ICollapse = CollapseProps\n\nexport interface CollapseProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    CollapseOptions {}\n\nexport const Collapse = forwardRef<HTMLDivElement, CollapseProps>(\n  (props, ref) => {\n    const {\n      in: isOpen,\n      unmountOnExit,\n      animateOpacity = true,\n      startingHeight = 0,\n      endingHeight = \"auto\",\n      style,\n      className,\n      transition,\n      transitionEnd,\n      ...rest\n    } = props\n\n    const [mounted, setMounted] = useState(false)\n    useEffect(() => {\n      const timeout = setTimeout(() => {\n        setMounted(true)\n      })\n      return () => clearTimeout(timeout)\n    }, [])\n\n    /**\n     * Warn ðŸš¨: `startingHeight` and `unmountOnExit` are mutually exclusive\n     *\n     * If you specify a starting height, the collapsed needs to be mounted\n     * for the height to take effect.\n     */\n    warn({\n      condition: Number(startingHeight) > 0 && !!unmountOnExit,\n      message: `startingHeight and unmountOnExit are mutually exclusive. You can't use them together`,\n    })\n\n    const hasStartingHeight = parseFloat(startingHeight.toString()) > 0\n\n    const custom = {\n      startingHeight,\n      endingHeight,\n      animateOpacity,\n      transition: !mounted ? { enter: { duration: 0 } } : transition,\n      transitionEnd: {\n        enter: transitionEnd?.enter,\n        exit: unmountOnExit\n          ? transitionEnd?.exit\n          : {\n              ...transitionEnd?.exit,\n              display: hasStartingHeight ? \"block\" : \"none\",\n            },\n      },\n    }\n\n    const show = unmountOnExit ? isOpen : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    return (\n      <AnimatePresence initial={false} custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            {...rest}\n            className={cx(\"chakra-collapse\", className)}\n            style={{\n              overflow: \"hidden\",\n              display: \"block\",\n              ...style,\n            }}\n            custom={custom}\n            variants={variants as _Variants}\n            initial={unmountOnExit ? \"exit\" : false}\n            animate={animate}\n            exit=\"exit\"\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nCollapse.displayName = \"Collapse\"\n"]},"metadata":{},"sourceType":"module"}
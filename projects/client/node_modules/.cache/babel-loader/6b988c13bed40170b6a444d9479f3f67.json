{"ast":null,"code":"'use client'; // src/grid-item.tsx\n\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\n\nfunction spanFn(span) {\n  return mapResponsive(span, value => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`);\n}\n\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nGridItem.displayName = \"GridItem\";\nexport { GridItem };","map":{"version":3,"mappings":";;AAAA,SAGEA,UAHF,EAIEC,MAJF,QAKO,mBALP;AAMA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAqES;;AA/BT,SAASC,MAAT,CAAgBC,IAAhB,EAAyD;EACvD,OAAOF,cAAcE,IAAd,EAAqBC,KAAD,IACzBA,UAAU,MAAV,GAAmB,MAAnB,GAA4B,QAAQA,cAAcA,OAD7C,CAAP;AAGF;;AAEO,IAAMC,WAAWP,WAAiC,SAASO,SAAT,CACvDC,KADuD,EAEvDC,GAFuD,EAGvD;EACA,MAAM;IACJC,IADI;IAEJC,OAFI;IAGJC,QAHI;IAIJC,MAJI;IAKJC,MALI;IAMJC,OANI;IAOJC,QAPI;IAQJ,GAAGC;EARC,IASFT,KATJ;EAWA,MAAMU,SAAShB,QAAQ;IACrBiB,UAAUT,IADW;IAErBU,YAAYhB,OAAOO,OAAP,CAFS;IAGrBU,SAASjB,OAAOW,OAAP,CAHY;IAIrBO,iBAAiBV,QAJI;IAKrBW,eAAeV,MALM;IAMrBW,cAAcR,QANO;IAOrBS,YAAYX;EAPS,CAAR,CAAf;EAUA,OAAO,mBAACb,OAAOyB,GAAR,EAAC;IAAWjB,GAAX;IAAqBkB,OAAOT,MAA5B;IAAqC,GAAGD;EAAxC,CAAD,CAAP;AACD,CA1BuB,CAAjB;AA4BPV,SAASqB,WAAT,GAAuB,UAAvB","names":["forwardRef","chakra","compact","mapResponsive","spanFn","span","value","GridItem","props","ref","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","rest","styles","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","div","__css","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\layout\\src\\grid-item.tsx"],"sourcesContent":["import {\n  ResponsiveValue,\n  SystemProps,\n  forwardRef,\n  chakra,\n} from \"@chakra-ui/system\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nimport { BoxProps } from \"./box\"\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * Shorthand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">(function GridItem(\n  props,\n  ref,\n) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGridItem.displayName = \"GridItem\"\n"]},"metadata":{},"sourceType":"module"}
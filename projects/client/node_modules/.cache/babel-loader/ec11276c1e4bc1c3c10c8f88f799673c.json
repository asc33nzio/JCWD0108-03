{"ast":null,"code":"'use client'; // src/spinner.tsx\n\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar Spinner = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Spinner\", props);\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = omitThemingProps(props);\n\n  const _className = cx(\"chakra-spinner\", className);\n\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: spinnerStyles,\n    className: _className,\n    ...rest,\n    children: label && /* @__PURE__ */jsx(chakra.span, {\n      srOnly: true,\n      children: label\n    })\n  });\n});\nSpinner.displayName = \"Spinner\";\nexport { Spinner };","map":{"version":3,"mappings":";;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,gBAJF,EAMEC,cANF,QAQO,mBARP;AASA,SAASC,EAAT,QAAmB,yBAAnB;AA2FgB;AAzFhB,IAAMC,OAAOJ,UAAU;EACrB,MAAM;IACJK,WAAW;EADP,CADe;EAIrB,QAAQ;IACNA,WAAW;EADL;AAJa,CAAV,CAAb;AAwDO,IAAMC,UAAUP,WAAgC,CAACQ,KAAD,EAAQC,GAAR,KAAgB;EACrE,MAAMC,SAASP,eAAe,SAAf,EAA0BK,KAA1B,CAAf;EAEA,MAAM;IACJG,QAAQ,YADJ;IAEJC,YAAY,KAFR;IAGJC,QAAQ,OAHJ;IAIJC,aAAa,aAJT;IAKJC,SALI;IAMJ,GAAGC;EANC,IAOFd,iBAAiBM,KAAjB,CAPJ;;EASA,MAAMS,aAAab,GAAG,gBAAH,EAAqBW,SAArB,CAAnB;;EAEA,MAAMG,gBAAgB;IACpBC,SAAS,cADW;IAEpBC,aAAa,cAFO;IAGpBC,aAAa,OAHO;IAIpBC,cAAc,SAJM;IAKpBC,aAAaX,SALO;IAMpBY,mBAAmBV,UANC;IAOpBW,iBAAiBX,UAPG;IAQpBY,WAAW,GAAGrB,QAAQQ,uBARF;IASpB,GAAGH;EATiB,CAAtB;EAYA,OACE,mBAACX,OAAO4B,GAAR,EAAC;IACClB,GADD;IAECmB,OAAOV,aAFR;IAGCH,WAAWE,UAHZ;IAIE,GAAGD,IAJL;IAMEa,mBAAS,mBAAC9B,OAAO+B,IAAR,EAAC;MAAYC,QAAM,IAAlB;MAAoBF;IAApB,CAAD;EANX,CAAD,CADF;AAUD,CApCsB,CAAhB;AAsCPtB,QAAQyB,WAAR,GAAsB,SAAtB","names":["chakra","forwardRef","keyframes","omitThemingProps","useStyleConfig","cx","spin","transform","Spinner","props","ref","styles","label","thickness","speed","emptyColor","className","rest","_className","spinnerStyles","display","borderColor","borderStyle","borderRadius","borderWidth","borderBottomColor","borderLeftColor","animation","div","__css","children","span","srOnly","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\spinner\\src\\spinner.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\ninterface SpinnerOptions {\n  /**\n   * The color of the empty area in the spinner\n   * @default \"transparent\"\n   */\n  emptyColor?: string\n  /**\n   * The color of the spinner\n   */\n  color?: string\n  /**\n   * The thickness of the spinner\n   * @default \"2px\"\n   * @example\n   * ```jsx\n   * <Spinner thickness=\"4px\"/>\n   * ```\n   */\n  thickness?: string\n  /**\n   * The speed of the spinner.\n   * @default \"0.45s\"\n   * @example\n   * ```jsx\n   * <Spinner speed=\"0.2s\"/>\n   * ```\n   */\n  speed?: string\n  /**\n   * For accessibility, it is important to add a fallback loading text.\n   * This text will be visible to screen readers.\n   * @default \"Loading...\"\n   */\n  label?: string\n}\n\nexport interface SpinnerProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof SpinnerOptions>,\n    SpinnerOptions,\n    ThemingProps<\"Spinner\"> {}\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nexport const Spinner = forwardRef<SpinnerProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Spinner\", props)\n\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = omitThemingProps(props)\n\n  const _className = cx(\"chakra-spinner\", className)\n\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={spinnerStyles}\n      className={_className}\n      {...rest}\n    >\n      {label && <chakra.span srOnly>{label}</chakra.span>}\n    </chakra.div>\n  )\n})\n\nSpinner.displayName = \"Spinner\"\n"]},"metadata":{},"sourceType":"module"}
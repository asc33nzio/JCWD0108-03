{"ast":null,"code":"'use client';\n\nimport { useTabsStyles } from \"./chunk-GHRRTHYC.mjs\";\nimport { useTabPanels } from \"./chunk-O5AIOR56.mjs\"; // src/tab-panels.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TabPanels = forwardRef(function TabPanels2(props, ref) {\n  const panelsProps = useTabPanels(props);\n  const styles = useTabsStyles();\n  return /* @__PURE__ */jsx(chakra.div, { ...panelsProps,\n    width: \"100%\",\n    ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  });\n});\nTabPanels.displayName = \"TabPanels\";\nexport { TabPanels };","map":{"version":3,"mappings":";;;;;AAAA,SAASA,EAAT,QAAmB,yBAAnB;AACA,SAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,mBAApD;AAuBI;AARG,IAAMC,YAAYD,WAAkC,SAASC,UAAT,CACzDC,KADyD,EAEzDC,GAFyD,EAGzD;EACA,MAAMC,cAAcC,aAAaH,KAAb,CAApB;EACA,MAAMI,SAASC,eAAf;EAEA,OACE,mBAACR,OAAOS,GAAR,EAAC,EACE,GAAGJ,WADL;IAECK,OAAM,MAFP;IAGCN,GAHD;IAICO,WAAWZ,GAAG,yBAAH,EAA8BI,MAAMQ,SAApC,CAJZ;IAKCC,OAAOL,OAAOM;EALf,CAAD,CADF;AASD,CAhBwB,CAAlB;AAkBPX,UAAUY,WAAV,GAAwB,WAAxB","names":["cx","chakra","forwardRef","TabPanels","props","ref","panelsProps","useTabPanels","styles","useTabsStyles","div","width","className","__css","tabpanels","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\tabs\\src\\tab-panels.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { useTabPanels } from \"./use-tabs\"\n\nexport interface TabPanelsProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nexport const TabPanels = forwardRef<TabPanelsProps, \"div\">(function TabPanels(\n  props,\n  ref,\n) {\n  const panelsProps = useTabPanels(props)\n  const styles = useTabsStyles()\n\n  return (\n    <chakra.div\n      {...panelsProps}\n      width=\"100%\"\n      ref={ref}\n      className={cx(\"chakra-tabs__tab-panels\", props.className)}\n      __css={styles.tabpanels}\n    />\n  )\n})\n\nTabPanels.displayName = \"TabPanels\"\n"]},"metadata":{},"sourceType":"module"}
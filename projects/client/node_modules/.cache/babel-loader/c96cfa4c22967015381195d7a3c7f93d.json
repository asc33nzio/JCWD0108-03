{"ast":null,"code":"'use client';\n\nimport { TRANSITION_DEFAULTS, withDelay } from \"./chunk-6NHXDBFO.mjs\"; // src/scale-fade.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar variants = {\n  exit: _ref => {\n    let {\n      reverse,\n      initialScale,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n\n    var _a;\n\n    return {\n      opacity: 0,\n      ...(reverse ? {\n        scale: initialScale,\n        transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n      } : {\n        transitionEnd: {\n          scale: initialScale,\n          ...(transitionEnd == null ? void 0 : transitionEnd.exit)\n        }\n      }),\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay)\n    };\n  },\n  enter: _ref2 => {\n    let {\n      transitionEnd,\n      transition,\n      delay\n    } = _ref2;\n\n    var _a;\n\n    return {\n      opacity: 1,\n      scale: 1,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nvar scaleFadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nvar ScaleFade = forwardRef(function ScaleFade2(props, ref) {\n  const {\n    unmountOnExit,\n    in: isOpen,\n    reverse = true,\n    initialScale = 0.95,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    ...rest\n  } = props;\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    initialScale,\n    reverse,\n    transition,\n    transitionEnd,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ref,\n      className: cx(\"chakra-offset-slide\", className),\n      ...scaleFadeConfig,\n      animate,\n      custom,\n      ...rest\n    })\n  });\n});\nScaleFade.displayName = \"ScaleFade\";\nexport { scaleFadeConfig, ScaleFade };","map":{"version":3,"mappings":";;;;AAAA,SAASA,EAAT,QAAmB,yBAAnB;AACA,SACEC,eADF,EAGEC,MAHF,QAKO,eALP;AAMA,SAASC,UAAT,QAA2B,OAA3B;AAwEU;AAnDV,IAAMC,WAAuC;EAC3CC,MAAM,QAA8D;IAAA,IAA7D;MAAEC,OAAF;MAAWC,YAAX;MAAyBC,UAAzB;MAAqCC,aAArC;MAAoDC;IAApD,CAA6D;;IA7BtE;;IA6B0E;MACtEC,SAAS,CAD6D;MAEtE,IAAIL,UACA;QAAEM,OAAOL,YAAT;QAAuBE,eAAeA,+CAAeJ;MAArD,CADA,GAEA;QAAEI,eAAe;UAAEG,OAAOL,YAAT;UAAuB,IAAGE,+CAAeJ,IAAlB;QAAvB;MAAjB,CAFJ,CAFsE;MAKtEG,aACEK,8CAAYR,IADd,KACE,IADF,GACEQ,EADF,GACsBC,UAAUT,IAAV,CAAeU,oBAAoBV,IAAnC,EAAyCK,KAAzC;IANgD;EAOxE,CAR2C;EAS3CM,OAAO,SAAuC;IAAA,IAAtC;MAAEP,aAAF;MAAiBD,UAAjB;MAA6BE;IAA7B,CAAsC;;IArChD;;IAqCoD;MAChDC,SAAS,CADuC;MAEhDC,OAAO,CAFyC;MAGhDJ,aACEK,8CAAYG,KADd,KACE,IADF,GACEH,EADF,GACuBC,UAAUE,KAAV,CAAgBD,oBAAoBC,KAApC,EAA2CN,KAA3C,CAJyB;MAKhDD,eAAeA,+CAAeO;IALkB;EAMlD;AAf2C,CAA7C;AAkBO,IAAMC,kBAA0C;EACrDC,SAAS,MAD4C;EAErDC,SAAS,OAF4C;EAGrDd,MAAM,MAH+C;EAIrDD;AAJqD,CAAhD;AAWA,IAAMgB,YAAYjB,WACvB,SAASiB,UAAT,CAAmBC,KAAnB,EAA0BC,GAA1B,EAA+B;EAC7B,MAAM;IACJC,aADI;IAEJC,IAAIC,MAFA;IAGJnB,UAAU,IAHN;IAIJC,eAAe,IAJX;IAKJmB,SALI;IAMJlB,UANI;IAOJC,aAPI;IAQJC,KARI;IASJ,GAAGiB;EATC,IAUFN,KAVJ;EAYA,MAAMO,OAAOL,gBAAgBE,UAAUF,aAA1B,GAA0C,IAAvD;EACA,MAAMJ,UAAUM,UAAUF,aAAV,GAA0B,OAA1B,GAAoC,MAApD;EAEA,MAAMM,SAAS;IAAEtB,YAAF;IAAgBD,OAAhB;IAAyBE,UAAzB;IAAqCC,aAArC;IAAoDC;EAApD,CAAf;EAEA,OACE,mBAACT,eAAD,EAAC;IAAgB4B,MAAhB;IACEC,kBACC,mBAAC5B,OAAO6B,GAAR,EAAC;MACCT,GADD;MAECI,WAAW1B,GAAG,qBAAH,EAA0B0B,SAA1B,CAFZ;MAGE,GAAGT,eAHL;MAICE,OAJD;MAKCU,MALD;MAME,GAAGF;IANL,CAAD;EAFH,CAAD,CADF;AAcF,CAjCuB,CAAlB;AAoCPP,UAAUY,WAAV,GAAwB,WAAxB","names":["cx","AnimatePresence","motion","forwardRef","variants","exit","reverse","initialScale","transition","transitionEnd","delay","opacity","scale","_a","withDelay","TRANSITION_DEFAULTS","enter","scaleFadeConfig","initial","animate","ScaleFade","props","ref","unmountOnExit","in","isOpen","className","rest","show","custom","children","div","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\transition\\src\\scale-fade.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = forwardRef<HTMLDivElement, ScaleFadeProps>(\n  function ScaleFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nScaleFade.displayName = \"ScaleFade\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client'; // src/components/badge.ts\n\nimport { defineCssVars, defineStyle, defineStyleConfig } from \"@chakra-ui/styled-system\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\nvar vars = defineCssVars(\"badge\", [\"bg\", \"color\", \"shadow\"]);\nvar baseStyle = defineStyle({\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n  bg: vars.bg.reference,\n  color: vars.color.reference,\n  boxShadow: vars.shadow.reference\n});\nvar variantSolid = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const dark = transparentize(`${c}.500`, 0.6)(theme);\n  return {\n    [vars.bg.variable]: `colors.${c}.500`,\n    [vars.color.variable]: `colors.white`,\n    _dark: {\n      [vars.bg.variable]: dark,\n      [vars.color.variable]: `colors.whiteAlpha.800`\n    }\n  };\n});\nvar variantSubtle = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme);\n  return {\n    [vars.bg.variable]: `colors.${c}.100`,\n    [vars.color.variable]: `colors.${c}.800`,\n    _dark: {\n      [vars.bg.variable]: darkBg,\n      [vars.color.variable]: `colors.${c}.200`\n    }\n  };\n});\nvar variantOutline = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme);\n  return {\n    [vars.color.variable]: `colors.${c}.500`,\n    _dark: {\n      [vars.color.variable]: darkColor\n    },\n    [vars.shadow.variable]: `inset 0 0 0px 1px ${vars.color.reference}`\n  };\n});\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar badgeTheme = defineStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"gray\"\n  }\n});\nexport { vars, badgeTheme };","map":{"version":3,"mappings":";;AAAA,SACEA,aADF,EAEEC,WAFF,EAGEC,iBAHF,QAIO,0BAJP;AAKA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,IAAMC,OAAOJ,cAAc,OAAd,EAAuB,CAAC,IAAD,EAAO,OAAP,EAAgB,QAAhB,CAAvB,CAAb;AAEA,IAAMK,YAAYJ,YAAY;EAC5BK,IAAI,CADwB;EAE5BC,eAAe,WAFa;EAG5BC,UAAU,IAHkB;EAI5BC,cAAc,IAJc;EAK5BC,YAAY,MALgB;EAM5BC,IAAIP,KAAKO,EAAL,CAAQC,SANgB;EAO5BC,OAAOT,KAAKS,KAAL,CAAWD,SAPU;EAQ5BE,WAAWV,KAAKW,MAAL,CAAYH;AARK,CAAZ,CAAlB;AAWA,IAAMI,eAAef,YAAagB,KAAD,IAAW;EAC1C,MAAM;IAAEC,aAAaC,CAAf;IAAkBC;EAAlB,IAA4BH,KAAlC;EACA,MAAMI,OAAOlB,eAAe,GAAGgB,OAAlB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAb;EACA,OAAO;IACL,CAAChB,KAAKO,EAAL,CAAQW,QAAT,GAAoB,UAAUH,OADzB;IAEL,CAACf,KAAKS,KAAL,CAAWS,QAAZ,GAAuB,cAFlB;IAGLC,OAAO;MACL,CAACnB,KAAKO,EAAL,CAAQW,QAAT,GAAoBD,IADf;MAEL,CAACjB,KAAKS,KAAL,CAAWS,QAAZ,GAAuB;IAFlB;EAHF,CAAP;AAQD,CAXoB,CAArB;AAaA,IAAME,gBAAgBvB,YAAagB,KAAD,IAAW;EAC3C,MAAM;IAAEC,aAAaC,CAAf;IAAkBC;EAAlB,IAA4BH,KAAlC;EACA,MAAMQ,SAAStB,eAAe,GAAGgB,OAAlB,EAA2B,IAA3B,EAAiCC,KAAjC,CAAf;EACA,OAAO;IACL,CAAChB,KAAKO,EAAL,CAAQW,QAAT,GAAoB,UAAUH,OADzB;IAEL,CAACf,KAAKS,KAAL,CAAWS,QAAZ,GAAuB,UAAUH,OAF5B;IAGLI,OAAO;MACL,CAACnB,KAAKO,EAAL,CAAQW,QAAT,GAAoBG,MADf;MAEL,CAACrB,KAAKS,KAAL,CAAWS,QAAZ,GAAuB,UAAUH;IAF5B;EAHF,CAAP;AAQD,CAXqB,CAAtB;AAaA,IAAMO,iBAAiBzB,YAAagB,KAAD,IAAW;EAC5C,MAAM;IAAEC,aAAaC,CAAf;IAAkBC;EAAlB,IAA4BH,KAAlC;EACA,MAAMU,YAAYxB,eAAe,GAAGgB,OAAlB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAlB;EACA,OAAO;IACL,CAAChB,KAAKS,KAAL,CAAWS,QAAZ,GAAuB,UAAUH,OAD5B;IAELI,OAAO;MACL,CAACnB,KAAKS,KAAL,CAAWS,QAAZ,GAAuBK;IADlB,CAFF;IAKL,CAACvB,KAAKW,MAAL,CAAYO,QAAb,GAAwB,qBAAqBlB,KAAKS,KAAL,CAAWD;EALnD,CAAP;AAOD,CAVsB,CAAvB;AAYA,IAAMgB,WAAW;EACfC,OAAOb,YADQ;EAEfc,QAAQN,aAFO;EAGfO,SAASL;AAHM,CAAjB;AAMO,IAAMM,aAAa9B,kBAAkB;EAC1CG,SAD0C;EAE1CuB,QAF0C;EAG1CK,cAAc;IACZC,SAAS,QADG;IAEZhB,aAAa;EAFD;AAH4B,CAAlB,CAAnB","names":["defineCssVars","defineStyle","defineStyleConfig","transparentize","vars","baseStyle","px","textTransform","fontSize","borderRadius","fontWeight","bg","reference","color","boxShadow","shadow","variantSolid","props","colorScheme","c","theme","dark","variable","_dark","variantSubtle","darkBg","variantOutline","darkColor","variants","solid","subtle","outline","badgeTheme","defaultProps","variant"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\theme\\src\\components\\badge.ts"],"sourcesContent":["import {\n  defineCssVars,\n  defineStyle,\n  defineStyleConfig,\n} from \"@chakra-ui/styled-system\"\nimport { transparentize } from \"@chakra-ui/theme-tools\"\n\nconst vars = defineCssVars(\"badge\", [\"bg\", \"color\", \"shadow\"])\n\nconst baseStyle = defineStyle({\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n  bg: vars.bg.reference,\n  color: vars.color.reference,\n  boxShadow: vars.shadow.reference,\n})\n\nconst variantSolid = defineStyle((props) => {\n  const { colorScheme: c, theme } = props\n  const dark = transparentize(`${c}.500`, 0.6)(theme)\n  return {\n    [vars.bg.variable]: `colors.${c}.500`,\n    [vars.color.variable]: `colors.white`,\n    _dark: {\n      [vars.bg.variable]: dark,\n      [vars.color.variable]: `colors.whiteAlpha.800`,\n    },\n  }\n})\n\nconst variantSubtle = defineStyle((props) => {\n  const { colorScheme: c, theme } = props\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return {\n    [vars.bg.variable]: `colors.${c}.100`,\n    [vars.color.variable]: `colors.${c}.800`,\n    _dark: {\n      [vars.bg.variable]: darkBg,\n      [vars.color.variable]: `colors.${c}.200`,\n    },\n  }\n})\n\nconst variantOutline = defineStyle((props) => {\n  const { colorScheme: c, theme } = props\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme)\n  return {\n    [vars.color.variable]: `colors.${c}.500`,\n    _dark: {\n      [vars.color.variable]: darkColor,\n    },\n    [vars.shadow.variable]: `inset 0 0 0px 1px ${vars.color.reference}`,\n  }\n})\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n}\n\nexport const badgeTheme = defineStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"gray\",\n  },\n})\n\nexport { vars as badgeVars }\n"]},"metadata":{},"sourceType":"module"}
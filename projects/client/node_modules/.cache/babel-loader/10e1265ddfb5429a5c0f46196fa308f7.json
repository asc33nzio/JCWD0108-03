{"ast":null,"code":"import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = update => {\n  const passTimestamp = _ref => {\n    let {\n      timestamp\n    } = _ref;\n    return update(timestamp);\n  };\n\n  return {\n    start: () => frame.update(passTimestamp, true),\n    stop: () => cancelFrame(passTimestamp),\n\n    /**\n     * If we're processing this frame we can use the\n     * framelocked timestamp to keep things in sync.\n     */\n    now: () => frameData.isProcessing ? frameData.timestamp : performance.now()\n  };\n};\n\nexport { frameloopDriver };","map":{"version":3,"names":["frame","cancelFrame","frameData","frameloopDriver","update","passTimestamp","timestamp","start","stop","now","isProcessing","performance"],"sources":["C:/Purwadhika/JCWD Bandung/4. REAL PROJECT/JCWD0108-03/node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs"],"sourcesContent":["import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,8BAA9C;;AAEA,MAAMC,eAAe,GAAIC,MAAD,IAAY;EAChC,MAAMC,aAAa,GAAG;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,OAAmBF,MAAM,CAACE,SAAD,CAAzB;EAAA,CAAtB;;EACA,OAAO;IACHC,KAAK,EAAE,MAAMP,KAAK,CAACI,MAAN,CAAaC,aAAb,EAA4B,IAA5B,CADV;IAEHG,IAAI,EAAE,MAAMP,WAAW,CAACI,aAAD,CAFpB;;IAGH;AACR;AACA;AACA;IACQI,GAAG,EAAE,MAAMP,SAAS,CAACQ,YAAV,GAAyBR,SAAS,CAACI,SAAnC,GAA+CK,WAAW,CAACF,GAAZ;EAPvD,CAAP;AASH,CAXD;;AAaA,SAASN,eAAT"},"metadata":{},"sourceType":"module"}
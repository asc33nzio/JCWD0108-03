{"ast":null,"code":"'use client'; // src/color-mode-script.tsx\n\nimport { jsx } from \"react/jsx-runtime\";\nvar VALID_VALUES = /* @__PURE__ */new Set([\"dark\", \"light\", \"system\"]);\n\nfunction normalize(initialColorMode) {\n  let value = initialColorMode;\n  if (!VALID_VALUES.has(value)) value = \"light\";\n  return value;\n}\n\nfunction getScriptSrc() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    initialColorMode = \"light\",\n    type = \"localStorage\",\n    storageKey: key = \"chakra-ui-color-mode\"\n  } = props;\n  const init = normalize(initialColorMode);\n  const isCookie = type === \"cookie\";\n  const cookieScript = `(function(){try{var a=function(o){var l=\"(prefers-color-scheme: dark)\",v=window.matchMedia(l).matches?\"dark\":\"light\",e=o===\"system\"?v:o,d=document.documentElement,m=document.body,i=\"chakra-ui-light\",n=\"chakra-ui-dark\",s=e===\"dark\";return m.classList.add(s?n:i),m.classList.remove(s?i:n),d.style.colorScheme=e,d.dataset.theme=e,e},u=a,h=\"${init}\",r=\"${key}\",t=document.cookie.match(new RegExp(\"(^| )\".concat(r,\"=([^;]+)\"))),c=t?t[2]:null;c?a(c):document.cookie=\"\".concat(r,\"=\").concat(a(h),\"; max-age=31536000; path=/\")}catch(a){}})();\n  `;\n  const localStorageScript = `(function(){try{var a=function(c){var v=\"(prefers-color-scheme: dark)\",h=window.matchMedia(v).matches?\"dark\":\"light\",r=c===\"system\"?h:c,o=document.documentElement,s=document.body,l=\"chakra-ui-light\",d=\"chakra-ui-dark\",i=r===\"dark\";return s.classList.add(i?d:l),s.classList.remove(i?l:d),o.style.colorScheme=r,o.dataset.theme=r,r},n=a,m=\"${init}\",e=\"${key}\",t=localStorage.getItem(e);t?a(t):localStorage.setItem(e,a(m))}catch(a){}})();\n  `;\n  const fn = isCookie ? cookieScript : localStorageScript;\n  return `!${fn}`.trim();\n}\n\nfunction ColorModeScript() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    nonce\n  } = props;\n  return /* @__PURE__ */jsx(\"script\", {\n    id: \"chakra-script\",\n    nonce,\n    dangerouslySetInnerHTML: {\n      __html: getScriptSrc(props)\n    }\n  });\n}\n\nexport { getScriptSrc, ColorModeScript };","map":{"version":3,"mappings":";;AA4CI;AArCJ,IAAMA,eAAe,mBAAIC,GAAJ,CAAQ,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAAR,CAArB;;AAKA,SAASC,SAAT,CAAmBC,gBAAnB,EAAkE;EAChE,IAAIC,QAAQD,gBAAZ;EACA,IAAI,CAACH,aAAaK,GAAb,CAAiBD,KAAjB,CAAL,EAA8BA,QAAQ,OAAR;EAC9B,OAAOA,KAAP;AACF;;AAEO,SAASE,YAAT,GAAwD;EAAA,IAAlCC,KAAkC,uEAAJ,EAAI;EAC7D,MAAM;IACJJ,mBAAmB,OADf;IAEJK,OAAO,cAFH;IAGJC,YAAYC,MAAM;EAHd,IAIFH,KAJJ;EAOA,MAAMI,OAAOT,UAAUC,gBAAV,CAAb;EAEA,MAAMS,WAAWJ,SAAS,QAA1B;EAEA,MAAMK,eAAe,oVAAoVF,YAAYD;AAAA,GAArX;EAGA,MAAMI,qBAAqB,oVAAoVH,YAAYD;AAAA,GAA3X;EAGA,MAAMK,KAAKH,WAAWC,YAAX,GAA0BC,kBAArC;EACA,OAAO,IAAIC,IAAJ,CAASC,IAAT,EAAP;AACF;;AAEO,SAASC,eAAT,GAA2D;EAAA,IAAlCV,KAAkC,uEAAJ,EAAI;EAChE,MAAM;IAAEW;EAAF,IAAYX,KAAlB;EAEA,OACE,mBAAC,QAAD,EAAC;IACCY,IAAG,eADJ;IAECD,KAFD;IAGCE,yBAAyB;MAAEC,QAAQf,aAAaC,KAAb;IAAV;EAH1B,CAAD,CADF;AAOF","names":["VALID_VALUES","Set","normalize","initialColorMode","value","has","getScriptSrc","props","type","storageKey","key","init","isCookie","cookieScript","localStorageScript","fn","trim","ColorModeScript","nonce","id","dangerouslySetInnerHTML","__html"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\color-mode\\src\\color-mode-script.tsx"],"sourcesContent":["export type ColorModeScriptProps = {\n  type?: \"localStorage\" | \"cookie\"\n  initialColorMode?: \"light\" | \"dark\" | \"system\"\n  storageKey?: string\n  nonce?: string\n}\n\nconst VALID_VALUES = new Set([\"dark\", \"light\", \"system\"])\n\n/**\n * runtime safe-guard against invalid color mode values\n */\nfunction normalize(initialColorMode: \"light\" | \"dark\" | \"system\") {\n  let value = initialColorMode\n  if (!VALID_VALUES.has(value)) value = \"light\"\n  return value\n}\n\nexport function getScriptSrc(props: ColorModeScriptProps = {}) {\n  const {\n    initialColorMode = \"light\",\n    type = \"localStorage\",\n    storageKey: key = \"chakra-ui-color-mode\",\n  } = props\n\n  // runtime safe-guard against invalid color mode values\n  const init = normalize(initialColorMode)\n\n  const isCookie = type === \"cookie\"\n\n  const cookieScript = `(function(){try{var a=function(o){var l=\"(prefers-color-scheme: dark)\",v=window.matchMedia(l).matches?\"dark\":\"light\",e=o===\"system\"?v:o,d=document.documentElement,m=document.body,i=\"chakra-ui-light\",n=\"chakra-ui-dark\",s=e===\"dark\";return m.classList.add(s?n:i),m.classList.remove(s?i:n),d.style.colorScheme=e,d.dataset.theme=e,e},u=a,h=\"${init}\",r=\"${key}\",t=document.cookie.match(new RegExp(\"(^| )\".concat(r,\"=([^;]+)\"))),c=t?t[2]:null;c?a(c):document.cookie=\"\".concat(r,\"=\").concat(a(h),\"; max-age=31536000; path=/\")}catch(a){}})();\n  `\n\n  const localStorageScript = `(function(){try{var a=function(c){var v=\"(prefers-color-scheme: dark)\",h=window.matchMedia(v).matches?\"dark\":\"light\",r=c===\"system\"?h:c,o=document.documentElement,s=document.body,l=\"chakra-ui-light\",d=\"chakra-ui-dark\",i=r===\"dark\";return s.classList.add(i?d:l),s.classList.remove(i?l:d),o.style.colorScheme=r,o.dataset.theme=r,r},n=a,m=\"${init}\",e=\"${key}\",t=localStorage.getItem(e);t?a(t):localStorage.setItem(e,a(m))}catch(a){}})();\n  `\n\n  const fn = isCookie ? cookieScript : localStorageScript\n  return `!${fn}`.trim()\n}\n\nexport function ColorModeScript(props: ColorModeScriptProps = {}) {\n  const { nonce } = props\n\n  return (\n    <script\n      id=\"chakra-script\"\n      nonce={nonce}\n      dangerouslySetInnerHTML={{ __html: getScriptSrc(props) }}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client'; // src/modal-transition.tsx\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { scaleFadeConfig, slideFadeConfig } from \"@chakra-ui/transition\";\nimport { motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar transitions = {\n  slideInBottom: { ...slideFadeConfig,\n    custom: {\n      offsetY: 16,\n      reverse: true\n    }\n  },\n  slideInRight: { ...slideFadeConfig,\n    custom: {\n      offsetX: 16,\n      reverse: true\n    }\n  },\n  scale: { ...scaleFadeConfig,\n    custom: {\n      initialScale: 0.95,\n      reverse: true\n    }\n  },\n  none: {}\n};\nvar MotionSection = chakra(motion.section);\n\nvar getMotionProps = preset => {\n  return transitions[preset || \"none\"];\n};\n\nvar ModalTransition = forwardRef((props, ref) => {\n  const {\n    preset,\n    motionProps = getMotionProps(preset),\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(MotionSection, {\n    ref,\n    ...motionProps,\n    ...rest\n  });\n});\nModalTransition.displayName = \"ModalTransition\";\nexport { ModalTransition };","map":{"version":3,"mappings":";;AAAA,SAASA,MAAT,QAAoC,mBAApC;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,uBAAjD;AACA,SAA0BC,MAA1B,QAAwC,eAAxC;AACA,SAASC,UAAT,QAA2B,OAA3B;AAmCM;AA1BN,IAAMC,cAAc;EAClBC,eAAe,EACb,GAAGJ,eADU;IAEbK,QAAQ;MAAEC,SAAS,EAAX;MAAeC,SAAS;IAAxB;EAFK,CADG;EAKlBC,cAAc,EACZ,GAAGR,eADS;IAEZK,QAAQ;MAAEI,SAAS,EAAX;MAAeF,SAAS;IAAxB;EAFI,CALI;EASlBG,OAAO,EACL,GAAGX,eADE;IAELM,QAAQ;MAAEM,cAAc,IAAhB;MAAsBJ,SAAS;IAA/B;EAFH,CATW;EAalBK,MAAM;AAbY,CAApB;AAgBA,IAAMC,gBAAgBf,OAAOG,OAAOa,OAAd,CAAtB;;AAEA,IAAMC,iBAAkBC,MAAD,IAA4C;EACjE,OAAOb,YAAYa,UAAU,MAAtB,CAAP;AACF,CAFA;;AAIO,IAAMC,kBAAkBf,WAC7B,CAACgB,KAAD,EAA8BC,GAA9B,KAAsD;EACpD,MAAM;IAAEH,MAAF;IAAUI,cAAcL,eAAeC,MAAf,CAAxB;IAAgD,GAAGK;EAAnD,IAA4DH,KAAlE;EACA,OACE,mBAACL,aAAD,EAAC;IAAcM,GAAd;IAAyB,GAAIC,WAA7B;IAA2D,GAAGC;EAA9D,CAAD,CADF;AAGF,CAN6B,CAAxB;AASPJ,gBAAgBK,WAAhB,GAA8B,iBAA9B","names":["chakra","scaleFadeConfig","slideFadeConfig","motion","forwardRef","transitions","slideInBottom","custom","offsetY","reverse","slideInRight","offsetX","scale","initialScale","none","MotionSection","section","getMotionProps","preset","ModalTransition","props","ref","motionProps","rest","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\modal\\src\\modal-transition.tsx"],"sourcesContent":["import { chakra, ChakraProps } from \"@chakra-ui/system\"\nimport { scaleFadeConfig, slideFadeConfig } from \"@chakra-ui/transition\"\nimport { HTMLMotionProps, motion } from \"framer-motion\"\nimport { forwardRef } from \"react\"\n\nexport interface ModalTransitionProps\n  extends Omit<HTMLMotionProps<\"section\">, \"color\" | \"transition\">,\n    ChakraProps {\n  preset?: \"slideInBottom\" | \"slideInRight\" | \"scale\" | \"none\"\n  motionProps?: HTMLMotionProps<\"section\">\n}\n\nconst transitions = {\n  slideInBottom: {\n    ...slideFadeConfig,\n    custom: { offsetY: 16, reverse: true },\n  },\n  slideInRight: {\n    ...slideFadeConfig,\n    custom: { offsetX: 16, reverse: true },\n  },\n  scale: {\n    ...scaleFadeConfig,\n    custom: { initialScale: 0.95, reverse: true },\n  },\n  none: {},\n}\n\nconst MotionSection = chakra(motion.section)\n\nconst getMotionProps = (preset: ModalTransitionProps[\"preset\"]) => {\n  return transitions[preset || \"none\"]\n}\n\nexport const ModalTransition = forwardRef(\n  (props: ModalTransitionProps, ref: React.Ref<any>) => {\n    const { preset, motionProps = getMotionProps(preset), ...rest } = props\n    return (\n      <MotionSection ref={ref} {...(motionProps as ChakraProps)} {...rest} />\n    )\n  },\n)\n\nModalTransition.displayName = \"ModalTransition\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client'; // src/flex.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nFlex.displayName = \"Flex\";\nexport { Flex };","map":{"version":3,"mappings":";;AAAA,SACEA,MADF,EAEEC,UAFF,QAKO,mBALP;AA6ES;AAfF,IAAMC,OAAOD,WAA6B,SAASC,KAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;EACzE,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC,OAApB;IAA6BC,IAA7B;IAAmCC,KAAnC;IAA0CC,IAA1C;IAAgDC,MAAhD;IAAwD,GAAGC;EAA3D,IACJT,KADF;EAGA,MAAMU,SAAS;IACbC,SAAS,MADI;IAEbC,eAAeV,SAFF;IAGbW,YAAYV,KAHC;IAIbW,gBAAgBV,OAJH;IAKbW,UAAUV,IALG;IAMbW,WAAWV,KANE;IAObW,UAAUV,IAPG;IAQbW,YAAYV;EARC,CAAf;EAWA,OAAO,mBAACX,OAAOsB,GAAR,EAAC;IAAWlB,GAAX;IAAqBmB,OAAOV,MAA5B;IAAqC,GAAGD;EAAxC,CAAD,CAAP;AACD,CAhBmB,CAAb;AAkBPV,KAAKsB,WAAL,GAAmB,MAAnB","names":["chakra","forwardRef","Flex","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","div","__css","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\layout\\src\\flex.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n"]},"metadata":{},"sourceType":"module"}
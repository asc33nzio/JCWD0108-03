{"ast":null,"code":"'use client'; // src/center.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(function AbsoluteCenter2(props, ref) {\n  const {\n    axis = \"both\",\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: centerStyles[axis],\n    ...rest,\n    position: \"absolute\"\n  });\n});\nexport { Center, AbsoluteCenter };","map":{"version":3,"mappings":";;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAoD,mBAApD;AAqDM;AA3CC,IAAMC,SAASF,OAAO,KAAP,EAAc;EAClCG,WAAW;IACTC,SAAS,MADA;IAETC,YAAY,QAFH;IAGTC,gBAAgB;EAHP;AADuB,CAAd,CAAf;AAQPJ,OAAOK,WAAP,GAAqB,QAArB;AAMA,IAAMC,eAAe;EACnBC,YAAY;IACVC,YAAY,KADF;IAEVC,WAAW;EAFD,CADO;EAKnBC,UAAU;IACRC,KAAK,KADG;IAERF,WAAW;EAFH,CALS;EASnBG,MAAM;IACJJ,YAAY,KADR;IAEJG,KAAK,KAFD;IAGJF,WAAW;EAHP;AATa,CAArB;AAyBO,IAAMI,iBAAiBd,WAC5B,SAASc,eAAT,CAAwBC,KAAxB,EAA+BC,GAA/B,EAAoC;EAClC,MAAM;IAAEC,OAAO,MAAT;IAAiB,GAAGC;EAApB,IAA6BH,KAAnC;EACA,OACE,mBAAChB,OAAOoB,GAAR,EAAC;IACCH,GADD;IAECI,OAAOb,aAAaU,IAAb,CAFR;IAGE,GAAGC,IAHL;IAICG,UAAS;EAJV,CAAD,CADF;AAQF,CAX4B,CAAvB","names":["chakra","forwardRef","Center","baseStyle","display","alignItems","justifyContent","displayName","centerStyles","horizontal","insetStart","transform","vertical","top","both","AbsoluteCenter","props","ref","axis","rest","div","__css","position"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\layout\\src\\center.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}
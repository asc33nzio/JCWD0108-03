{"ast":null,"code":"import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation(_ref) {\n  let {\n    keyframes,\n    delay,\n    onUpdate,\n    onComplete\n  } = _ref;\n\n  const setValue = () => {\n    onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n    onComplete && onComplete();\n    /**\n     * TODO: As this API grows it could make sense to always return\n     * animateValue. This will be a bigger project as animateValue\n     * is frame-locked whereas this function resolves instantly.\n     * This is a behavioural change and also has ramifications regarding\n     * assumptions within tests.\n     */\n\n    return {\n      time: 0,\n      speed: 1,\n      duration: 0,\n      play: noop,\n      pause: noop,\n      stop: noop,\n      then: resolve => {\n        resolve();\n        return Promise.resolve();\n      },\n      cancel: noop,\n      complete: noop\n    };\n  };\n\n  return delay ? animateValue({\n    keyframes: [0, 1],\n    duration: 0,\n    delay,\n    onComplete: setValue\n  }) : setValue();\n}\n\nexport { createInstantAnimation };","map":{"version":3,"names":["animateValue","noop","createInstantAnimation","keyframes","delay","onUpdate","onComplete","setValue","length","time","speed","duration","play","pause","stop","then","resolve","Promise","cancel","complete"],"sources":["C:/Purwadhika/JCWD Bandung/4. REAL PROJECT/JCWD0108-03/node_modules/framer-motion/dist/es/animation/animators/instant.mjs"],"sourcesContent":["import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,sBAArB;;AAEA,SAASC,sBAAT,OAA6E;EAAA,IAA7C;IAAEC,SAAF;IAAaC,KAAb;IAAoBC,QAApB;IAA8BC;EAA9B,CAA6C;;EACzE,MAAMC,QAAQ,GAAG,MAAM;IACnBF,QAAQ,IAAIA,QAAQ,CAACF,SAAS,CAACA,SAAS,CAACK,MAAV,GAAmB,CAApB,CAAV,CAApB;IACAF,UAAU,IAAIA,UAAU,EAAxB;IACA;AACR;AACA;AACA;AACA;AACA;AACA;;IACQ,OAAO;MACHG,IAAI,EAAE,CADH;MAEHC,KAAK,EAAE,CAFJ;MAGHC,QAAQ,EAAE,CAHP;MAIHC,IAAI,EAAGX,IAJJ;MAKHY,KAAK,EAAGZ,IALL;MAMHa,IAAI,EAAGb,IANJ;MAOHc,IAAI,EAAGC,OAAD,IAAa;QACfA,OAAO;QACP,OAAOC,OAAO,CAACD,OAAR,EAAP;MACH,CAVE;MAWHE,MAAM,EAAGjB,IAXN;MAYHkB,QAAQ,EAAGlB;IAZR,CAAP;EAcH,CAxBD;;EAyBA,OAAOG,KAAK,GACNJ,YAAY,CAAC;IACXG,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,CADA;IAEXQ,QAAQ,EAAE,CAFC;IAGXP,KAHW;IAIXE,UAAU,EAAEC;EAJD,CAAD,CADN,GAONA,QAAQ,EAPd;AAQH;;AAED,SAASL,sBAAT"},"metadata":{},"sourceType":"module"}
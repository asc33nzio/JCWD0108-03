{"ast":null,"code":"import { useMotionValueEvent } from '../utils/use-motion-value-event.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\n\nfunction useVelocity(value) {\n  const velocity = useMotionValue(value.getVelocity());\n  useMotionValueEvent(value, \"velocityChange\", newVelocity => {\n    velocity.set(newVelocity);\n  });\n  return velocity;\n}\n\nexport { useVelocity };","map":{"version":3,"names":["useMotionValueEvent","useMotionValue","useVelocity","value","velocity","getVelocity","newVelocity","set"],"sources":["C:/Purwadhika/JCWD Bandung/4. REAL PROJECT/JCWD0108-03/node_modules/framer-motion/dist/es/value/use-velocity.mjs"],"sourcesContent":["import { useMotionValueEvent } from '../utils/use-motion-value-event.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    const velocity = useMotionValue(value.getVelocity());\n    useMotionValueEvent(value, \"velocityChange\", (newVelocity) => {\n        velocity.set(newVelocity);\n    });\n    return velocity;\n}\n\nexport { useVelocity };\n"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,qCAApC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EACxB,MAAMC,QAAQ,GAAGH,cAAc,CAACE,KAAK,CAACE,WAAN,EAAD,CAA/B;EACAL,mBAAmB,CAACG,KAAD,EAAQ,gBAAR,EAA2BG,WAAD,IAAiB;IAC1DF,QAAQ,CAACG,GAAT,CAAaD,WAAb;EACH,CAFkB,CAAnB;EAGA,OAAOF,QAAP;AACH;;AAED,SAASF,WAAT"},"metadata":{},"sourceType":"module"}
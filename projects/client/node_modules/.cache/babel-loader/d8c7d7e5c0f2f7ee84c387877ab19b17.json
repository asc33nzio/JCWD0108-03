{"ast":null,"code":"'use client'; // src/link-box.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar LinkOverlay = forwardRef(function LinkOverlay2(props, ref) {\n  const {\n    isExternal,\n    target,\n    rel,\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.a, { ...rest,\n    ref,\n    className: cx(\"chakra-linkbox__overlay\", className),\n    rel: isExternal ? \"noopener noreferrer\" : rel,\n    target: isExternal ? \"_blank\" : target,\n    __css: {\n      position: \"static\",\n      \"&::before\": {\n        content: \"''\",\n        cursor: \"inherit\",\n        display: \"block\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 0,\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }\n  });\n});\nvar LinkBox = forwardRef(function LinkBox2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    position: \"relative\",\n    ...rest,\n    className: cx(\"chakra-linkbox\", className),\n    __css: {\n      /* Elevate the links and abbreviations up */\n      \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n        position: \"relative\",\n        zIndex: 1\n      }\n    }\n  });\n});\nexport { LinkOverlay, LinkBox };","map":{"version":3,"mappings":";;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAoD,mBAApD;AACA,SAASC,EAAT,QAAmB,yBAAnB;AAeM;AAJC,IAAMC,cAAcF,WACzB,SAASE,YAAT,CAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;EAC/B,MAAM;IAAEC,UAAF;IAAcC,MAAd;IAAsBC,GAAtB;IAA2BC,SAA3B;IAAsC,GAAGC;EAAzC,IAAkDN,KAAxD;EACA,OACE,mBAACJ,OAAOW,CAAR,EAAC,EACE,GAAGD,IADL;IAECL,GAFD;IAGCI,WAAWP,GAAG,yBAAH,EAA8BO,SAA9B,CAHZ;IAICD,KAAKF,aAAa,qBAAb,GAAqCE,GAJ3C;IAKCD,QAAQD,aAAa,QAAb,GAAwBC,MALjC;IAMCK,OAAO;MACLC,UAAU,QADL;MAEL,aAAa;QACXC,SAAS,IADE;QAEXC,QAAQ,SAFG;QAGXC,SAAS,OAHE;QAIXH,UAAU,UAJC;QAKXI,KAAK,CALM;QAMXC,MAAM,CANK;QAOXC,QAAQ,CAPG;QAQXC,OAAO,MARI;QASXC,QAAQ;MATG;IAFR;EANR,CAAD,CADF;AAuBF,CA1ByB,CAApB;AAqCA,IAAMC,UAAUrB,WAAgC,SAASqB,QAAT,CACrDlB,KADqD,EAErDC,GAFqD,EAGrD;EACA,MAAM;IAAEI,SAAF;IAAa,GAAGC;EAAhB,IAAyBN,KAA/B;EAEA,OACE,mBAACJ,OAAOuB,GAAR,EAAC;IACClB,GADD;IAECQ,UAAS,UAFV;IAGE,GAAGH,IAHL;IAICD,WAAWP,GAAG,gBAAH,EAAqBO,SAArB,CAJZ;IAKCG,OAAO;MAAA;MAEL,sDAAsD;QACpDC,UAAU,UAD0C;QAEpDM,QAAQ;MAF4C;IAFjD;EALR,CAAD,CADF;AAeD,CArBsB,CAAhB","names":["chakra","forwardRef","cx","LinkOverlay","props","ref","isExternal","target","rel","className","rest","a","__css","position","content","cursor","display","top","left","zIndex","width","height","LinkBox","div"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\layout\\src\\link-box.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkOverlayProps extends HTMLChakraProps<\"a\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\nexport const LinkOverlay = forwardRef<LinkOverlayProps, \"a\">(\n  function LinkOverlay(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props\n    return (\n      <chakra.a\n        {...rest}\n        ref={ref}\n        className={cx(\"chakra-linkbox__overlay\", className)}\n        rel={isExternal ? \"noopener noreferrer\" : rel}\n        target={isExternal ? \"_blank\" : target}\n        __css={{\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\",\n          },\n        }}\n      />\n    )\n  },\n)\n\nexport interface LinkBoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * `LinkBox` is used to wrap content areas within a link while ensuring semantic html\n *\n * @see Docs https://chakra-ui.com/docs/navigation/link-overlay\n * @see Resources https://www.sarasoueidan.com/blog/nested-links\n */\nexport const LinkBox = forwardRef<LinkBoxProps, \"div\">(function LinkBox(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      {...rest}\n      className={cx(\"chakra-linkbox\", className)}\n      __css={{\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1,\n        },\n      }}\n    />\n  )\n})\n"]},"metadata":{},"sourceType":"module"}
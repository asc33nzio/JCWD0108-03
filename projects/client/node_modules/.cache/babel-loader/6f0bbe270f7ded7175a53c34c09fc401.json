{"ast":null,"code":"'use client'; // src/aspect-ratio.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AspectRatio = forwardRef(function (props, ref) {\n  const {\n    ratio = 4 / 3,\n    children,\n    className,\n    ...rest\n  } = props;\n  const child = Children.only(children);\n\n  const _className = cx(\"chakra-aspect-ratio\", className);\n\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    position: \"relative\",\n    className: _className,\n    _before: {\n      height: 0,\n      content: `\"\"`,\n      display: \"block\",\n      paddingBottom: mapResponsive(ratio, r => `${1 / r * 100}%`)\n    },\n    __css: {\n      \"& > *:not(style)\": {\n        overflow: \"hidden\",\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      \"& > img, & > video\": {\n        objectFit: \"cover\"\n      }\n    },\n    ...rest,\n    children: child\n  });\n});\nAspectRatio.displayName = \"AspectRatio\";\nexport { AspectRatio };","map":{"version":3,"mappings":";;AAAA,SACEA,MADF,EAEEC,UAFF,QAKO,mBALP;AAMA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,EAAT,QAAmB,yBAAnB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAiCI;AAZG,IAAMC,cAAcJ,WAAoC,UAC7DK,KAD6D,EAE7DC,GAF6D,EAG7D;EACA,MAAM;IAAEC,QAAQ,IAAI,CAAd;IAAiBC,QAAjB;IAA2BC,SAA3B;IAAsC,GAAGC;EAAzC,IAAkDL,KAAxD;EAGA,MAAMM,QAAQR,SAASS,IAAT,CAAcJ,QAAd,CAAd;;EAEA,MAAMK,aAAaX,GAAG,qBAAH,EAA0BO,SAA1B,CAAnB;;EAEA,OACE,mBAACV,OAAOe,GAAR,EAAC;IACCR,GADD;IAECS,UAAS,UAFV;IAGCN,WAAWI,UAHZ;IAICG,SAAS;MACPC,QAAQ,CADD;MAEPC,SAAS,IAFF;MAGPC,SAAS,OAHF;MAIPC,eAAenB,cAAcM,KAAd,EAAsBc,CAAD,IAAO,GAAI,IAAIA,CAAJ,GAAS,MAAzC;IAJR,CAJV;IAUCC,OAAO;MACL,oBAAoB;QAClBC,UAAU,QADQ;QAElBR,UAAU,UAFQ;QAGlBS,KAAK,GAHa;QAIlBC,OAAO,GAJW;QAKlBC,QAAQ,GALU;QAMlBC,MAAM,GANY;QAOlBR,SAAS,MAPS;QAQlBS,gBAAgB,QARE;QASlBC,YAAY,QATM;QAUlBC,OAAO,MAVW;QAWlBb,QAAQ;MAXU,CADf;MAcL,sBAAsB;QACpBc,WAAW;MADS;IAdjB,CAVR;IA4BE,GAAGrB,IA5BL;IA8BEF;EA9BF,CAAD,CADF;AAkCD,CA7C0B,CAApB;AA+CPJ,YAAY4B,WAAZ,GAA0B,aAA1B","names":["chakra","forwardRef","mapResponsive","cx","Children","AspectRatio","props","ref","ratio","children","className","rest","child","only","_className","div","position","_before","height","content","display","paddingBottom","r","__css","overflow","top","right","bottom","left","justifyContent","alignItems","width","objectFit","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\layout\\src\\aspect-ratio.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children } from \"react\"\n\ninterface AspectRatioOptions {\n  /**\n   * The aspect ratio of the Box. Common values are:\n   *\n   * `21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`\n   */\n  ratio?: ResponsiveValue<number>\n}\n\nexport interface AspectRatioProps\n  extends Omit<HTMLChakraProps<\"div\">, \"aspectRatio\">,\n    AspectRatioOptions {}\n\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/aspectratiobox\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">(function (\n  props,\n  ref,\n) {\n  const { ratio = 4 / 3, children, className, ...rest } = props\n\n  // enforce single child\n  const child = Children.only(children)\n\n  const _className = cx(\"chakra-aspect-ratio\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      className={_className}\n      _before={{\n        height: 0,\n        content: `\"\"`,\n        display: \"block\",\n        paddingBottom: mapResponsive(ratio, (r) => `${(1 / r) * 100}%`),\n      }}\n      __css={{\n        \"& > *:not(style)\": {\n          overflow: \"hidden\",\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          bottom: \"0\",\n          left: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"100%\",\n        },\n        \"& > img, & > video\": {\n          objectFit: \"cover\",\n        },\n      }}\n      {...rest}\n    >\n      {child}\n    </chakra.div>\n  )\n})\n\nAspectRatio.displayName = \"AspectRatio\"\n"]},"metadata":{},"sourceType":"module"}
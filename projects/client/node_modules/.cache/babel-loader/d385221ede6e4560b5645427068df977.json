{"ast":null,"code":"'use client';\n\nimport { ModalTransition } from \"./chunk-UUJ2KOX3.mjs\";\nimport { ModalFocusScope } from \"./chunk-OUJDEM4M.mjs\";\nimport { useModalContext, useModalStyles } from \"./chunk-YEXLRKHC.mjs\"; // src/modal-content.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalContent = forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    containerProps: rootProps,\n    motionProps,\n    ...rest\n  } = props;\n  const {\n    getDialogProps,\n    getDialogContainerProps\n  } = useModalContext();\n  const dialogProps = getDialogProps(rest, ref);\n  const containerProps = getDialogContainerProps(rootProps);\n\n  const _className = cx(\"chakra-modal__content\", className);\n\n  const styles = useModalStyles();\n  const dialogStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0,\n    ...styles.dialog\n  };\n  const dialogContainerStyles = {\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"$100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    ...styles.dialogContainer\n  };\n  const {\n    motionPreset\n  } = useModalContext();\n  return /* @__PURE__ */jsx(ModalFocusScope, {\n    children: /* @__PURE__ */jsx(chakra.div, { ...containerProps,\n      className: \"chakra-modal__content-container\",\n      tabIndex: -1,\n      __css: dialogContainerStyles,\n      children: /* @__PURE__ */jsx(ModalTransition, {\n        preset: motionPreset,\n        motionProps,\n        className: _className,\n        ...dialogProps,\n        __css: dialogStyles,\n        children\n      })\n    })\n  });\n});\nModalContent.displayName = \"ModalContent\";\nexport { ModalContent };","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,EAAT,QAAmB,yBAAnB;AACA,SAEEC,MAFF,EAIEC,UAJF,QAKO,mBALP;AA2EU;AAhDH,IAAMC,eAAeD,WAC1B,CAACE,KAAD,EAAQC,GAAR,KAAgB;EACd,MAAM;IACJC,SADI;IAEJC,QAFI;IAGJC,gBAAgBC,SAHZ;IAIJC,WAJI;IAKJ,GAAGC;EALC,IAMFP,KANJ;EAQA,MAAM;IAAEQ,cAAF;IAAkBC;EAAlB,IAA8CC,iBAApD;EAEA,MAAMC,cAAcH,eAAeD,IAAf,EAAqBN,GAArB,CAApB;EACA,MAAMG,iBAAiBK,wBAAwBJ,SAAxB,CAAvB;;EAEA,MAAMO,aAAahB,GAAG,uBAAH,EAA4BM,SAA5B,CAAnB;;EAEA,MAAMW,SAASC,gBAAf;EAEA,MAAMC,eAAkC;IACtCC,SAAS,MAD6B;IAEtCC,eAAe,QAFuB;IAGtCC,UAAU,UAH4B;IAItCC,OAAO,MAJ+B;IAKtCC,SAAS,CAL6B;IAMtC,GAAGP,OAAOQ;EAN4B,CAAxC;EASA,MAAMC,wBAA2C;IAC/CN,SAAS,MADsC;IAE/CG,OAAO,OAFwC;IAG/CI,QAAQ,QAHuC;IAI/CL,UAAU,OAJqC;IAK/CM,MAAM,CALyC;IAM/CC,KAAK,CAN0C;IAO/C,GAAGZ,OAAOa;EAPqC,CAAjD;EAUA,MAAM;IAAEC;EAAF,IAAmBjB,iBAAzB;EAEA,OACE,mBAACkB,eAAD,EAAC;IACCzB,6BAACN,OAAOgC,GAAR,EAAC,EACE,GAAGzB,cADL;MAECF,WAAU,iCAFX;MAGC4B,UAAU,EAHX;MAICC,OAAOT,qBAJR;MAMCnB,6BAAC6B,eAAD,EAAC;QACCC,QAAQN,YADT;QAECrB,WAFD;QAGCJ,WAAWU,UAHZ;QAIE,GAAGD,WAJL;QAKCoB,OAAOhB,YALR;QAOEZ;MAPF,CAAD;IAND,CAAD;EADD,CAAD,CADF;AAoBF,CA5D0B,CAArB;AA+DPJ,aAAamC,WAAb,GAA2B,cAA3B","names":["cx","chakra","forwardRef","ModalContent","props","ref","className","children","containerProps","rootProps","motionProps","rest","getDialogProps","getDialogContainerProps","useModalContext","dialogProps","_className","styles","useModalStyles","dialogStyles","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","motionPreset","ModalFocusScope","div","tabIndex","__css","ModalTransition","preset","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\modal\\src\\modal-content.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  chakra,\n  SystemStyleObject,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { HTMLMotionProps } from \"framer-motion\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\nimport { ModalFocusScope } from \"./modal-focus\"\nimport { ModalTransition } from \"./modal-transition\"\n\nexport interface ModalContentProps extends HTMLChakraProps<\"section\"> {\n  /**\n   * The props to forward to the modal's content wrapper\n   */\n  containerProps?: HTMLChakraProps<\"div\">\n  /**\n   * The custom framer-motion transition to use for the modal\n   */\n  motionProps?: HTMLMotionProps<\"section\">\n}\n\n/**\n * ModalContent is used to group modal's content. It has all the\n * necessary `aria-*` properties to indicate that it is a modal\n */\nexport const ModalContent = forwardRef<ModalContentProps, \"section\">(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      containerProps: rootProps,\n      motionProps,\n      ...rest\n    } = props\n\n    const { getDialogProps, getDialogContainerProps } = useModalContext()\n\n    const dialogProps = getDialogProps(rest, ref) as any\n    const containerProps = getDialogContainerProps(rootProps)\n\n    const _className = cx(\"chakra-modal__content\", className)\n\n    const styles = useModalStyles()\n\n    const dialogStyles: SystemStyleObject = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog,\n    }\n\n    const dialogContainerStyles: SystemStyleObject = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer,\n    }\n\n    const { motionPreset } = useModalContext()\n\n    return (\n      <ModalFocusScope>\n        <chakra.div\n          {...containerProps}\n          className=\"chakra-modal__content-container\"\n          tabIndex={-1}\n          __css={dialogContainerStyles}\n        >\n          <ModalTransition\n            preset={motionPreset}\n            motionProps={motionProps}\n            className={_className}\n            {...dialogProps}\n            __css={dialogStyles}\n          >\n            {children}\n          </ModalTransition>\n        </chakra.div>\n      </ModalFocusScope>\n    )\n  },\n)\n\nModalContent.displayName = \"ModalContent\"\n"]},"metadata":{},"sourceType":"module"}
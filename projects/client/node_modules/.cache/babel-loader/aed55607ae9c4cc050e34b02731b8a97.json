{"ast":null,"code":"import { warn } from \"./chunk-M3TFMUOL.mjs\";\nimport { isNotNumber } from \"./chunk-Y5FGD7DM.mjs\"; // src/number.ts\n\nvar minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nfunction toNumber(value) {\n  const num = parseFloat(value);\n  return isNotNumber(num) ? 0 : num;\n}\n\nfunction toPrecision(value, precision) {\n  let nextValue = toNumber(value);\n  const scaleFactor = 10 ** (precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\n\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1;\n  let p = 0;\n\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n\n  return p;\n}\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction roundValueToStep(value, from, step) {\n  const nextValue = Math.round((value - from) / step) * step + from;\n  const precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\n\nfunction clampValue(value, min, max) {\n  if (value == null) return value;\n  warn({\n    condition: max < min,\n    message: \"clamp: max cannot be less than min\"\n  });\n  return Math.min(Math.max(value, min), max);\n}\n\nexport { minSafeInteger, maxSafeInteger, toPrecision, countDecimalPlaces, valueToPercent, percentToValue, roundValueToStep, clampValue };","map":{"version":3,"names":["warn","isNotNumber","minSafeInteger","Number","MIN_SAFE_INTEGER","maxSafeInteger","MAX_SAFE_INTEGER","toNumber","value","num","parseFloat","toPrecision","precision","nextValue","scaleFactor","Math","round","toFixed","toString","countDecimalPlaces","isFinite","e","p","valueToPercent","min","max","percentToValue","percent","roundValueToStep","from","step","clampValue","condition","message"],"sources":["C:/Purwadhika/JCWD Bandung/4. REAL PROJECT/JCWD0108-03/node_modules/@chakra-ui/utils/dist/chunk-YAFHXCR4.mjs"],"sourcesContent":["import {\n  warn\n} from \"./chunk-M3TFMUOL.mjs\";\nimport {\n  isNotNumber\n} from \"./chunk-Y5FGD7DM.mjs\";\n\n// src/number.ts\nvar minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\nfunction toNumber(value) {\n  const num = parseFloat(value);\n  return isNotNumber(num) ? 0 : num;\n}\nfunction toPrecision(value, precision) {\n  let nextValue = toNumber(value);\n  const scaleFactor = 10 ** (precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value))\n    return 0;\n  let e = 1;\n  let p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n}\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction roundValueToStep(value, from, step) {\n  const nextValue = Math.round((value - from) / step) * step + from;\n  const precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\nfunction clampValue(value, min, max) {\n  if (value == null)\n    return value;\n  warn({\n    condition: max < min,\n    message: \"clamp: max cannot be less than min\"\n  });\n  return Math.min(Math.max(value, min), max);\n}\n\nexport {\n  minSafeInteger,\n  maxSafeInteger,\n  toPrecision,\n  countDecimalPlaces,\n  valueToPercent,\n  percentToValue,\n  roundValueToStep,\n  clampValue\n};\n"],"mappings":"AAAA,SACEA,IADF,QAEO,sBAFP;AAGA,SACEC,WADF,QAEO,sBAFP,C,CAIA;;AACA,IAAIC,cAAc,GAAGC,MAAM,CAACC,gBAAP,IAA2B,CAAC,gBAAjD;AACA,IAAIC,cAAc,GAAGF,MAAM,CAACG,gBAAP,IAA2B,gBAAhD;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EACvB,MAAMC,GAAG,GAAGC,UAAU,CAACF,KAAD,CAAtB;EACA,OAAOP,WAAW,CAACQ,GAAD,CAAX,GAAmB,CAAnB,GAAuBA,GAA9B;AACD;;AACD,SAASE,WAAT,CAAqBH,KAArB,EAA4BI,SAA5B,EAAuC;EACrC,IAAIC,SAAS,GAAGN,QAAQ,CAACC,KAAD,CAAxB;EACA,MAAMM,WAAW,GAAG,OAAOF,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgC,EAAvC,CAApB;EACAC,SAAS,GAAGE,IAAI,CAACC,KAAL,CAAWH,SAAS,GAAGC,WAAvB,IAAsCA,WAAlD;EACA,OAAOF,SAAS,GAAGC,SAAS,CAACI,OAAV,CAAkBL,SAAlB,CAAH,GAAkCC,SAAS,CAACK,QAAV,EAAlD;AACD;;AACD,SAASC,kBAAT,CAA4BX,KAA5B,EAAmC;EACjC,IAAI,CAACL,MAAM,CAACiB,QAAP,CAAgBZ,KAAhB,CAAL,EACE,OAAO,CAAP;EACF,IAAIa,CAAC,GAAG,CAAR;EACA,IAAIC,CAAC,GAAG,CAAR;;EACA,OAAOP,IAAI,CAACC,KAAL,CAAWR,KAAK,GAAGa,CAAnB,IAAwBA,CAAxB,KAA8Bb,KAArC,EAA4C;IAC1Ca,CAAC,IAAI,EAAL;IACAC,CAAC,IAAI,CAAL;EACD;;EACD,OAAOA,CAAP;AACD;;AACD,SAASC,cAAT,CAAwBf,KAAxB,EAA+BgB,GAA/B,EAAoCC,GAApC,EAAyC;EACvC,OAAO,CAACjB,KAAK,GAAGgB,GAAT,IAAgB,GAAhB,IAAuBC,GAAG,GAAGD,GAA7B,CAAP;AACD;;AACD,SAASE,cAAT,CAAwBC,OAAxB,EAAiCH,GAAjC,EAAsCC,GAAtC,EAA2C;EACzC,OAAO,CAACA,GAAG,GAAGD,GAAP,IAAcG,OAAd,GAAwBH,GAA/B;AACD;;AACD,SAASI,gBAAT,CAA0BpB,KAA1B,EAAiCqB,IAAjC,EAAuCC,IAAvC,EAA6C;EAC3C,MAAMjB,SAAS,GAAGE,IAAI,CAACC,KAAL,CAAW,CAACR,KAAK,GAAGqB,IAAT,IAAiBC,IAA5B,IAAoCA,IAApC,GAA2CD,IAA7D;EACA,MAAMjB,SAAS,GAAGO,kBAAkB,CAACW,IAAD,CAApC;EACA,OAAOnB,WAAW,CAACE,SAAD,EAAYD,SAAZ,CAAlB;AACD;;AACD,SAASmB,UAAT,CAAoBvB,KAApB,EAA2BgB,GAA3B,EAAgCC,GAAhC,EAAqC;EACnC,IAAIjB,KAAK,IAAI,IAAb,EACE,OAAOA,KAAP;EACFR,IAAI,CAAC;IACHgC,SAAS,EAAEP,GAAG,GAAGD,GADd;IAEHS,OAAO,EAAE;EAFN,CAAD,CAAJ;EAIA,OAAOlB,IAAI,CAACS,GAAL,CAAST,IAAI,CAACU,GAAL,CAASjB,KAAT,EAAgBgB,GAAhB,CAAT,EAA+BC,GAA/B,CAAP;AACD;;AAED,SACEvB,cADF,EAEEG,cAFF,EAGEM,WAHF,EAIEQ,kBAJF,EAKEI,cALF,EAMEG,cANF,EAOEE,gBAPF,EAQEG,UARF"},"metadata":{},"sourceType":"module"}
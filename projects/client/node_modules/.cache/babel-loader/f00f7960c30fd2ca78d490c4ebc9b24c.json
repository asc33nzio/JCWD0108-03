{"ast":null,"code":"'use client';\n\nimport { TRANSITION_DEFAULTS, withDelay } from \"./chunk-6NHXDBFO.mjs\"; // src/slide-fade.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar variants = {\n  initial: _ref => {\n    let {\n      offsetX,\n      offsetY,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n\n    var _a;\n\n    return {\n      opacity: 0,\n      x: offsetX,\n      y: offsetY,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: _ref2 => {\n    let {\n      transition,\n      transitionEnd,\n      delay\n    } = _ref2;\n\n    var _a;\n\n    return {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: _ref3 => {\n    let {\n      offsetY,\n      offsetX,\n      transition,\n      transitionEnd,\n      reverse,\n      delay\n    } = _ref3;\n\n    var _a;\n\n    const offset = {\n      x: offsetX,\n      y: offsetY\n    };\n    return {\n      opacity: 0,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...(reverse ? { ...offset,\n        transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n      } : {\n        transitionEnd: { ...offset,\n          ...(transitionEnd == null ? void 0 : transitionEnd.exit)\n        }\n      })\n    };\n  }\n};\nvar slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nvar SlideFade = forwardRef(function SlideFade2(props, ref) {\n  const {\n    unmountOnExit,\n    in: isOpen,\n    reverse = true,\n    className,\n    offsetX = 0,\n    offsetY = 8,\n    transition,\n    transitionEnd,\n    delay,\n    ...rest\n  } = props;\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    offsetX,\n    offsetY,\n    reverse,\n    transition,\n    transitionEnd,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ref,\n      className: cx(\"chakra-offset-slide\", className),\n      custom,\n      ...slideFadeConfig,\n      animate,\n      ...rest\n    })\n  });\n});\nSlideFade.displayName = \"SlideFade\";\nexport { slideFadeConfig, SlideFade };","map":{"version":3,"mappings":";;;;AAAA,SAASA,EAAT,QAAmB,yBAAnB;AACA,SACEC,eADF,EAGEC,MAHF,QAKO,eALP;AAMA,SAASC,UAAT,QAA2B,OAA3B;AAkGU;AAvEV,IAAMC,WAAuC;EAC3CC,SAAS,QAAyD;IAAA,IAAxD;MAAEC,OAAF;MAAWC,OAAX;MAAoBC,UAApB;MAAgCC,aAAhC;MAA+CC;IAA/C,CAAwD;;IAnCpE;;IAmCwE;MACpEC,SAAS,CAD2D;MAEpEC,GAAGN,OAFiE;MAGpEO,GAAGN,OAHiE;MAIpEC,aACEM,8CAAYC,IADd,KACE,IADF,GACED,EADF,GACsBE,UAAUD,IAAV,CAAeE,oBAAoBF,IAAnC,EAAyCL,KAAzC,CAL8C;MAMpED,eAAeA,+CAAeM;IANsC;EAOtE,CAR2C;EAS3CG,OAAO,SAAuC;IAAA,IAAtC;MAAEV,UAAF;MAAcC,aAAd;MAA6BC;IAA7B,CAAsC;;IA3ChD;;IA2CoD;MAChDC,SAAS,CADuC;MAEhDC,GAAG,CAF6C;MAGhDC,GAAG,CAH6C;MAIhDL,aACEM,8CAAYI,KADd,KACE,IADF,GACEJ,EADF,GACuBE,UAAUE,KAAV,CAAgBD,oBAAoBC,KAApC,EAA2CR,KAA3C,CALyB;MAMhDD,eAAeA,+CAAeS;IANkB;EAOlD,CAhB2C;EAiB3CH,MAAM,SAAqE;IAAA,IAApE;MAAER,OAAF;MAAWD,OAAX;MAAoBE,UAApB;MAAgCC,aAAhC;MAA+CU,OAA/C;MAAwDT;IAAxD,CAAoE;;IAnD7E;;IAoDI,MAAMU,SAAS;MAAER,GAAGN,OAAL;MAAcO,GAAGN;IAAjB,CAAf;IACA,OAAO;MACLI,SAAS,CADJ;MAELH,aACEM,8CAAYC,IADd,KACE,IADF,GACED,EADF,GACsBE,UAAUD,IAAV,CAAeE,oBAAoBF,IAAnC,EAAyCL,KAAzC,CAHjB;MAIL,IAAIS,UACA,EAAE,GAAGC,MAAL;QAAaX,eAAeA,+CAAeM;MAA3C,CADA,GAEA;QAAEN,eAAe,EAAE,GAAGW,MAAL;UAAa,IAAGX,+CAAeM,IAAlB;QAAb;MAAjB,CAFJ;IAJK,CAAP;EAQF;AA3B2C,CAA7C;AA8BO,IAAMM,kBAA0C;EACrDhB,SAAS,SAD4C;EAErDiB,SAAS,OAF4C;EAGrDP,MAAM,MAH+C;EAIrDX;AAJqD,CAAhD;AAWA,IAAMmB,YAAYpB,WACvB,SAASoB,UAAT,CAAmBC,KAAnB,EAA0BC,GAA1B,EAA+B;EAC7B,MAAM;IACJC,aADI;IAEJC,IAAIC,MAFA;IAGJT,UAAU,IAHN;IAIJU,SAJI;IAKJvB,UAAU,CALN;IAMJC,UAAU,CANN;IAOJC,UAPI;IAQJC,aARI;IASJC,KATI;IAUJ,GAAGoB;EAVC,IAWFN,KAXJ;EAaA,MAAMO,OAAOL,gBAAgBE,UAAUF,aAA1B,GAA0C,IAAvD;EACA,MAAMJ,UAAUM,UAAUF,aAAV,GAA0B,OAA1B,GAAoC,MAApD;EAEA,MAAMM,SAAS;IACb1B,OADa;IAEbC,OAFa;IAGbY,OAHa;IAIbX,UAJa;IAKbC,aALa;IAMbC;EANa,CAAf;EASA,OACE,mBAACT,eAAD,EAAC;IAAgB+B,MAAhB;IACEC,kBACC,mBAAC/B,OAAOgC,GAAR,EAAC;MACCT,GADD;MAECI,WAAW7B,GAAG,qBAAH,EAA0B6B,SAA1B,CAFZ;MAGCG,MAHD;MAIE,GAAGX,eAJL;MAKCC,OALD;MAME,GAAGQ;IANL,CAAD;EAFH,CAAD,CADF;AAcF,CAzCuB,CAAlB;AA4CPP,UAAUY,WAAV,GAAwB,WAAxB","names":["cx","AnimatePresence","motion","forwardRef","variants","initial","offsetX","offsetY","transition","transitionEnd","delay","opacity","x","y","_a","exit","withDelay","TRANSITION_DEFAULTS","enter","reverse","offset","slideFadeConfig","animate","SlideFade","props","ref","unmountOnExit","in","isOpen","className","rest","show","custom","children","div","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\transition\\src\\slide-fade.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface SlideFadeOptions {\n  /**\n   * The offset on the horizontal or `x` axis\n   * @default 0\n   */\n  offsetX?: string | number\n  /**\n   * The offset on the vertical or `y` axis\n   * @default 8\n   */\n  offsetY?: string | number\n  /**\n   * If `true`, the element will be transitioned back to the offset when it leaves.\n   * Otherwise, it'll only fade out\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<SlideFadeOptions> = {\n  initial: ({ offsetX, offsetY, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n  enter: ({ transition, transitionEnd, delay }) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ offsetY, offsetX, transition, transitionEnd, reverse, delay }) => {\n    const offset = { x: offsetX, y: offsetY }\n    return {\n      opacity: 0,\n      transition:\n        transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...(reverse\n        ? { ...offset, transitionEnd: transitionEnd?.exit }\n        : { transitionEnd: { ...offset, ...transitionEnd?.exit } }),\n    }\n  },\n}\n\nexport const slideFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface SlideFadeProps\n  extends SlideFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const SlideFade = forwardRef<HTMLDivElement, SlideFadeProps>(\n  function SlideFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      className,\n      offsetX = 0,\n      offsetY = 8,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            custom={custom}\n            {...slideFadeConfig}\n            animate={animate}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nSlideFade.displayName = \"SlideFade\"\n"]},"metadata":{},"sourceType":"module"}
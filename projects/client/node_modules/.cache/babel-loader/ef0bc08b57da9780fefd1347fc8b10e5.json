{"ast":null,"code":"'use client';\n\nimport { usePopoverContext } from \"./chunk-Z3POGKNI.mjs\"; // src/popover-transition.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { motion } from \"framer-motion\";\nimport { jsx } from \"react/jsx-runtime\";\n\nfunction mergeVariants(variants) {\n  if (!variants) return;\n  return {\n    enter: { ...variants.enter,\n      visibility: \"visible\"\n    },\n    exit: { ...variants.exit,\n      transitionEnd: {\n        visibility: \"hidden\"\n      }\n    }\n  };\n}\n\nvar scaleFade = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1]\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1]\n    }\n  }\n};\nvar MotionSection = chakra(motion.section);\nvar PopoverTransition = forwardRef(function PopoverTransition2(props, ref) {\n  const {\n    variants = scaleFade,\n    ...rest\n  } = props;\n  const {\n    isOpen\n  } = usePopoverContext();\n  return /* @__PURE__ */jsx(MotionSection, {\n    ref,\n    variants: mergeVariants(variants),\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\",\n    ...rest\n  });\n});\nPopoverTransition.displayName = \"PopoverTransition\";\nexport { PopoverTransition };","map":{"version":3,"mappings":";;;;AAAA,SAASA,MAAT,EAAkCC,UAAlC,QAAoD,mBAApD;AACA,SAA0BC,MAA1B,QAAiD,eAAjD;AAuEI;;AA/CJ,SAASC,aAAT,CAAuBC,QAAvB,EAAuD;EACrD,IAAI,CAACA,QAAL,EAAe;EACf,OAAO;IACLC,OAAO,EACL,GAAGD,SAASC,KADP;MAELC,YAAY;IAFP,CADF;IAKLC,MAAM,EACJ,GAAGH,SAASG,IADR;MAEJC,eAAe;QACbF,YAAY;MADC;IAFX;EALD,CAAP;AAYF;;AAEA,IAAMG,YAA4B;EAChCF,MAAM;IACJG,SAAS,CADL;IAEJC,OAAO,IAFH;IAGJC,YAAY;MACVC,UAAU,GADA;MAEVC,MAAM,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ;IAFI;EAHR,CAD0B;EAShCT,OAAO;IACLM,OAAO,CADF;IAELD,SAAS,CAFJ;IAGLE,YAAY;MACVC,UAAU,IADA;MAEVC,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,CAAZ;IAFI;EAHP;AATyB,CAAlC;AAmBA,IAAMC,gBAAgBf,OAAOE,OAAOc,OAAd,CAAtB;AAKO,IAAMC,oBAAoBhB,WAAW,SAASgB,kBAAT,CAC1CC,KAD0C,EAE1CC,GAF0C,EAG1C;EACA,MAAM;IAAEf,WAAWK,SAAb;IAAwB,GAAGW;EAA3B,IAAoCF,KAA1C;EACA,MAAM;IAAEG;EAAF,IAAaC,mBAAnB;EACA,OACE,mBAACP,aAAD,EAAC;IACCI,GADD;IAECf,UAAUD,cAAcC,QAAd,CAFX;IAGCmB,SAAS,KAHV;IAICC,SAASH,SAAS,OAAT,GAAmB,MAJ7B;IAKE,GAAGD;EALL,CAAD,CADF;AASD,CAfgC,CAA1B;AAiBPH,kBAAkBQ,WAAlB,GAAgC,mBAAhC","names":["chakra","forwardRef","motion","mergeVariants","variants","enter","visibility","exit","transitionEnd","scaleFade","opacity","scale","transition","duration","ease","MotionSection","section","PopoverTransition","props","ref","rest","isOpen","usePopoverContext","initial","animate","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\popover\\src\\popover-transition.tsx"],"sourcesContent":["import { chakra, HTMLChakraProps, forwardRef } from \"@chakra-ui/system\"\nimport { HTMLMotionProps, motion, Variant } from \"framer-motion\"\nimport React from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\ntype HTMLMotionChakraProps<T extends keyof React.ReactHTML> = Omit<\n  HTMLChakraProps<T>,\n  keyof HTMLMotionProps<T>\n> &\n  Omit<\n    HTMLMotionProps<T>,\n    | \"style\"\n    | \"onDrag\"\n    | \"onDragEnd\"\n    | \"onDragStart\"\n    | \"onAnimationStart\"\n    | \"variants\"\n    | \"transition\"\n    | \"children\"\n  > & {\n    variants?: MotionVariants\n  }\n\ntype MotionVariants = Partial<Record<\"enter\" | \"exit\", Variant>>\n\nfunction mergeVariants(variants?: MotionVariants): any {\n  if (!variants) return\n  return {\n    enter: {\n      ...variants.enter,\n      visibility: \"visible\",\n    },\n    exit: {\n      ...variants.exit,\n      transitionEnd: {\n        visibility: \"hidden\",\n      },\n    },\n  }\n}\n\nconst scaleFade: MotionVariants = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1],\n    },\n  },\n}\n\nconst MotionSection = chakra(motion.section)\n\nexport interface PopoverTransitionProps\n  extends HTMLMotionChakraProps<\"section\"> {}\n\nexport const PopoverTransition = forwardRef(function PopoverTransition(\n  props: PopoverTransitionProps,\n  ref: React.Ref<any>,\n) {\n  const { variants = scaleFade, ...rest } = props\n  const { isOpen } = usePopoverContext()\n  return (\n    <MotionSection\n      ref={ref}\n      variants={mergeVariants(variants)}\n      initial={false}\n      animate={isOpen ? \"enter\" : \"exit\"}\n      {...rest}\n    />\n  )\n})\n\nPopoverTransition.displayName = \"PopoverTransition\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use client';\n\nimport { MenuCommand } from \"./chunk-HIKMFA4A.mjs\";\nimport { StyledMenuItem } from \"./chunk-ZPR2BOOS.mjs\";\nimport { MenuIcon } from \"./chunk-PP6MIROW.mjs\";\nimport { useMenuItem } from \"./chunk-2D5GRB32.mjs\"; // src/menu-item.tsx\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar MenuItem = forwardRef((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props;\n  const menuitemProps = useMenuItem(rest, ref);\n  const shouldWrap = icon || command;\n\n  const _children = shouldWrap ? /* @__PURE__ */jsx(\"span\", {\n    style: {\n      pointerEvents: \"none\",\n      flex: 1\n    },\n    children\n  }) : children;\n\n  return /* @__PURE__ */jsxs(StyledMenuItem, { ...menuitemProps,\n    className: cx(\"chakra-menu__menuitem\", menuitemProps.className),\n    children: [icon && /* @__PURE__ */jsx(MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      children: icon\n    }), _children, command && /* @__PURE__ */jsx(MenuCommand, {\n      marginStart: commandSpacing,\n      children: command\n    })]\n  });\n});\nMenuItem.displayName = \"MenuItem\";\nexport { MenuItem };","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,UAAT,QAAyD,mBAAzD;AACA,SAASC,EAAT,QAAmB,yBAAnB;AA6DI,cAMAC,IANA;AAfG,IAAMC,WAAWH,WAAoC,CAACI,KAAD,EAAQC,GAAR,KAAgB;EAC1E,MAAM;IACJC,IADI;IAEJC,cAAc,SAFV;IAGJC,OAHI;IAIJC,iBAAiB,SAJb;IAKJC,QALI;IAMJ,GAAGC;EANC,IAOFP,KAPJ;EASA,MAAMQ,gBAAgBC,YAAYF,IAAZ,EAAkBN,GAAlB,CAAtB;EAEA,MAAMS,aAAaR,QAAQE,OAA3B;;EAEA,MAAMO,YAAYD,aAChB,mBAAC,MAAD,EAAC;IAAKE,OAAO;MAAEC,eAAe,MAAjB;MAAyBC,MAAM;IAA/B,CAAZ;IAAiDR;EAAjD,CAAD,CADgB,GAGhBA,QAHF;;EAMA,OACE,oBAACS,cAAD,EAAC,EACE,GAAGP,aADL;IAECQ,WAAWnB,GAAG,uBAAH,EAA4BW,cAAcQ,SAA1C,CAFZ;IAIEV,mBACC,mBAACW,QAAD,EAAC;MAASC,UAAS,OAAlB;MAA0BC,WAAWhB,WAArC;MACEG;IADF,CAAD,CADD,EAKAK,SALA,EAMAP,WACC,mBAACgB,WAAD,EAAC;MAAYC,aAAahB,cAAzB;MAA0CC;IAA1C,CAAD,CAPD;EAJF,CAAD,CADF;AAgBD,CApCuB,CAAjB;AAsCPP,SAASuB,WAAT,GAAuB,UAAvB","names":["forwardRef","cx","jsxs","MenuItem","props","ref","icon","iconSpacing","command","commandSpacing","children","rest","menuitemProps","useMenuItem","shouldWrap","_children","style","pointerEvents","flex","StyledMenuItem","className","MenuIcon","fontSize","marginEnd","MenuCommand","marginStart","displayName"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\menu\\src\\menu-item.tsx"],"sourcesContent":["import { forwardRef, HTMLChakraProps, SystemProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { MenuCommand } from \"./menu-command\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { useMenuItem, UseMenuItemProps } from \"./use-menu\"\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\ninterface MenuItemOptions\n  extends Pick<\n    UseMenuItemProps,\n    \"isDisabled\" | \"isFocusable\" | \"closeOnSelect\"\n  > {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\ntype HTMLAttributes = React.HTMLAttributes<HTMLElement>\n\n/**\n * Use prop `isDisabled` instead\n */\ntype IsDisabledProps = \"disabled\" | \"aria-disabled\"\n\nexport interface MenuItemProps\n  extends Omit<HTMLChakraProps<\"button\">, IsDisabledProps>,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuitemProps = useMenuItem(rest, ref) as HTMLAttributes\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <span style={{ pointerEvents: \"none\", flex: 1 }}>{children}</span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuitemProps}\n      className={cx(\"chakra-menu__menuitem\", menuitemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nMenuItem.displayName = \"MenuItem\"\n"]},"metadata":{},"sourceType":"module"}
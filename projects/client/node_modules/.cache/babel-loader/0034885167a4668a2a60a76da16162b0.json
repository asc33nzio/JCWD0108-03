{"ast":null,"code":"/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n  var _a;\n\n  if (typeof next === \"number\") {\n    return next;\n  } else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n    return Math.max(0, current + parseFloat(next));\n  } else if (next === \"<\") {\n    return prev;\n  } else {\n    return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n  }\n}\n\nexport { calcNextTime };","map":{"version":3,"names":["calcNextTime","current","next","prev","labels","_a","startsWith","Math","max","parseFloat","get"],"sources":["C:/Purwadhika/JCWD Bandung/4. REAL PROJECT/JCWD0108-03/node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs"],"sourcesContent":["/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmD;EAC/C,IAAIC,EAAJ;;EACA,IAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;IAC1B,OAAOA,IAAP;EACH,CAFD,MAGK,IAAIA,IAAI,CAACI,UAAL,CAAgB,GAAhB,KAAwBJ,IAAI,CAACI,UAAL,CAAgB,GAAhB,CAA5B,EAAkD;IACnD,OAAOC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYP,OAAO,GAAGQ,UAAU,CAACP,IAAD,CAAhC,CAAP;EACH,CAFI,MAGA,IAAIA,IAAI,KAAK,GAAb,EAAkB;IACnB,OAAOC,IAAP;EACH,CAFI,MAGA;IACD,OAAO,CAACE,EAAE,GAAGD,MAAM,CAACM,GAAP,CAAWR,IAAX,CAAN,MAA4B,IAA5B,IAAoCG,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyDJ,OAAhE;EACH;AACJ;;AAED,SAASD,YAAT"},"metadata":{},"sourceType":"module"}
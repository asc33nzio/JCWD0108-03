{"ast":null,"code":"'use client'; // src/index.ts\n\nimport { useEffect, useRef } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\n\nfunction useOutsideClick(props) {\n  const {\n    ref,\n    handler,\n    enabled = true\n  } = props;\n  const savedHandler = useCallbackRef(handler);\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  const state = stateRef.current;\n  useEffect(() => {\n    if (!enabled) return;\n\n    const onPointerDown = e => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n\n    const onMouseUp = event => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    const onTouchEnd = event => {\n      state.ignoreEmulatedMouseEvents = true;\n\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    const doc = getOwnerDocument(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state, enabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  var _a;\n\n  const target = event.target;\n\n  if (target) {\n    const doc = getOwnerDocument(target);\n    if (!doc.contains(target)) return false;\n  }\n\n  return !((_a = ref.current) == null ? void 0 : _a.contains(target));\n}\n\nfunction getOwnerDocument(node) {\n  var _a;\n\n  return (_a = node == null ? void 0 : node.ownerDocument) != null ? _a : document;\n}\n\nexport { useOutsideClick };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,mCAA/B;;AAqBO,SAASC,eAAT,CAAyBC,KAAzB,EAAsD;EAC3D,MAAM;IAAEC,GAAF;IAAOC,OAAP;IAAgBC,UAAU;EAA1B,IAAmCH,KAAzC;EACA,MAAMI,eAAeN,eAAeI,OAAf,CAArB;EAEA,MAAMG,WAAWR,OAAO;IACtBS,eAAe,KADO;IAEtBC,2BAA2B;EAFL,CAAP,CAAjB;EAKA,MAAMC,QAAQH,SAASI,OAAvB;EAEAb,UAAU,MAAM;IACd,IAAI,CAACO,OAAL,EAAc;;IACd,MAAMO,gBAAsBC,CAAD,IAAqB;MAC9C,IAAIC,aAAaD,CAAb,EAAgBV,GAAhB,CAAJ,EAA0B;QACxBO,MAAMF,aAAN,GAAsB,IAAtB;MACF;IACF,CAJA;;IAMA,MAAMO,YAAkBC,KAAD,IAAuB;MAC5C,IAAIN,MAAMD,yBAAV,EAAqC;QACnCC,MAAMD,yBAAN,GAAkC,KAAlC;QACA;MACF;;MAEA,IAAIC,MAAMF,aAAN,IAAuBJ,OAAvB,IAAkCU,aAAaE,KAAb,EAAoBb,GAApB,CAAtC,EAAgE;QAC9DO,MAAMF,aAAN,GAAsB,KAAtB;QACAF,aAAaU,KAAb;MACF;IACF,CAVA;;IAYA,MAAMC,aAAcD,KAAD,IAAuB;MACxCN,MAAMD,yBAAN,GAAkC,IAAlC;;MACA,IAAIL,WAAWM,MAAMF,aAAjB,IAAkCM,aAAaE,KAAb,EAAoBb,GAApB,CAAtC,EAAgE;QAC9DO,MAAMF,aAAN,GAAsB,KAAtB;QACAF,aAAaU,KAAb;MACF;IACF,CANA;;IAQA,MAAME,MAAMC,iBAAiBhB,IAAIQ,OAArB,CAAZ;IACAO,IAAIE,gBAAJ,CAAqB,WAArB,EAAkCR,aAAlC,EAAiD,IAAjD;IACAM,IAAIE,gBAAJ,CAAqB,SAArB,EAAgCL,SAAhC,EAA2C,IAA3C;IACAG,IAAIE,gBAAJ,CAAqB,YAArB,EAAmCR,aAAnC,EAAkD,IAAlD;IACAM,IAAIE,gBAAJ,CAAqB,UAArB,EAAiCH,UAAjC,EAA6C,IAA7C;IAEA,OAAO,MAAM;MACXC,IAAIG,mBAAJ,CAAwB,WAAxB,EAAqCT,aAArC,EAAoD,IAApD;MACAM,IAAIG,mBAAJ,CAAwB,SAAxB,EAAmCN,SAAnC,EAA8C,IAA9C;MACAG,IAAIG,mBAAJ,CAAwB,YAAxB,EAAsCT,aAAtC,EAAqD,IAArD;MACAM,IAAIG,mBAAJ,CAAwB,UAAxB,EAAoCJ,UAApC,EAAgD,IAAhD;IACF,CALA;EAMF,CAxCA,EAwCG,CAACb,OAAD,EAAUD,GAAV,EAAeG,YAAf,EAA6BI,KAA7B,EAAoCL,OAApC,CAxCH;AAyCF;;AAEA,SAASS,YAAT,CAAsBE,KAAtB,EAAoCb,GAApC,EAAuE;EA5EvE;;EA6EE,MAAMmB,SAASN,MAAMM,MAArB;;EAEA,IAAIA,MAAJ,EAAY;IACV,MAAMJ,MAAMC,iBAAiBG,MAAjB,CAAZ;IACA,IAAI,CAACJ,IAAIK,QAAJ,CAAaD,MAAb,CAAL,EAA2B,OAAO,KAAP;EAC7B;;EAEA,OAAO,GAACE,SAAIb,OAAL,KAAC,IAAD,GAAC,MAAD,GAACa,GAAaD,QAAb,CAAsBD,MAAtB,CAAD,CAAP;AACF;;AAEA,SAASH,gBAAT,CAA0BM,IAA1B,EAA2D;EAvF3D;;EAwFE,QAAOD,kCAAME,aAAb,KAAO,IAAP,GAAOF,EAAP,GAA8BG,QAA9B;AACF","names":["useEffect","useRef","useCallbackRef","useOutsideClick","props","ref","handler","enabled","savedHandler","stateRef","isPointerDown","ignoreEmulatedMouseEvents","state","current","onPointerDown","e","isValidEvent","onMouseUp","event","onTouchEnd","doc","getOwnerDocument","addEventListener","removeEventListener","target","contains","_a","node","ownerDocument","document"],"sources":["C:\\Purwadhika\\JCWD Bandung\\4. REAL PROJECT\\JCWD0108-03\\node_modules\\@chakra-ui\\react-use-outside-click\\src\\index.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: React.RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: Event, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n\nfunction getOwnerDocument(node?: Element | null): Document {\n  return node?.ownerDocument ?? document\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useUpdateEffect } from \"./chunk-5AOLTBA4.mjs\";\nimport { useEventListener } from \"./chunk-34PRFZWK.mjs\";\nimport { useSafeLayoutEffect } from \"./chunk-IYF65QR3.mjs\"; // src/use-focus-on-show.ts\n\nimport { contains, focus, getAllFocusable, isRefObject } from \"@chakra-ui/utils\";\nimport { useCallback, useRef } from \"react\";\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\n\nfunction useFocusOnShow(target) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  const {\n    focusRef,\n    preventScroll,\n    shouldFocus,\n    visible\n  } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return;\n    autoFocusRef.current = false;\n    if (contains(element, document.activeElement)) return;\n\n    if (focusRef == null ? void 0 : focusRef.current) {\n      focus(focusRef.current, {\n        preventScroll,\n        nextTick: true\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n\n      if (tabbableEls.length > 0) {\n        focus(tabbableEls[0], {\n          preventScroll,\n          nextTick: true\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(\"transitionend\", onFocus, element);\n}\n\nexport { useFocusOnShow };","map":{"version":3,"names":["useUpdateEffect","useEventListener","useSafeLayoutEffect","contains","focus","getAllFocusable","isRefObject","useCallback","useRef","defaultOptions","preventScroll","shouldFocus","useFocusOnShow","target","options","focusRef","visible","element","current","autoFocusValue","autoFocusRef","lastVisibleRef","onFocus","document","activeElement","nextTick","tabbableEls","length"],"sources":["C:/Purwadhika/JCWD Bandung/4. REAL PROJECT/JCWD0108-03/node_modules/@chakra-ui/hooks/dist/chunk-S5MINBBA.mjs"],"sourcesContent":["import {\n  useUpdateEffect\n} from \"./chunk-5AOLTBA4.mjs\";\nimport {\n  useEventListener\n} from \"./chunk-34PRFZWK.mjs\";\nimport {\n  useSafeLayoutEffect\n} from \"./chunk-IYF65QR3.mjs\";\n\n// src/use-focus-on-show.ts\nimport {\n  contains,\n  focus,\n  getAllFocusable,\n  isRefObject\n} from \"@chakra-ui/utils\";\nimport { useCallback, useRef } from \"react\";\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target, options = defaultOptions) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current)\n      return;\n    autoFocusRef.current = false;\n    if (contains(element, document.activeElement))\n      return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      focus(focusRef.current, { preventScroll, nextTick: true });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        focus(tabbableEls[0], { preventScroll, nextTick: true });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(\"transitionend\", onFocus, element);\n}\n\nexport {\n  useFocusOnShow\n};\n"],"mappings":"AAAA,SACEA,eADF,QAEO,sBAFP;AAGA,SACEC,gBADF,QAEO,sBAFP;AAGA,SACEC,mBADF,QAEO,sBAFP,C,CAIA;;AACA,SACEC,QADF,EAEEC,KAFF,EAGEC,eAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;AACA,IAAIC,cAAc,GAAG;EACnBC,aAAa,EAAE,IADI;EAEnBC,WAAW,EAAE;AAFM,CAArB;;AAIA,SAASC,cAAT,CAAwBC,MAAxB,EAA0D;EAAA,IAA1BC,OAA0B,uEAAhBL,cAAgB;EACxD,MAAM;IAAEM,QAAF;IAAYL,aAAZ;IAA2BC,WAA3B;IAAwCK;EAAxC,IAAoDF,OAA1D;EACA,MAAMG,OAAO,GAAGX,WAAW,CAACO,MAAD,CAAX,GAAsBA,MAAM,CAACK,OAA7B,GAAuCL,MAAvD;EACA,MAAMM,cAAc,GAAGR,WAAW,IAAIK,OAAtC;EACA,MAAMI,YAAY,GAAGZ,MAAM,CAACW,cAAD,CAA3B;EACA,MAAME,cAAc,GAAGb,MAAM,CAACQ,OAAD,CAA7B;EACAd,mBAAmB,CAAC,MAAM;IACxB,IAAI,CAACmB,cAAc,CAACH,OAAhB,IAA2BF,OAA/B,EAAwC;MACtCI,YAAY,CAACF,OAAb,GAAuBC,cAAvB;IACD;;IACDE,cAAc,CAACH,OAAf,GAAyBF,OAAzB;EACD,CALkB,EAKhB,CAACA,OAAD,EAAUG,cAAV,CALgB,CAAnB;EAMA,MAAMG,OAAO,GAAGf,WAAW,CAAC,MAAM;IAChC,IAAI,CAACS,OAAD,IAAY,CAACC,OAAb,IAAwB,CAACG,YAAY,CAACF,OAA1C,EACE;IACFE,YAAY,CAACF,OAAb,GAAuB,KAAvB;IACA,IAAIf,QAAQ,CAACc,OAAD,EAAUM,QAAQ,CAACC,aAAnB,CAAZ,EACE;;IACF,IAAIT,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACG,OAAzC,EAAkD;MAChDd,KAAK,CAACW,QAAQ,CAACG,OAAV,EAAmB;QAAER,aAAF;QAAiBe,QAAQ,EAAE;MAA3B,CAAnB,CAAL;IACD,CAFD,MAEO;MACL,MAAMC,WAAW,GAAGrB,eAAe,CAACY,OAAD,CAAnC;;MACA,IAAIS,WAAW,CAACC,MAAZ,GAAqB,CAAzB,EAA4B;QAC1BvB,KAAK,CAACsB,WAAW,CAAC,CAAD,CAAZ,EAAiB;UAAEhB,aAAF;UAAiBe,QAAQ,EAAE;QAA3B,CAAjB,CAAL;MACD;IACF;EACF,CAd0B,EAcxB,CAACT,OAAD,EAAUN,aAAV,EAAyBO,OAAzB,EAAkCF,QAAlC,CAdwB,CAA3B;EAeAf,eAAe,CAAC,MAAM;IACpBsB,OAAO;EACR,CAFc,EAEZ,CAACA,OAAD,CAFY,CAAf;EAGArB,gBAAgB,CAAC,eAAD,EAAkBqB,OAAlB,EAA2BL,OAA3B,CAAhB;AACD;;AAED,SACEL,cADF"},"metadata":{},"sourceType":"module"}